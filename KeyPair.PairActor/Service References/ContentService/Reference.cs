//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KeyPair.PairActor.ContentService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AvatarData", Namespace="")]
    [System.SerializableAttribute()]
    public partial class AvatarData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private KeyPair.PairActor.ContentService.AvatarDataPart[] AvatarDataPartField;
        
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KeyPair.PairActor.ContentService.GD GenderField;
        
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsSuggestedAvatarNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> UTDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ValidateDisplayNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.AvatarDataPart[] AvatarDataPart {
            get {
                return this.AvatarDataPartField;
            }
            set {
                if ((object.ReferenceEquals(this.AvatarDataPartField, value) != true)) {
                    this.AvatarDataPartField = value;
                    this.RaisePropertyChanged("AvatarDataPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KeyPair.PairActor.ContentService.GD Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsSuggestedAvatarName {
            get {
                return this.IsSuggestedAvatarNameField;
            }
            set {
                if ((this.IsSuggestedAvatarNameField.Equals(value) != true)) {
                    this.IsSuggestedAvatarNameField = value;
                    this.RaisePropertyChanged("IsSuggestedAvatarName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> UTD {
            get {
                return this.UTDField;
            }
            set {
                if ((this.UTDField.Equals(value) != true)) {
                    this.UTDField = value;
                    this.RaisePropertyChanged("UTD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ValidateDisplayName {
            get {
                return this.ValidateDisplayNameField;
            }
            set {
                if ((this.ValidateDisplayNameField.Equals(value) != true)) {
                    this.ValidateDisplayNameField = value;
                    this.RaisePropertyChanged("ValidateDisplayName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AvatarDataPart", Namespace="")]
    [System.SerializableAttribute()]
    public partial class AvatarDataPart : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KeyPair.PairActor.ContentService.Attribute[] AttributesField;
        
        private KeyPair.PairActor.ContentService.Geometry[] GeometriesField;
        
        private KeyPair.PairActor.ContentService.Offset[] OffsetsField;
        
        private string PartTypeField;
        
        private KeyPair.PairActor.ContentService.Texture[] TexturesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KeyPair.PairActor.ContentService.Attribute[] Attributes {
            get {
                return this.AttributesField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributesField, value) != true)) {
                    this.AttributesField = value;
                    this.RaisePropertyChanged("Attributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.Geometry[] Geometries {
            get {
                return this.GeometriesField;
            }
            set {
                if ((object.ReferenceEquals(this.GeometriesField, value) != true)) {
                    this.GeometriesField = value;
                    this.RaisePropertyChanged("Geometries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.Offset[] Offsets {
            get {
                return this.OffsetsField;
            }
            set {
                if ((object.ReferenceEquals(this.OffsetsField, value) != true)) {
                    this.OffsetsField = value;
                    this.RaisePropertyChanged("Offsets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string PartType {
            get {
                return this.PartTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartTypeField, value) != true)) {
                    this.PartTypeField = value;
                    this.RaisePropertyChanged("PartType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.Texture[] Textures {
            get {
                return this.TexturesField;
            }
            set {
                if ((object.ReferenceEquals(this.TexturesField, value) != true)) {
                    this.TexturesField = value;
                    this.RaisePropertyChanged("Textures");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="GD", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeAdventure.ContentServer.Model.Da" +
        "ta")]
    public enum GD : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Male = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Female = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Attribute", Namespace="")]
    [System.SerializableAttribute()]
    public partial class Attribute : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string KField;
        
        private string VField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string K {
            get {
                return this.KField;
            }
            set {
                if ((object.ReferenceEquals(this.KField, value) != true)) {
                    this.KField = value;
                    this.RaisePropertyChanged("K");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string V {
            get {
                return this.VField;
            }
            set {
                if ((object.ReferenceEquals(this.VField, value) != true)) {
                    this.VField = value;
                    this.RaisePropertyChanged("V");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Geometry", Namespace="")]
    [System.SerializableAttribute()]
    public partial class Geometry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Offset", Namespace="")]
    [System.SerializableAttribute()]
    public partial class Offset : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string XField;
        
        private string YField;
        
        private string ZField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string X {
            get {
                return this.XField;
            }
            set {
                if ((object.ReferenceEquals(this.XField, value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Y {
            get {
                return this.YField;
            }
            set {
                if ((object.ReferenceEquals(this.YField, value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Z {
            get {
                return this.ZField;
            }
            set {
                if ((object.ReferenceEquals(this.ZField, value) != true)) {
                    this.ZField = value;
                    this.RaisePropertyChanged("Z");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Texture", Namespace="")]
    [System.SerializableAttribute()]
    public partial class Texture : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AvatarDisplayData", Namespace="")]
    [System.SerializableAttribute()]
    public partial class AvatarDisplayData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KeyPair.PairActor.ContentService.UAI AchievementInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KeyPair.PairActor.ContentService.UAI[] AchievementsField;
        
        private KeyPair.PairActor.ContentService.AvatarData AvatarDataField;
        
        private int RankIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KeyPair.PairActor.ContentService.ARM[] RewardMultipliersField;
        
        private KeyPair.PairActor.ContentService.UserInfo UserInfoField;
        
        private KeyPair.PairActor.ContentService.USI UserSubscriptionInfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KeyPair.PairActor.ContentService.UAI AchievementInfo {
            get {
                return this.AchievementInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.AchievementInfoField, value) != true)) {
                    this.AchievementInfoField = value;
                    this.RaisePropertyChanged("AchievementInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KeyPair.PairActor.ContentService.UAI[] Achievements {
            get {
                return this.AchievementsField;
            }
            set {
                if ((object.ReferenceEquals(this.AchievementsField, value) != true)) {
                    this.AchievementsField = value;
                    this.RaisePropertyChanged("Achievements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.AvatarData AvatarData {
            get {
                return this.AvatarDataField;
            }
            set {
                if ((object.ReferenceEquals(this.AvatarDataField, value) != true)) {
                    this.AvatarDataField = value;
                    this.RaisePropertyChanged("AvatarData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int RankID {
            get {
                return this.RankIDField;
            }
            set {
                if ((this.RankIDField.Equals(value) != true)) {
                    this.RankIDField = value;
                    this.RaisePropertyChanged("RankID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KeyPair.PairActor.ContentService.ARM[] RewardMultipliers {
            get {
                return this.RewardMultipliersField;
            }
            set {
                if ((object.ReferenceEquals(this.RewardMultipliersField, value) != true)) {
                    this.RewardMultipliersField = value;
                    this.RaisePropertyChanged("RewardMultipliers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.UserInfo UserInfo {
            get {
                return this.UserInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.UserInfoField, value) != true)) {
                    this.UserInfoField = value;
                    this.RaisePropertyChanged("UserInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.USI UserSubscriptionInfo {
            get {
                return this.UserSubscriptionInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.UserSubscriptionInfoField, value) != true)) {
                    this.UserSubscriptionInfoField = value;
                    this.RaisePropertyChanged("UserSubscriptionInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UAI", Namespace="")]
    [System.SerializableAttribute()]
    public partial class UAI : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FBUIDField;
        
        private System.Nullable<int> aField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> mField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nField;
        
        private System.Nullable<int> pField;
        
        private int rField;
        
        private System.Nullable<System.Guid> uField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FBUID {
            get {
                return this.FBUIDField;
            }
            set {
                if ((this.FBUIDField.Equals(value) != true)) {
                    this.FBUIDField = value;
                    this.RaisePropertyChanged("FBUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> a {
            get {
                return this.aField;
            }
            set {
                if ((this.aField.Equals(value) != true)) {
                    this.aField = value;
                    this.RaisePropertyChanged("a");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> m {
            get {
                return this.mField;
            }
            set {
                if ((this.mField.Equals(value) != true)) {
                    this.mField = value;
                    this.RaisePropertyChanged("m");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string n {
            get {
                return this.nField;
            }
            set {
                if ((object.ReferenceEquals(this.nField, value) != true)) {
                    this.nField = value;
                    this.RaisePropertyChanged("n");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> p {
            get {
                return this.pField;
            }
            set {
                if ((this.pField.Equals(value) != true)) {
                    this.pField = value;
                    this.RaisePropertyChanged("p");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int r {
            get {
                return this.rField;
            }
            set {
                if ((this.rField.Equals(value) != true)) {
                    this.rField = value;
                    this.RaisePropertyChanged("r");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.Guid> u {
            get {
                return this.uField;
            }
            set {
                if ((this.uField.Equals(value) != true)) {
                    this.uField = value;
                    this.RaisePropertyChanged("u");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfo", Namespace="")]
    [System.SerializableAttribute()]
    public partial class UserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ContentSubmissionEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacebookUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KeyPair.PairActor.ContentService.UserFacebookUserMap[] FacebookUserMapField;
        
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<KeyPair.PairActor.ContentService.GD1> GenderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAnonymousField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        private System.Nullable<System.Guid> MembershipIDField;
        
        private bool MultiplayerEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OlidField;
        
        private System.Nullable<System.Guid> ParentUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RegistrationDateField;
        
        private System.Nullable<System.Guid> UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIntIDField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool oceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ContentSubmissionEnabled {
            get {
                return this.ContentSubmissionEnabledField;
            }
            set {
                if ((this.ContentSubmissionEnabledField.Equals(value) != true)) {
                    this.ContentSubmissionEnabledField = value;
                    this.RaisePropertyChanged("ContentSubmissionEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacebookUserID {
            get {
                return this.FacebookUserIDField;
            }
            set {
                if ((this.FacebookUserIDField.Equals(value) != true)) {
                    this.FacebookUserIDField = value;
                    this.RaisePropertyChanged("FacebookUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KeyPair.PairActor.ContentService.UserFacebookUserMap[] FacebookUserMap {
            get {
                return this.FacebookUserMapField;
            }
            set {
                if ((object.ReferenceEquals(this.FacebookUserMapField, value) != true)) {
                    this.FacebookUserMapField = value;
                    this.RaisePropertyChanged("FacebookUserMap");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<KeyPair.PairActor.ContentService.GD1> GenderID {
            get {
                return this.GenderIDField;
            }
            set {
                if ((this.GenderIDField.Equals(value) != true)) {
                    this.GenderIDField = value;
                    this.RaisePropertyChanged("GenderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAnonymous {
            get {
                return this.IsAnonymousField;
            }
            set {
                if ((this.IsAnonymousField.Equals(value) != true)) {
                    this.IsAnonymousField = value;
                    this.RaisePropertyChanged("IsAnonymous");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsApproved {
            get {
                return this.IsApprovedField;
            }
            set {
                if ((this.IsApprovedField.Equals(value) != true)) {
                    this.IsApprovedField = value;
                    this.RaisePropertyChanged("IsApproved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.Guid> MembershipID {
            get {
                return this.MembershipIDField;
            }
            set {
                if ((this.MembershipIDField.Equals(value) != true)) {
                    this.MembershipIDField = value;
                    this.RaisePropertyChanged("MembershipID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool MultiplayerEnabled {
            get {
                return this.MultiplayerEnabledField;
            }
            set {
                if ((this.MultiplayerEnabledField.Equals(value) != true)) {
                    this.MultiplayerEnabledField = value;
                    this.RaisePropertyChanged("MultiplayerEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Olid {
            get {
                return this.OlidField;
            }
            set {
                if ((object.ReferenceEquals(this.OlidField, value) != true)) {
                    this.OlidField = value;
                    this.RaisePropertyChanged("Olid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.Guid> ParentUserID {
            get {
                return this.ParentUserIDField;
            }
            set {
                if ((this.ParentUserIDField.Equals(value) != true)) {
                    this.ParentUserIDField = value;
                    this.RaisePropertyChanged("ParentUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Partner {
            get {
                return this.PartnerField;
            }
            set {
                if ((object.ReferenceEquals(this.PartnerField, value) != true)) {
                    this.PartnerField = value;
                    this.RaisePropertyChanged("Partner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.Guid> UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserIntID {
            get {
                return this.UserIntIDField;
            }
            set {
                if ((this.UserIntIDField.Equals(value) != true)) {
                    this.UserIntIDField = value;
                    this.RaisePropertyChanged("UserIntID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lid {
            get {
                return this.lidField;
            }
            set {
                if ((object.ReferenceEquals(this.lidField, value) != true)) {
                    this.lidField = value;
                    this.RaisePropertyChanged("lid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool oce {
            get {
                return this.oceField;
            }
            set {
                if ((this.oceField.Equals(value) != true)) {
                    this.oceField = value;
                    this.RaisePropertyChanged("oce");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="USI", Namespace="")]
    [System.SerializableAttribute()]
    public partial class USI : KeyPair.PairActor.ContentService.SubscriptionInfo {
        
        private System.Nullable<System.Guid> PIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.Guid> PID {
            get {
                return this.PIDField;
            }
            set {
                if ((this.PIDField.Equals(value) != true)) {
                    this.PIDField = value;
                    this.RaisePropertyChanged("PID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ARM", Namespace="")]
    [System.SerializableAttribute()]
    public partial class ARM : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime METField;
        
        private int MFField;
        
        private int PTField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime MET {
            get {
                return this.METField;
            }
            set {
                if ((this.METField.Equals(value) != true)) {
                    this.METField = value;
                    this.RaisePropertyChanged("MET");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int MF {
            get {
                return this.MFField;
            }
            set {
                if ((this.MFField.Equals(value) != true)) {
                    this.MFField = value;
                    this.RaisePropertyChanged("MF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int PT {
            get {
                return this.PTField;
            }
            set {
                if ((this.PTField.Equals(value) != true)) {
                    this.PTField = value;
                    this.RaisePropertyChanged("PT");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserFacebookUserMap", Namespace="")]
    [System.SerializableAttribute()]
    public partial class UserFacebookUserMap : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<KeyPair.PairActor.ContentService.ExternalAuthProvider> ExternalAuthProviderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FBAppIDField;
        
        private System.Nullable<long> FacebookUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProductFamilyIDField;
        
        private System.Nullable<long> UserFacebookUserMapIDField;
        
        private System.Nullable<System.Guid> UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<KeyPair.PairActor.ContentService.ExternalAuthProvider> ExternalAuthProvider {
            get {
                return this.ExternalAuthProviderField;
            }
            set {
                if ((this.ExternalAuthProviderField.Equals(value) != true)) {
                    this.ExternalAuthProviderField = value;
                    this.RaisePropertyChanged("ExternalAuthProvider");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FBAppID {
            get {
                return this.FBAppIDField;
            }
            set {
                if ((this.FBAppIDField.Equals(value) != true)) {
                    this.FBAppIDField = value;
                    this.RaisePropertyChanged("FBAppID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<long> FacebookUserID {
            get {
                return this.FacebookUserIDField;
            }
            set {
                if ((this.FacebookUserIDField.Equals(value) != true)) {
                    this.FacebookUserIDField = value;
                    this.RaisePropertyChanged("FacebookUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProductFamilyID {
            get {
                return this.ProductFamilyIDField;
            }
            set {
                if ((this.ProductFamilyIDField.Equals(value) != true)) {
                    this.ProductFamilyIDField = value;
                    this.RaisePropertyChanged("ProductFamilyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<long> UserFacebookUserMapID {
            get {
                return this.UserFacebookUserMapIDField;
            }
            set {
                if ((this.UserFacebookUserMapIDField.Equals(value) != true)) {
                    this.UserFacebookUserMapIDField = value;
                    this.RaisePropertyChanged("UserFacebookUserMapID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.Guid> UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="GD", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeAdventure.Model.Membership.Enume" +
        "rations")]
    public enum GD1 : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BOY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GIRL = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExternalAuthProvider", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeAdventure.Model.Authentication.E" +
        "numerations")]
    public enum ExternalAuthProvider : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Facebook = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VK = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Kongregate = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NFL = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubscriptionInfo", Namespace="")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(KeyPair.PairActor.ContentService.USI))]
    public partial class SubscriptionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> BillFrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CardExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardReferenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastBillDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MembershipIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfileCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfileIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> RecurringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<float> RecurringAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        private string SubscriptionDisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SubscriptionEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SubscriptionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SubscriptionPlanIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KeyPair.PairActor.ContentService.USP SubscriptionProviderField;
        
        private System.Nullable<int> SubscriptionTypeIDField;
        
        private System.Nullable<System.Guid> UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> BillFrequency {
            get {
                return this.BillFrequencyField;
            }
            set {
                if ((this.BillFrequencyField.Equals(value) != true)) {
                    this.BillFrequencyField = value;
                    this.RaisePropertyChanged("BillFrequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CardExpirationDate {
            get {
                return this.CardExpirationDateField;
            }
            set {
                if ((this.CardExpirationDateField.Equals(value) != true)) {
                    this.CardExpirationDateField = value;
                    this.RaisePropertyChanged("CardExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardReferenceNumber {
            get {
                return this.CardReferenceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CardReferenceNumberField, value) != true)) {
                    this.CardReferenceNumberField = value;
                    this.RaisePropertyChanged("CardReferenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastBillDate {
            get {
                return this.LastBillDateField;
            }
            set {
                if ((this.LastBillDateField.Equals(value) != true)) {
                    this.LastBillDateField = value;
                    this.RaisePropertyChanged("LastBillDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MembershipID {
            get {
                return this.MembershipIDField;
            }
            set {
                if ((this.MembershipIDField.Equals(value) != true)) {
                    this.MembershipIDField = value;
                    this.RaisePropertyChanged("MembershipID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileCurrency {
            get {
                return this.ProfileCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileCurrencyField, value) != true)) {
                    this.ProfileCurrencyField = value;
                    this.RaisePropertyChanged("ProfileCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileID {
            get {
                return this.ProfileIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileIDField, value) != true)) {
                    this.ProfileIDField = value;
                    this.RaisePropertyChanged("ProfileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Recurring {
            get {
                return this.RecurringField;
            }
            set {
                if ((this.RecurringField.Equals(value) != true)) {
                    this.RecurringField = value;
                    this.RaisePropertyChanged("Recurring");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> RecurringAmount {
            get {
                return this.RecurringAmountField;
            }
            set {
                if ((this.RecurringAmountField.Equals(value) != true)) {
                    this.RecurringAmountField = value;
                    this.RaisePropertyChanged("RecurringAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string SubscriptionDisplayName {
            get {
                return this.SubscriptionDisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscriptionDisplayNameField, value) != true)) {
                    this.SubscriptionDisplayNameField = value;
                    this.RaisePropertyChanged("SubscriptionDisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SubscriptionEndDate {
            get {
                return this.SubscriptionEndDateField;
            }
            set {
                if ((this.SubscriptionEndDateField.Equals(value) != true)) {
                    this.SubscriptionEndDateField = value;
                    this.RaisePropertyChanged("SubscriptionEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SubscriptionID {
            get {
                return this.SubscriptionIDField;
            }
            set {
                if ((this.SubscriptionIDField.Equals(value) != true)) {
                    this.SubscriptionIDField = value;
                    this.RaisePropertyChanged("SubscriptionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SubscriptionPlanID {
            get {
                return this.SubscriptionPlanIDField;
            }
            set {
                if ((this.SubscriptionPlanIDField.Equals(value) != true)) {
                    this.SubscriptionPlanIDField = value;
                    this.RaisePropertyChanged("SubscriptionPlanID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KeyPair.PairActor.ContentService.USP SubscriptionProvider {
            get {
                return this.SubscriptionProviderField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscriptionProviderField, value) != true)) {
                    this.SubscriptionProviderField = value;
                    this.RaisePropertyChanged("SubscriptionProvider");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> SubscriptionTypeID {
            get {
                return this.SubscriptionTypeIDField;
            }
            set {
                if ((this.SubscriptionTypeIDField.Equals(value) != true)) {
                    this.SubscriptionTypeIDField = value;
                    this.RaisePropertyChanged("SubscriptionTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.Guid> UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="USP", Namespace="")]
    [System.SerializableAttribute()]
    public partial class USP : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemIDField;
        
        private bool MembershipPurchaseAllowedField;
        
        private int ProductIDField;
        
        private int ProviderField;
        
        private string ReceiptDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RecurringField;
        
        private System.Guid UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemIDField, value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool MembershipPurchaseAllowed {
            get {
                return this.MembershipPurchaseAllowedField;
            }
            set {
                if ((this.MembershipPurchaseAllowedField.Equals(value) != true)) {
                    this.MembershipPurchaseAllowedField = value;
                    this.RaisePropertyChanged("MembershipPurchaseAllowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Provider {
            get {
                return this.ProviderField;
            }
            set {
                if ((this.ProviderField.Equals(value) != true)) {
                    this.ProviderField = value;
                    this.RaisePropertyChanged("Provider");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ReceiptData {
            get {
                return this.ReceiptDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiptDataField, value) != true)) {
                    this.ReceiptDataField = value;
                    this.RaisePropertyChanged("ReceiptData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Recurring {
            get {
                return this.RecurringField;
            }
            set {
                if ((this.RecurringField.Equals(value) != true)) {
                    this.RecurringField = value;
                    this.RaisePropertyChanged("Recurring");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Guid UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NicknameSetResult", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeAdventure.ContentServer.Model.Av" +
        "atar")]
    public enum NicknameSetResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failure = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invalid = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="DisplayNames", Namespace="", ItemName="DisplayName")]
    [System.SerializableAttribute()]
    public class DisplayNames : System.Collections.Generic.List<KeyPair.PairActor.ContentService.DisplayName> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DisplayName", Namespace="")]
    [System.SerializableAttribute()]
    public partial class DisplayName : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Nullable<int> DisplayNameIDField;
        
        private string NameField;
        
        private System.Nullable<int> OrdinalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> DisplayNameID {
            get {
                return this.DisplayNameIDField;
            }
            set {
                if ((this.DisplayNameIDField.Equals(value) != true)) {
                    this.DisplayNameIDField = value;
                    this.RaisePropertyChanged("DisplayNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> Ordinal {
            get {
                return this.OrdinalField;
            }
            set {
                if ((this.OrdinalField.Equals(value) != true)) {
                    this.OrdinalField = value;
                    this.RaisePropertyChanged("Ordinal");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Nn", Namespace="")]
    [System.SerializableAttribute()]
    public partial class Nn : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Guid IDField;
        
        private string NField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string N {
            get {
                return this.NField;
            }
            set {
                if ((object.ReferenceEquals(this.NField, value) != true)) {
                    this.NField = value;
                    this.RaisePropertyChanged("N");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserGradeRequest", Namespace="")]
    [System.SerializableAttribute()]
    public partial class UserGradeRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> LockField;
        
        private System.Nullable<System.Guid> UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Grade {
            get {
                return this.GradeField;
            }
            set {
                if ((this.GradeField.Equals(value) != true)) {
                    this.GradeField = value;
                    this.RaisePropertyChanged("Grade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Lock {
            get {
                return this.LockField;
            }
            set {
                if ((this.LockField.Equals(value) != true)) {
                    this.LockField = value;
                    this.RaisePropertyChanged("Lock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.Guid> UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetUserGradeResult", Namespace="")]
    [System.SerializableAttribute()]
    public partial class SetUserGradeResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UG", Namespace="")]
    [System.SerializableAttribute()]
    public partial class UG : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UGIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> UGLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UGNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> UIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UGID {
            get {
                return this.UGIDField;
            }
            set {
                if ((this.UGIDField.Equals(value) != true)) {
                    this.UGIDField = value;
                    this.RaisePropertyChanged("UGID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> UGL {
            get {
                return this.UGLField;
            }
            set {
                if ((this.UGLField.Equals(value) != true)) {
                    this.UGLField = value;
                    this.RaisePropertyChanged("UGL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UGN {
            get {
                return this.UGNField;
            }
            set {
                if ((object.ReferenceEquals(this.UGNField, value) != true)) {
                    this.UGNField = value;
                    this.RaisePropertyChanged("UGN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> UId {
            get {
                return this.UIdField;
            }
            set {
                if ((this.UIdField.Equals(value) != true)) {
                    this.UIdField = value;
                    this.RaisePropertyChanged("UId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HouseData", Namespace="")]
    [System.SerializableAttribute()]
    public partial class HouseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private KeyPair.PairActor.ContentService.HouseDataPart[] PartField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.HouseDataPart[] Part {
            get {
                return this.PartField;
            }
            set {
                if ((object.ReferenceEquals(this.PartField, value) != true)) {
                    this.PartField = value;
                    this.RaisePropertyChanged("Part");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HouseDataPart", Namespace="")]
    [System.SerializableAttribute()]
    public partial class HouseDataPart : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string PartNamesField;
        
        private string PartTypesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string PartNames {
            get {
                return this.PartNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNamesField, value) != true)) {
                    this.PartNamesField = value;
                    this.RaisePropertyChanged("PartNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string PartTypes {
            get {
                return this.PartTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.PartTypesField, value) != true)) {
                    this.PartTypesField = value;
                    this.RaisePropertyChanged("PartTypes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageSubmitResult", Namespace="")]
    [System.SerializableAttribute()]
    public partial class ImageSubmitResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int ContestDurationField;
        
        private System.DateTime ContestStartDateField;
        
        private KeyPair.PairActor.ContentService.ImageSubmitStatus ImageSubmitStatusField;
        
        private string ImageURLField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ContestDuration {
            get {
                return this.ContestDurationField;
            }
            set {
                if ((this.ContestDurationField.Equals(value) != true)) {
                    this.ContestDurationField = value;
                    this.RaisePropertyChanged("ContestDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime ContestStartDate {
            get {
                return this.ContestStartDateField;
            }
            set {
                if ((this.ContestStartDateField.Equals(value) != true)) {
                    this.ContestStartDateField = value;
                    this.RaisePropertyChanged("ContestStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.ImageSubmitStatus ImageSubmitStatus {
            get {
                return this.ImageSubmitStatusField;
            }
            set {
                if ((this.ImageSubmitStatusField.Equals(value) != true)) {
                    this.ImageSubmitStatusField = value;
                    this.RaisePropertyChanged("ImageSubmitStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ImageURL {
            get {
                return this.ImageURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageURLField, value) != true)) {
                    this.ImageURLField = value;
                    this.RaisePropertyChanged("ImageURL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageSubmitStatus", Namespace="")]
    public enum ImageSubmitStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Submitted = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AlreadySubmitted = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImageNotFound = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnknownError = 255,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageData", Namespace="")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(KeyPair.PairActor.ContentService.ImageDataComplete))]
    public partial class ImageData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string BorderField;
        
        private KeyPair.PairActor.ContentService.ImageDataDecal[] DecalField;
        
        private string ImageURLField;
        
        private string PhotoFrameField;
        
        private string PhotoFrameMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KeyPair.PairActor.ContentService.S3Image S3ImageField;
        
        private string SubTypeField;
        
        private string TemplateNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Border {
            get {
                return this.BorderField;
            }
            set {
                if ((object.ReferenceEquals(this.BorderField, value) != true)) {
                    this.BorderField = value;
                    this.RaisePropertyChanged("Border");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.ImageDataDecal[] Decal {
            get {
                return this.DecalField;
            }
            set {
                if ((object.ReferenceEquals(this.DecalField, value) != true)) {
                    this.DecalField = value;
                    this.RaisePropertyChanged("Decal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ImageURL {
            get {
                return this.ImageURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageURLField, value) != true)) {
                    this.ImageURLField = value;
                    this.RaisePropertyChanged("ImageURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string PhotoFrame {
            get {
                return this.PhotoFrameField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoFrameField, value) != true)) {
                    this.PhotoFrameField = value;
                    this.RaisePropertyChanged("PhotoFrame");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string PhotoFrameMask {
            get {
                return this.PhotoFrameMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoFrameMaskField, value) != true)) {
                    this.PhotoFrameMaskField = value;
                    this.RaisePropertyChanged("PhotoFrameMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KeyPair.PairActor.ContentService.S3Image S3Image {
            get {
                return this.S3ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.S3ImageField, value) != true)) {
                    this.S3ImageField = value;
                    this.RaisePropertyChanged("S3Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string SubType {
            get {
                return this.SubTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SubTypeField, value) != true)) {
                    this.SubTypeField = value;
                    this.RaisePropertyChanged("SubType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string TemplateName {
            get {
                return this.TemplateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateNameField, value) != true)) {
                    this.TemplateNameField = value;
                    this.RaisePropertyChanged("TemplateName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="S3Image", Namespace="")]
    [System.SerializableAttribute()]
    public partial class S3Image : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string BaseImageURLField;
        
        private KeyPair.PairActor.ContentService.S3WriteResult S3WriteResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string BaseImageURL {
            get {
                return this.BaseImageURLField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseImageURLField, value) != true)) {
                    this.BaseImageURLField = value;
                    this.RaisePropertyChanged("BaseImageURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.S3WriteResult S3WriteResult {
            get {
                return this.S3WriteResultField;
            }
            set {
                if ((this.S3WriteResultField.Equals(value) != true)) {
                    this.S3WriteResultField = value;
                    this.RaisePropertyChanged("S3WriteResult");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageDataComplete", Namespace="")]
    [System.SerializableAttribute()]
    public partial class ImageDataComplete : KeyPair.PairActor.ContentService.ImageData {
        
        private int ProductIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageDataDecal", Namespace="")]
    [System.SerializableAttribute()]
    public partial class ImageDataDecal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int HeightField;
        
        private string NameField;
        
        private KeyPair.PairActor.ContentService.ImageDataDecalPosition PositionField;
        
        private int WidthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.ImageDataDecalPosition Position {
            get {
                return this.PositionField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionField, value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageDataDecalPosition", Namespace="")]
    [System.SerializableAttribute()]
    public partial class ImageDataDecalPosition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int XField;
        
        private int YField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="S3WriteResult", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeAdventure.ContentServer.Model.Im" +
        "age")]
    public enum S3WriteResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute(Value="0")]
        _0 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute(Value="1")]
        _1 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute(Value="2")]
        _2 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute(Value="99")]
        _99 = 99,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CacheContentResult", Namespace="")]
    [System.SerializableAttribute()]
    public partial class CacheContentResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool SuccessField;
        
        private string URLField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RevealData", Namespace="")]
    [System.SerializableAttribute()]
    public partial class RevealData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string IndexField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Index {
            get {
                return this.IndexField;
            }
            set {
                if ((object.ReferenceEquals(this.IndexField, value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PresentData", Namespace="")]
    [System.SerializableAttribute()]
    public partial class PresentData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string IndexField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Index {
            get {
                return this.IndexField;
            }
            set {
                if ((object.ReferenceEquals(this.IndexField, value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InventoryData", Namespace="")]
    [System.SerializableAttribute()]
    public partial class InventoryData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private KeyPair.PairActor.ContentService.InventoryDataItem[] ItemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.InventoryDataItem[] Item {
            get {
                return this.ItemField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemField, value) != true)) {
                    this.ItemField = value;
                    this.RaisePropertyChanged("Item");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InventoryDataItem", Namespace="")]
    [System.SerializableAttribute()]
    public partial class InventoryDataItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string NameField;
        
        private int QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommonInventory", Namespace="")]
    [System.SerializableAttribute()]
    public partial class CommonInventory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private KeyPair.PairActor.ContentService.UserItem[] ItemsField;
        
        private System.Guid UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.UserItem[] Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Guid UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserItem", Namespace="")]
    [System.SerializableAttribute()]
    public partial class UserItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private KeyPair.PairActor.ContentService.Item ItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        private int QuantityField;
        
        private int UserInventoryIDField;
        
        private int UsesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KeyPair.PairActor.ContentService.Pairs uiaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.Item Item {
            get {
                return this.ItemField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemField, value) != true)) {
                    this.ItemField = value;
                    this.RaisePropertyChanged("Item");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int UserInventoryID {
            get {
                return this.UserInventoryIDField;
            }
            set {
                if ((this.UserInventoryIDField.Equals(value) != true)) {
                    this.UserInventoryIDField = value;
                    this.RaisePropertyChanged("UserInventoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Uses {
            get {
                return this.UsesField;
            }
            set {
                if ((this.UsesField.Equals(value) != true)) {
                    this.UsesField = value;
                    this.RaisePropertyChanged("Uses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KeyPair.PairActor.ContentService.Pairs uia {
            get {
                return this.uiaField;
            }
            set {
                if ((object.ReferenceEquals(this.uiaField, value) != true)) {
                    this.uiaField = value;
                    this.RaisePropertyChanged("uia");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Item", Namespace="")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(KeyPair.PairActor.ContentService.StoreItem))]
    public partial class Item : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool AllowStackingField;
        
        private string AssetNameField;
        
        private KeyPair.PairActor.ContentService.ItemAttribute[] AttributeField;
        
        private int CashCostField;
        
        private KeyPair.PairActor.ContentService.ItemCategory[] CategoryField;
        
        private int CostField;
        
        private int CreativePointsField;
        
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Geometry2Field;
        
        private string IconNameField;
        
        private int InventoryMaxField;
        
        private int ItemIDField;
        
        private string ItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNamePluralField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KeyPair.PairActor.ContentService.ItemState[] ItemStatesField;
        
        private bool LockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PointsField;
        
        private System.Nullable<int> RankIdField;
        
        private int RefillFactorField;
        
        private KeyPair.PairActor.ContentService.ItemRelationship[] RelationshipField;
        
        private KeyPair.PairActor.ContentService.ItemRollover RolloverField;
        
        private int SaleFactorField;
        
        private bool StackableField;
        
        private KeyPair.PairActor.ContentService.ItemTexture[] TextureField;
        
        private int UsesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int rtIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool AllowStacking {
            get {
                return this.AllowStackingField;
            }
            set {
                if ((this.AllowStackingField.Equals(value) != true)) {
                    this.AllowStackingField = value;
                    this.RaisePropertyChanged("AllowStacking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string AssetName {
            get {
                return this.AssetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetNameField, value) != true)) {
                    this.AssetNameField = value;
                    this.RaisePropertyChanged("AssetName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.ItemAttribute[] Attribute {
            get {
                return this.AttributeField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeField, value) != true)) {
                    this.AttributeField = value;
                    this.RaisePropertyChanged("Attribute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CashCost {
            get {
                return this.CashCostField;
            }
            set {
                if ((this.CashCostField.Equals(value) != true)) {
                    this.CashCostField = value;
                    this.RaisePropertyChanged("CashCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.ItemCategory[] Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Cost {
            get {
                return this.CostField;
            }
            set {
                if ((this.CostField.Equals(value) != true)) {
                    this.CostField = value;
                    this.RaisePropertyChanged("Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CreativePoints {
            get {
                return this.CreativePointsField;
            }
            set {
                if ((this.CreativePointsField.Equals(value) != true)) {
                    this.CreativePointsField = value;
                    this.RaisePropertyChanged("CreativePoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Geometry2 {
            get {
                return this.Geometry2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Geometry2Field, value) != true)) {
                    this.Geometry2Field = value;
                    this.RaisePropertyChanged("Geometry2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string IconName {
            get {
                return this.IconNameField;
            }
            set {
                if ((object.ReferenceEquals(this.IconNameField, value) != true)) {
                    this.IconNameField = value;
                    this.RaisePropertyChanged("IconName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int InventoryMax {
            get {
                return this.InventoryMaxField;
            }
            set {
                if ((this.InventoryMaxField.Equals(value) != true)) {
                    this.InventoryMaxField = value;
                    this.RaisePropertyChanged("InventoryMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemNamePlural {
            get {
                return this.ItemNamePluralField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNamePluralField, value) != true)) {
                    this.ItemNamePluralField = value;
                    this.RaisePropertyChanged("ItemNamePlural");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KeyPair.PairActor.ContentService.ItemState[] ItemStates {
            get {
                return this.ItemStatesField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemStatesField, value) != true)) {
                    this.ItemStatesField = value;
                    this.RaisePropertyChanged("ItemStates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool Locked {
            get {
                return this.LockedField;
            }
            set {
                if ((this.LockedField.Equals(value) != true)) {
                    this.LockedField = value;
                    this.RaisePropertyChanged("Locked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Points {
            get {
                return this.PointsField;
            }
            set {
                if ((this.PointsField.Equals(value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> RankId {
            get {
                return this.RankIdField;
            }
            set {
                if ((this.RankIdField.Equals(value) != true)) {
                    this.RankIdField = value;
                    this.RaisePropertyChanged("RankId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int RefillFactor {
            get {
                return this.RefillFactorField;
            }
            set {
                if ((this.RefillFactorField.Equals(value) != true)) {
                    this.RefillFactorField = value;
                    this.RaisePropertyChanged("RefillFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.ItemRelationship[] Relationship {
            get {
                return this.RelationshipField;
            }
            set {
                if ((object.ReferenceEquals(this.RelationshipField, value) != true)) {
                    this.RelationshipField = value;
                    this.RaisePropertyChanged("Relationship");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.ItemRollover Rollover {
            get {
                return this.RolloverField;
            }
            set {
                if ((object.ReferenceEquals(this.RolloverField, value) != true)) {
                    this.RolloverField = value;
                    this.RaisePropertyChanged("Rollover");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int SaleFactor {
            get {
                return this.SaleFactorField;
            }
            set {
                if ((this.SaleFactorField.Equals(value) != true)) {
                    this.SaleFactorField = value;
                    this.RaisePropertyChanged("SaleFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool Stackable {
            get {
                return this.StackableField;
            }
            set {
                if ((this.StackableField.Equals(value) != true)) {
                    this.StackableField = value;
                    this.RaisePropertyChanged("Stackable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.ItemTexture[] Texture {
            get {
                return this.TextureField;
            }
            set {
                if ((object.ReferenceEquals(this.TextureField, value) != true)) {
                    this.TextureField = value;
                    this.RaisePropertyChanged("Texture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Uses {
            get {
                return this.UsesField;
            }
            set {
                if ((this.UsesField.Equals(value) != true)) {
                    this.UsesField = value;
                    this.RaisePropertyChanged("Uses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int rtID {
            get {
                return this.rtIDField;
            }
            set {
                if ((this.rtIDField.Equals(value) != true)) {
                    this.rtIDField = value;
                    this.RaisePropertyChanged("rtID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Pairs", Namespace="")]
    [System.SerializableAttribute()]
    public partial class Pairs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private KeyPair.PairActor.ContentService.PairsPair[] ItemsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.PairsPair[] Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemRollover", Namespace="")]
    [System.SerializableAttribute()]
    public partial class ItemRollover : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string BundleField;
        
        private string DialogNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Bundle {
            get {
                return this.BundleField;
            }
            set {
                if ((object.ReferenceEquals(this.BundleField, value) != true)) {
                    this.BundleField = value;
                    this.RaisePropertyChanged("Bundle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DialogName {
            get {
                return this.DialogNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DialogNameField, value) != true)) {
                    this.DialogNameField = value;
                    this.RaisePropertyChanged("DialogName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StoreItem", Namespace="")]
    [System.SerializableAttribute()]
    public partial class StoreItem : KeyPair.PairActor.ContentService.Item {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KeyPair.PairActor.ContentService.Availability AvailabilityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KeyPair.PairActor.ContentService.Availability Availability {
            get {
                return this.AvailabilityField;
            }
            set {
                if ((object.ReferenceEquals(this.AvailabilityField, value) != true)) {
                    this.AvailabilityField = value;
                    this.RaisePropertyChanged("Availability");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemAttribute", Namespace="")]
    [System.SerializableAttribute()]
    public partial class ItemAttribute : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIDField;
        
        private string KeyField;
        
        private string TypeField;
        
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemCategory", Namespace="")]
    [System.SerializableAttribute()]
    public partial class ItemCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int CategoryIdField;
        
        private string CategoryNameField;
        
        private string IconNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string IconName {
            get {
                return this.IconNameField;
            }
            set {
                if ((object.ReferenceEquals(this.IconNameField, value) != true)) {
                    this.IconNameField = value;
                    this.RaisePropertyChanged("IconName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemState", Namespace="")]
    [System.SerializableAttribute()]
    public partial class ItemState : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AchievementIDField;
        
        private int ItemStateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MessageIDField;
        
        private string NameField;
        
        private int OrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KeyPair.PairActor.ContentService.AR[] RewardsField;
        
        private KeyPair.PairActor.ContentService.ItemStateRule RuleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AchievementID {
            get {
                return this.AchievementIDField;
            }
            set {
                if ((this.AchievementIDField.Equals(value) != true)) {
                    this.AchievementIDField = value;
                    this.RaisePropertyChanged("AchievementID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ItemStateID {
            get {
                return this.ItemStateIDField;
            }
            set {
                if ((this.ItemStateIDField.Equals(value) != true)) {
                    this.ItemStateIDField = value;
                    this.RaisePropertyChanged("ItemStateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MessageID {
            get {
                return this.MessageIDField;
            }
            set {
                if ((this.MessageIDField.Equals(value) != true)) {
                    this.MessageIDField = value;
                    this.RaisePropertyChanged("MessageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KeyPair.PairActor.ContentService.AR[] Rewards {
            get {
                return this.RewardsField;
            }
            set {
                if ((object.ReferenceEquals(this.RewardsField, value) != true)) {
                    this.RewardsField = value;
                    this.RaisePropertyChanged("Rewards");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.ItemStateRule Rule {
            get {
                return this.RuleField;
            }
            set {
                if ((object.ReferenceEquals(this.RuleField, value) != true)) {
                    this.RuleField = value;
                    this.RaisePropertyChanged("Rule");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemRelationship", Namespace="")]
    [System.SerializableAttribute()]
    public partial class ItemRelationship : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentIDField;
        
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int qField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int wtField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentID {
            get {
                return this.ParentIDField;
            }
            set {
                if ((this.ParentIDField.Equals(value) != true)) {
                    this.ParentIDField = value;
                    this.RaisePropertyChanged("ParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int q {
            get {
                return this.qField;
            }
            set {
                if ((this.qField.Equals(value) != true)) {
                    this.qField = value;
                    this.RaisePropertyChanged("q");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int wt {
            get {
                return this.wtField;
            }
            set {
                if ((this.wtField.Equals(value) != true)) {
                    this.wtField = value;
                    this.RaisePropertyChanged("wt");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemTexture", Namespace="")]
    [System.SerializableAttribute()]
    public partial class ItemTexture : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIDField;
        
        private System.Nullable<float> OffsetXField;
        
        private System.Nullable<float> OffsetYField;
        
        private string TextureNameField;
        
        private string TextureTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<float> OffsetX {
            get {
                return this.OffsetXField;
            }
            set {
                if ((this.OffsetXField.Equals(value) != true)) {
                    this.OffsetXField = value;
                    this.RaisePropertyChanged("OffsetX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<float> OffsetY {
            get {
                return this.OffsetYField;
            }
            set {
                if ((this.OffsetYField.Equals(value) != true)) {
                    this.OffsetYField = value;
                    this.RaisePropertyChanged("OffsetY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string TextureName {
            get {
                return this.TextureNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TextureNameField, value) != true)) {
                    this.TextureNameField = value;
                    this.RaisePropertyChanged("TextureName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string TextureTypeName {
            get {
                return this.TextureTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TextureTypeNameField, value) != true)) {
                    this.TextureTypeNameField = value;
                    this.RaisePropertyChanged("TextureTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemStateRule", Namespace="")]
    [System.SerializableAttribute()]
    public partial class ItemStateRule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KeyPair.PairActor.ContentService.CompletionAction CompletionActionField;
        
        private KeyPair.PairActor.ContentService.ItemStateCriteria[] CriteriasField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KeyPair.PairActor.ContentService.CompletionAction CompletionAction {
            get {
                return this.CompletionActionField;
            }
            set {
                if ((object.ReferenceEquals(this.CompletionActionField, value) != true)) {
                    this.CompletionActionField = value;
                    this.RaisePropertyChanged("CompletionAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.ItemStateCriteria[] Criterias {
            get {
                return this.CriteriasField;
            }
            set {
                if ((object.ReferenceEquals(this.CriteriasField, value) != true)) {
                    this.CriteriasField = value;
                    this.RaisePropertyChanged("Criterias");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AR", Namespace="")]
    [System.SerializableAttribute()]
    public partial class AR : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Nullable<int> aField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int aiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool amultiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> dField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> iField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int iiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> maxaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> minaField;
        
        private System.Nullable<int> pField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int rField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int tField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> a {
            get {
                return this.aField;
            }
            set {
                if ((this.aField.Equals(value) != true)) {
                    this.aField = value;
                    this.RaisePropertyChanged("a");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ai {
            get {
                return this.aiField;
            }
            set {
                if ((this.aiField.Equals(value) != true)) {
                    this.aiField = value;
                    this.RaisePropertyChanged("ai");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool amulti {
            get {
                return this.amultiField;
            }
            set {
                if ((this.amultiField.Equals(value) != true)) {
                    this.amultiField = value;
                    this.RaisePropertyChanged("amulti");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> d {
            get {
                return this.dField;
            }
            set {
                if ((this.dField.Equals(value) != true)) {
                    this.dField = value;
                    this.RaisePropertyChanged("d");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> i {
            get {
                return this.iField;
            }
            set {
                if ((this.iField.Equals(value) != true)) {
                    this.iField = value;
                    this.RaisePropertyChanged("i");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ii {
            get {
                return this.iiField;
            }
            set {
                if ((this.iiField.Equals(value) != true)) {
                    this.iiField = value;
                    this.RaisePropertyChanged("ii");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> maxa {
            get {
                return this.maxaField;
            }
            set {
                if ((this.maxaField.Equals(value) != true)) {
                    this.maxaField = value;
                    this.RaisePropertyChanged("maxa");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> mina {
            get {
                return this.minaField;
            }
            set {
                if ((this.minaField.Equals(value) != true)) {
                    this.minaField = value;
                    this.RaisePropertyChanged("mina");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> p {
            get {
                return this.pField;
            }
            set {
                if ((this.pField.Equals(value) != true)) {
                    this.pField = value;
                    this.RaisePropertyChanged("p");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int r {
            get {
                return this.rField;
            }
            set {
                if ((this.rField.Equals(value) != true)) {
                    this.rField = value;
                    this.RaisePropertyChanged("r");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int t {
            get {
                return this.tField;
            }
            set {
                if ((this.tField.Equals(value) != true)) {
                    this.tField = value;
                    this.RaisePropertyChanged("t");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompletionAction", Namespace="")]
    [System.SerializableAttribute()]
    public partial class CompletionAction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KeyPair.PairActor.ContentService.AchievementCompletion[] AchievementCompletionField;
        
        private KeyPair.PairActor.ContentService.StateTransition TransitionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KeyPair.PairActor.ContentService.AchievementCompletion[] AchievementCompletion {
            get {
                return this.AchievementCompletionField;
            }
            set {
                if ((object.ReferenceEquals(this.AchievementCompletionField, value) != true)) {
                    this.AchievementCompletionField = value;
                    this.RaisePropertyChanged("AchievementCompletion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.StateTransition Transition {
            get {
                return this.TransitionField;
            }
            set {
                if ((this.TransitionField.Equals(value) != true)) {
                    this.TransitionField = value;
                    this.RaisePropertyChanged("Transition");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemStateCriteria", Namespace="")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(KeyPair.PairActor.ContentService.ItemStateCriteriaExpiry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(KeyPair.PairActor.ContentService.ItemStateCriteriaLength))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(KeyPair.PairActor.ContentService.ItemStateCriteriaConsumable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(KeyPair.PairActor.ContentService.ItemStateCriteriaReplenishable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(KeyPair.PairActor.ContentService.ItemStateCriteriaSpeedUpItem))]
    public partial class ItemStateCriteria : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private KeyPair.PairActor.ContentService.ItemStateCriteriaType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.ItemStateCriteriaType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AchievementCompletion", Namespace="")]
    [System.SerializableAttribute()]
    public partial class AchievementCompletion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AchievementIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WeightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AchievementID {
            get {
                return this.AchievementIDField;
            }
            set {
                if ((this.AchievementIDField.Equals(value) != true)) {
                    this.AchievementIDField = value;
                    this.RaisePropertyChanged("AchievementID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StateTransition", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeAdventure.ItemStore.Model.Items")]
    public enum StateTransition : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NextState = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Completion = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deletion = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InitialState = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Expired = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemStateCriteriaExpiry", Namespace="")]
    [System.SerializableAttribute()]
    public partial class ItemStateCriteriaExpiry : KeyPair.PairActor.ContentService.ItemStateCriteria {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EndStateIDField;
        
        private int PeriodField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EndStateID {
            get {
                return this.EndStateIDField;
            }
            set {
                if ((this.EndStateIDField.Equals(value) != true)) {
                    this.EndStateIDField = value;
                    this.RaisePropertyChanged("EndStateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Period {
            get {
                return this.PeriodField;
            }
            set {
                if ((this.PeriodField.Equals(value) != true)) {
                    this.PeriodField = value;
                    this.RaisePropertyChanged("Period");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemStateCriteriaLength", Namespace="")]
    [System.SerializableAttribute()]
    public partial class ItemStateCriteriaLength : KeyPair.PairActor.ContentService.ItemStateCriteria {
        
        private int PeriodField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Period {
            get {
                return this.PeriodField;
            }
            set {
                if ((this.PeriodField.Equals(value) != true)) {
                    this.PeriodField = value;
                    this.RaisePropertyChanged("Period");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemStateCriteriaConsumable", Namespace="")]
    [System.SerializableAttribute()]
    public partial class ItemStateCriteriaConsumable : KeyPair.PairActor.ContentService.ItemStateCriteria {
        
        private int AmountField;
        
        private bool ConsumeUsesField;
        
        private int ItemIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool ConsumeUses {
            get {
                return this.ConsumeUsesField;
            }
            set {
                if ((this.ConsumeUsesField.Equals(value) != true)) {
                    this.ConsumeUsesField = value;
                    this.RaisePropertyChanged("ConsumeUses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemStateCriteriaReplenishable", Namespace="")]
    [System.SerializableAttribute()]
    public partial class ItemStateCriteriaReplenishable : KeyPair.PairActor.ContentService.ItemStateCriteria {
        
        private bool ApplyRankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PointTypeIDField;
        
        private KeyPair.PairActor.ContentService.ReplenishableRate[] ReplenishableRatesField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool ApplyRank {
            get {
                return this.ApplyRankField;
            }
            set {
                if ((this.ApplyRankField.Equals(value) != true)) {
                    this.ApplyRankField = value;
                    this.RaisePropertyChanged("ApplyRank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PointTypeID {
            get {
                return this.PointTypeIDField;
            }
            set {
                if ((this.PointTypeIDField.Equals(value) != true)) {
                    this.PointTypeIDField = value;
                    this.RaisePropertyChanged("PointTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.ReplenishableRate[] ReplenishableRates {
            get {
                return this.ReplenishableRatesField;
            }
            set {
                if ((object.ReferenceEquals(this.ReplenishableRatesField, value) != true)) {
                    this.ReplenishableRatesField = value;
                    this.RaisePropertyChanged("ReplenishableRates");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemStateCriteriaSpeedUpItem", Namespace="")]
    [System.SerializableAttribute()]
    public partial class ItemStateCriteriaSpeedUpItem : KeyPair.PairActor.ContentService.ItemStateCriteria {
        
        private int AmountField;
        
        private bool ChangeStateField;
        
        private bool ConsumeUsesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EndStateIDField;
        
        private int ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProcessRewardsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SpeedUpCapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SpeedUpUsesField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool ChangeState {
            get {
                return this.ChangeStateField;
            }
            set {
                if ((this.ChangeStateField.Equals(value) != true)) {
                    this.ChangeStateField = value;
                    this.RaisePropertyChanged("ChangeState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool ConsumeUses {
            get {
                return this.ConsumeUsesField;
            }
            set {
                if ((this.ConsumeUsesField.Equals(value) != true)) {
                    this.ConsumeUsesField = value;
                    this.RaisePropertyChanged("ConsumeUses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EndStateID {
            get {
                return this.EndStateIDField;
            }
            set {
                if ((this.EndStateIDField.Equals(value) != true)) {
                    this.EndStateIDField = value;
                    this.RaisePropertyChanged("EndStateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProcessRewards {
            get {
                return this.ProcessRewardsField;
            }
            set {
                if ((this.ProcessRewardsField.Equals(value) != true)) {
                    this.ProcessRewardsField = value;
                    this.RaisePropertyChanged("ProcessRewards");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SpeedUpCapacity {
            get {
                return this.SpeedUpCapacityField;
            }
            set {
                if ((this.SpeedUpCapacityField.Equals(value) != true)) {
                    this.SpeedUpCapacityField = value;
                    this.RaisePropertyChanged("SpeedUpCapacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SpeedUpUses {
            get {
                return this.SpeedUpUsesField;
            }
            set {
                if ((this.SpeedUpUsesField.Equals(value) != true)) {
                    this.SpeedUpUsesField = value;
                    this.RaisePropertyChanged("SpeedUpUses");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemStateCriteriaType", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeAdventure.ItemStore.Model.Items")]
    public enum ItemStateCriteriaType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Length = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConsumableItem = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReplenishableItem = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpeedUpItem = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StateExpiry = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReplenishableRate", Namespace="")]
    [System.SerializableAttribute()]
    public partial class ReplenishableRate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int MaxUsesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RankField;
        
        private double RateField;
        
        private int UsesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int MaxUses {
            get {
                return this.MaxUsesField;
            }
            set {
                if ((this.MaxUsesField.Equals(value) != true)) {
                    this.MaxUsesField = value;
                    this.RaisePropertyChanged("MaxUses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Rank {
            get {
                return this.RankField;
            }
            set {
                if ((this.RankField.Equals(value) != true)) {
                    this.RankField = value;
                    this.RaisePropertyChanged("Rank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double Rate {
            get {
                return this.RateField;
            }
            set {
                if ((this.RateField.Equals(value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Uses {
            get {
                return this.UsesField;
            }
            set {
                if ((this.UsesField.Equals(value) != true)) {
                    this.UsesField = value;
                    this.RaisePropertyChanged("Uses");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Availability", Namespace="")]
    [System.SerializableAttribute()]
    public partial class Availability : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PairsPair", Namespace="")]
    [System.SerializableAttribute()]
    public partial class PairsPair : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string PairKeyField;
        
        private string PairValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdateDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string PairKey {
            get {
                return this.PairKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.PairKeyField, value) != true)) {
                    this.PairKeyField = value;
                    this.RaisePropertyChanged("PairKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string PairValue {
            get {
                return this.PairValueField;
            }
            set {
                if ((object.ReferenceEquals(this.PairValueField, value) != true)) {
                    this.PairValueField = value;
                    this.RaisePropertyChanged("PairValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdateDate {
            get {
                return this.UpdateDateField;
            }
            set {
                if ((this.UpdateDateField.Equals(value) != true)) {
                    this.UpdateDateField = value;
                    this.RaisePropertyChanged("UpdateDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CIRT", Namespace="")]
    [System.SerializableAttribute()]
    public partial class CIRT : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Nullable<int> cidField;
        
        private System.Nullable<int> iidField;
        
        private int qField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> uField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KeyPair.PairActor.ContentService.Pairs uiaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> uipidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> cid {
            get {
                return this.cidField;
            }
            set {
                if ((this.cidField.Equals(value) != true)) {
                    this.cidField = value;
                    this.RaisePropertyChanged("cid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> iid {
            get {
                return this.iidField;
            }
            set {
                if ((this.iidField.Equals(value) != true)) {
                    this.iidField = value;
                    this.RaisePropertyChanged("iid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int q {
            get {
                return this.qField;
            }
            set {
                if ((this.qField.Equals(value) != true)) {
                    this.qField = value;
                    this.RaisePropertyChanged("q");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> u {
            get {
                return this.uField;
            }
            set {
                if ((this.uField.Equals(value) != true)) {
                    this.uField = value;
                    this.RaisePropertyChanged("u");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KeyPair.PairActor.ContentService.Pairs uia {
            get {
                return this.uiaField;
            }
            set {
                if ((object.ReferenceEquals(this.uiaField, value) != true)) {
                    this.uiaField = value;
                    this.RaisePropertyChanged("uia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> uipid {
            get {
                return this.uipidField;
            }
            set {
                if ((this.uipidField.Equals(value) != true)) {
                    this.uipidField = value;
                    this.RaisePropertyChanged("uipid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CIRS", Namespace="")]
    [System.SerializableAttribute()]
    public partial class CIRS : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private KeyPair.PairActor.ContentService.CIRI[] cidsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KeyPair.PairActor.ContentService.pir[] pirField;
        
        private bool sField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KeyPair.PairActor.ContentService.UGC ugcField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.CIRI[] cids {
            get {
                return this.cidsField;
            }
            set {
                if ((object.ReferenceEquals(this.cidsField, value) != true)) {
                    this.cidsField = value;
                    this.RaisePropertyChanged("cids");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KeyPair.PairActor.ContentService.pir[] pir {
            get {
                return this.pirField;
            }
            set {
                if ((object.ReferenceEquals(this.pirField, value) != true)) {
                    this.pirField = value;
                    this.RaisePropertyChanged("pir");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool s {
            get {
                return this.sField;
            }
            set {
                if ((this.sField.Equals(value) != true)) {
                    this.sField = value;
                    this.RaisePropertyChanged("s");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KeyPair.PairActor.ContentService.UGC ugc {
            get {
                return this.ugcField;
            }
            set {
                if ((object.ReferenceEquals(this.ugcField, value) != true)) {
                    this.ugcField = value;
                    this.RaisePropertyChanged("ugc");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UGC", Namespace="")]
    [System.SerializableAttribute()]
    public partial class UGC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Nullable<int> ccField;
        
        private System.Nullable<int> gcField;
        
        private System.Nullable<int> idField;
        
        private System.Nullable<System.Guid> uidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> cc {
            get {
                return this.ccField;
            }
            set {
                if ((this.ccField.Equals(value) != true)) {
                    this.ccField = value;
                    this.RaisePropertyChanged("cc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> gc {
            get {
                return this.gcField;
            }
            set {
                if ((this.gcField.Equals(value) != true)) {
                    this.gcField = value;
                    this.RaisePropertyChanged("gc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.Guid> uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CIRI", Namespace="")]
    [System.SerializableAttribute()]
    public partial class CIRI : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int cidField;
        
        private int iidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int cid {
            get {
                return this.cidField;
            }
            set {
                if ((this.cidField.Equals(value) != true)) {
                    this.cidField = value;
                    this.RaisePropertyChanged("cid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int iid {
            get {
                return this.iidField;
            }
            set {
                if ((this.iidField.Equals(value) != true)) {
                    this.iidField = value;
                    this.RaisePropertyChanged("iid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="pir", Namespace="")]
    [System.SerializableAttribute()]
    public partial class pir : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int iField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int piField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KeyPair.PairActor.ContentService.Item[] pisField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int i {
            get {
                return this.iField;
            }
            set {
                if ((this.iField.Equals(value) != true)) {
                    this.iField = value;
                    this.RaisePropertyChanged("i");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int pi {
            get {
                return this.piField;
            }
            set {
                if ((this.piField.Equals(value) != true)) {
                    this.piField = value;
                    this.RaisePropertyChanged("pi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KeyPair.PairActor.ContentService.Item[] pis {
            get {
                return this.pisField;
            }
            set {
                if ((object.ReferenceEquals(this.pisField, value) != true)) {
                    this.pisField = value;
                    this.RaisePropertyChanged("pis");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UIP", Namespace="")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(KeyPair.PairActor.ContentService.UIPSR))]
    public partial class UIP : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private KeyPair.PairActor.ContentService.Item iField;
        
        private System.Nullable<int> idField;
        
        private System.Nullable<int> iidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime invmdateField;
        
        private System.Nullable<int> pidField;
        
        private System.Nullable<double> pxField;
        
        private System.Nullable<double> pyField;
        
        private System.Nullable<double> pzField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ridField;
        
        private System.Nullable<double> rxField;
        
        private System.Nullable<double> ryField;
        
        private System.Nullable<double> rzField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KeyPair.PairActor.ContentService.Pairs uiaField;
        
        private System.Nullable<int> uicidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> uipcdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KeyPair.PairActor.ContentService.UserItemState uisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> usesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.Item i {
            get {
                return this.iField;
            }
            set {
                if ((object.ReferenceEquals(this.iField, value) != true)) {
                    this.iField = value;
                    this.RaisePropertyChanged("i");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> iid {
            get {
                return this.iidField;
            }
            set {
                if ((this.iidField.Equals(value) != true)) {
                    this.iidField = value;
                    this.RaisePropertyChanged("iid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime invmdate {
            get {
                return this.invmdateField;
            }
            set {
                if ((this.invmdateField.Equals(value) != true)) {
                    this.invmdateField = value;
                    this.RaisePropertyChanged("invmdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> pid {
            get {
                return this.pidField;
            }
            set {
                if ((this.pidField.Equals(value) != true)) {
                    this.pidField = value;
                    this.RaisePropertyChanged("pid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<double> px {
            get {
                return this.pxField;
            }
            set {
                if ((this.pxField.Equals(value) != true)) {
                    this.pxField = value;
                    this.RaisePropertyChanged("px");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<double> py {
            get {
                return this.pyField;
            }
            set {
                if ((this.pyField.Equals(value) != true)) {
                    this.pyField = value;
                    this.RaisePropertyChanged("py");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<double> pz {
            get {
                return this.pzField;
            }
            set {
                if ((this.pzField.Equals(value) != true)) {
                    this.pzField = value;
                    this.RaisePropertyChanged("pz");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string rid {
            get {
                return this.ridField;
            }
            set {
                if ((object.ReferenceEquals(this.ridField, value) != true)) {
                    this.ridField = value;
                    this.RaisePropertyChanged("rid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<double> rx {
            get {
                return this.rxField;
            }
            set {
                if ((this.rxField.Equals(value) != true)) {
                    this.rxField = value;
                    this.RaisePropertyChanged("rx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<double> ry {
            get {
                return this.ryField;
            }
            set {
                if ((this.ryField.Equals(value) != true)) {
                    this.ryField = value;
                    this.RaisePropertyChanged("ry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<double> rz {
            get {
                return this.rzField;
            }
            set {
                if ((this.rzField.Equals(value) != true)) {
                    this.rzField = value;
                    this.RaisePropertyChanged("rz");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KeyPair.PairActor.ContentService.Pairs uia {
            get {
                return this.uiaField;
            }
            set {
                if ((object.ReferenceEquals(this.uiaField, value) != true)) {
                    this.uiaField = value;
                    this.RaisePropertyChanged("uia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> uicid {
            get {
                return this.uicidField;
            }
            set {
                if ((this.uicidField.Equals(value) != true)) {
                    this.uicidField = value;
                    this.RaisePropertyChanged("uicid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> uipcdate {
            get {
                return this.uipcdateField;
            }
            set {
                if ((this.uipcdateField.Equals(value) != true)) {
                    this.uipcdateField = value;
                    this.RaisePropertyChanged("uipcdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KeyPair.PairActor.ContentService.UserItemState uis {
            get {
                return this.uisField;
            }
            set {
                if ((object.ReferenceEquals(this.uisField, value) != true)) {
                    this.uisField = value;
                    this.RaisePropertyChanged("uis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> uses {
            get {
                return this.usesField;
            }
            set {
                if ((this.usesField.Equals(value) != true)) {
                    this.usesField = value;
                    this.RaisePropertyChanged("uses");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserItemState", Namespace="")]
    [System.SerializableAttribute()]
    public partial class UserItemState : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int CommonInventoryIDField;
        
        private int ItemIDField;
        
        private int ItemStateIDField;
        
        private System.DateTime StateChangeDateField;
        
        private int UserItemPositionIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CommonInventoryID {
            get {
                return this.CommonInventoryIDField;
            }
            set {
                if ((this.CommonInventoryIDField.Equals(value) != true)) {
                    this.CommonInventoryIDField = value;
                    this.RaisePropertyChanged("CommonInventoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ItemStateID {
            get {
                return this.ItemStateIDField;
            }
            set {
                if ((this.ItemStateIDField.Equals(value) != true)) {
                    this.ItemStateIDField = value;
                    this.RaisePropertyChanged("ItemStateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime StateChangeDate {
            get {
                return this.StateChangeDateField;
            }
            set {
                if ((this.StateChangeDateField.Equals(value) != true)) {
                    this.StateChangeDateField = value;
                    this.RaisePropertyChanged("StateChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int UserItemPositionID {
            get {
                return this.UserItemPositionIDField;
            }
            set {
                if ((this.UserItemPositionIDField.Equals(value) != true)) {
                    this.UserItemPositionIDField = value;
                    this.RaisePropertyChanged("UserItemPositionID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UIPSR", Namespace="")]
    [System.SerializableAttribute()]
    public partial class UIPSR : KeyPair.PairActor.ContentService.UIP {
        
        private System.Nullable<int> pixField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> pix {
            get {
                return this.pixField;
            }
            set {
                if ((this.pixField.Equals(value) != true)) {
                    this.pixField = value;
                    this.RaisePropertyChanged("pix");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UIPSRS", Namespace="")]
    [System.SerializableAttribute()]
    public partial class UIPSRS : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int[] idsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KeyPair.PairActor.ContentService.ItemPositionValidationResult rField;
        
        private bool sField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KeyPair.PairActor.ContentService.UserItemState[] uciisField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int[] ids {
            get {
                return this.idsField;
            }
            set {
                if ((object.ReferenceEquals(this.idsField, value) != true)) {
                    this.idsField = value;
                    this.RaisePropertyChanged("ids");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KeyPair.PairActor.ContentService.ItemPositionValidationResult r {
            get {
                return this.rField;
            }
            set {
                if ((this.rField.Equals(value) != true)) {
                    this.rField = value;
                    this.RaisePropertyChanged("r");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool s {
            get {
                return this.sField;
            }
            set {
                if ((this.sField.Equals(value) != true)) {
                    this.sField = value;
                    this.RaisePropertyChanged("s");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KeyPair.PairActor.ContentService.UserItemState[] uciis {
            get {
                return this.uciisField;
            }
            set {
                if ((object.ReferenceEquals(this.uciisField, value) != true)) {
                    this.uciisField = value;
                    this.RaisePropertyChanged("uciis");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemPositionValidationResult", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeAdventure.ContentServer.Model.In" +
        "ventory")]
    public enum ItemPositionValidationResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Valid = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PositionIDInNewItem = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PositionIDInvalid = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentIndexOutofRange = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentIndexInvalid = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommonInventoryIDInvalid = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentIDInvalid = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UTI", Namespace="")]
    [System.SerializableAttribute()]
    public partial class UTI : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private KeyPair.PairActor.ContentService.Item iField;
        
        private System.Nullable<int> idField;
        
        private System.Nullable<int> iidField;
        
        private System.Nullable<int> sField;
        
        private System.Nullable<System.DateTime> tsField;
        
        private System.Nullable<System.DateTime> udField;
        
        private System.Nullable<int> uicidField;
        
        private System.Nullable<System.Guid> uidField;
        
        private System.Nullable<int> uipidField;
        
        private System.Nullable<int> usidField;
        
        private System.Nullable<int> yField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.Item i {
            get {
                return this.iField;
            }
            set {
                if ((object.ReferenceEquals(this.iField, value) != true)) {
                    this.iField = value;
                    this.RaisePropertyChanged("i");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> iid {
            get {
                return this.iidField;
            }
            set {
                if ((this.iidField.Equals(value) != true)) {
                    this.iidField = value;
                    this.RaisePropertyChanged("iid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> s {
            get {
                return this.sField;
            }
            set {
                if ((this.sField.Equals(value) != true)) {
                    this.sField = value;
                    this.RaisePropertyChanged("s");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.DateTime> ts {
            get {
                return this.tsField;
            }
            set {
                if ((this.tsField.Equals(value) != true)) {
                    this.tsField = value;
                    this.RaisePropertyChanged("ts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.DateTime> ud {
            get {
                return this.udField;
            }
            set {
                if ((this.udField.Equals(value) != true)) {
                    this.udField = value;
                    this.RaisePropertyChanged("ud");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> uicid {
            get {
                return this.uicidField;
            }
            set {
                if ((this.uicidField.Equals(value) != true)) {
                    this.uicidField = value;
                    this.RaisePropertyChanged("uicid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.Guid> uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> uipid {
            get {
                return this.uipidField;
            }
            set {
                if ((this.uipidField.Equals(value) != true)) {
                    this.uipidField = value;
                    this.RaisePropertyChanged("uipid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> usid {
            get {
                return this.usidField;
            }
            set {
                if ((this.usidField.Equals(value) != true)) {
                    this.usidField = value;
                    this.RaisePropertyChanged("usid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> y {
            get {
                return this.yField;
            }
            set {
                if ((this.yField.Equals(value) != true)) {
                    this.yField = value;
                    this.RaisePropertyChanged("y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserTimedItemFlag", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeAdventure.ContentServer.Model.In" +
        "ventory")]
    public enum UserTimedItemFlag : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DontSpoil = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="US", Namespace="")]
    [System.SerializableAttribute()]
    public partial class US : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Nullable<System.DateTime> adField;
        
        private KeyPair.PairActor.ContentService.USA[] attField;
        
        private System.Nullable<bool> caField;
        
        private System.Nullable<int> idField;
        
        private System.Nullable<int> jidField;
        
        private System.Nullable<int> rField;
        
        private System.Nullable<System.DateTime> sdField;
        
        private System.Nullable<System.Guid> suidField;
        
        private System.Nullable<System.Guid> uidField;
        
        private System.Nullable<int> uipidField;
        
        private System.Nullable<int> uridField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.DateTime> ad {
            get {
                return this.adField;
            }
            set {
                if ((this.adField.Equals(value) != true)) {
                    this.adField = value;
                    this.RaisePropertyChanged("ad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.USA[] att {
            get {
                return this.attField;
            }
            set {
                if ((object.ReferenceEquals(this.attField, value) != true)) {
                    this.attField = value;
                    this.RaisePropertyChanged("att");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<bool> ca {
            get {
                return this.caField;
            }
            set {
                if ((this.caField.Equals(value) != true)) {
                    this.caField = value;
                    this.RaisePropertyChanged("ca");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> jid {
            get {
                return this.jidField;
            }
            set {
                if ((this.jidField.Equals(value) != true)) {
                    this.jidField = value;
                    this.RaisePropertyChanged("jid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> r {
            get {
                return this.rField;
            }
            set {
                if ((this.rField.Equals(value) != true)) {
                    this.rField = value;
                    this.RaisePropertyChanged("r");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.DateTime> sd {
            get {
                return this.sdField;
            }
            set {
                if ((this.sdField.Equals(value) != true)) {
                    this.sdField = value;
                    this.RaisePropertyChanged("sd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.Guid> suid {
            get {
                return this.suidField;
            }
            set {
                if ((this.suidField.Equals(value) != true)) {
                    this.suidField = value;
                    this.RaisePropertyChanged("suid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.Guid> uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> uipid {
            get {
                return this.uipidField;
            }
            set {
                if ((this.uipidField.Equals(value) != true)) {
                    this.uipidField = value;
                    this.RaisePropertyChanged("uipid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> urid {
            get {
                return this.uridField;
            }
            set {
                if ((this.uridField.Equals(value) != true)) {
                    this.uridField = value;
                    this.RaisePropertyChanged("urid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="USA", Namespace="")]
    [System.SerializableAttribute()]
    public partial class USA : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Nullable<int> idField;
        
        private string kField;
        
        private System.Nullable<int> usidField;
        
        private string vField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string k {
            get {
                return this.kField;
            }
            set {
                if ((object.ReferenceEquals(this.kField, value) != true)) {
                    this.kField = value;
                    this.RaisePropertyChanged("k");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> usid {
            get {
                return this.usidField;
            }
            set {
                if ((this.usidField.Equals(value) != true)) {
                    this.usidField = value;
                    this.RaisePropertyChanged("usid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string v {
            get {
                return this.vField;
            }
            set {
                if ((object.ReferenceEquals(this.vField, value) != true)) {
                    this.vField = value;
                    this.RaisePropertyChanged("v");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserStaffFlag", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeAdventure.ContentServer.Model.St" +
        "aff")]
    public enum UserStaffFlag : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bribe = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JT", Namespace="")]
    [System.SerializableAttribute()]
    public partial class JT : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string dField;
        
        private System.Nullable<int> frField;
        
        private System.Nullable<int> idField;
        
        private string nField;
        
        private System.Nullable<int> rmrField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string d {
            get {
                return this.dField;
            }
            set {
                if ((object.ReferenceEquals(this.dField, value) != true)) {
                    this.dField = value;
                    this.RaisePropertyChanged("d");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> fr {
            get {
                return this.frField;
            }
            set {
                if ((this.frField.Equals(value) != true)) {
                    this.frField = value;
                    this.RaisePropertyChanged("fr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string n {
            get {
                return this.nField;
            }
            set {
                if ((object.ReferenceEquals(this.nField, value) != true)) {
                    this.nField = value;
                    this.RaisePropertyChanged("n");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> rmr {
            get {
                return this.rmrField;
            }
            set {
                if ((this.rmrField.Equals(value) != true)) {
                    this.rmrField = value;
                    this.RaisePropertyChanged("rmr");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UGR", Namespace="")]
    [System.SerializableAttribute()]
    public partial class UGR : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Nullable<int> idField;
        
        private System.Nullable<int> iidField;
        
        private System.Nullable<System.Guid> kField;
        
        private KeyPair.PairActor.ContentService.UGRE[] rField;
        
        private System.Nullable<System.Guid> uidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> iid {
            get {
                return this.iidField;
            }
            set {
                if ((this.iidField.Equals(value) != true)) {
                    this.iidField = value;
                    this.RaisePropertyChanged("iid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.Guid> k {
            get {
                return this.kField;
            }
            set {
                if ((this.kField.Equals(value) != true)) {
                    this.kField = value;
                    this.RaisePropertyChanged("k");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.UGRE[] r {
            get {
                return this.rField;
            }
            set {
                if ((object.ReferenceEquals(this.rField, value) != true)) {
                    this.rField = value;
                    this.RaisePropertyChanged("r");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.Guid> uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UGRE", Namespace="")]
    [System.SerializableAttribute()]
    public partial class UGRE : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Nullable<System.DateTime> daField;
        
        private System.Nullable<bool> iaField;
        
        private System.Nullable<int> idField;
        
        private System.Nullable<int> ugridField;
        
        private System.Nullable<System.Guid> uidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.DateTime> da {
            get {
                return this.daField;
            }
            set {
                if ((this.daField.Equals(value) != true)) {
                    this.daField = value;
                    this.RaisePropertyChanged("da");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<bool> ia {
            get {
                return this.iaField;
            }
            set {
                if ((this.iaField.Equals(value) != true)) {
                    this.iaField = value;
                    this.RaisePropertyChanged("ia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> ugrid {
            get {
                return this.ugridField;
            }
            set {
                if ((this.ugridField.Equals(value) != true)) {
                    this.ugridField = value;
                    this.RaisePropertyChanged("ugrid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.Guid> uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UA", Namespace="")]
    [System.SerializableAttribute()]
    public partial class UA : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Nullable<int> aidField;
        
        private System.Nullable<System.DateTime> dField;
        
        private System.Nullable<int> idField;
        
        private System.Nullable<System.Guid> ridField;
        
        private System.Nullable<System.Guid> uidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> aid {
            get {
                return this.aidField;
            }
            set {
                if ((this.aidField.Equals(value) != true)) {
                    this.aidField = value;
                    this.RaisePropertyChanged("aid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.DateTime> d {
            get {
                return this.dField;
            }
            set {
                if ((this.dField.Equals(value) != true)) {
                    this.dField = value;
                    this.RaisePropertyChanged("d");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.Guid> rid {
            get {
                return this.ridField;
            }
            set {
                if ((this.ridField.Equals(value) != true)) {
                    this.ridField = value;
                    this.RaisePropertyChanged("rid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.Guid> uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UAT", Namespace="")]
    [System.SerializableAttribute()]
    public partial class UAT : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string descField;
        
        private System.Nullable<int> idField;
        
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string desc {
            get {
                return this.descField;
            }
            set {
                if ((object.ReferenceEquals(this.descField, value) != true)) {
                    this.descField = value;
                    this.RaisePropertyChanged("desc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MasteryData", Namespace="")]
    [System.SerializableAttribute()]
    public partial class MasteryData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private KeyPair.PairActor.ContentService.MasteryDataLesson[] LessonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.MasteryDataLesson[] Lesson {
            get {
                return this.LessonField;
            }
            set {
                if ((object.ReferenceEquals(this.LessonField, value) != true)) {
                    this.LessonField = value;
                    this.RaisePropertyChanged("Lesson");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MasteryDataLesson", Namespace="")]
    [System.SerializableAttribute()]
    public partial class MasteryDataLesson : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ActivityIdField;
        
        private string LessonIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ActivityId {
            get {
                return this.ActivityIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityIdField, value) != true)) {
                    this.ActivityIdField = value;
                    this.RaisePropertyChanged("ActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string LessonId {
            get {
                return this.LessonIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LessonIdField, value) != true)) {
                    this.LessonIdField = value;
                    this.RaisePropertyChanged("LessonId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LessonData", Namespace="")]
    [System.SerializableAttribute()]
    public partial class LessonData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private KeyPair.PairActor.ContentService.LessonDataLesson[] LessonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.LessonDataLesson[] Lesson {
            get {
                return this.LessonField;
            }
            set {
                if ((object.ReferenceEquals(this.LessonField, value) != true)) {
                    this.LessonField = value;
                    this.RaisePropertyChanged("Lesson");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LessonDataLesson", Namespace="")]
    [System.SerializableAttribute()]
    public partial class LessonDataLesson : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ActivityIdField;
        
        private string LessonIdField;
        
        private string LevelField;
        
        private string NumQuestionsField;
        
        private string SkillAddressField;
        
        private string StatusField;
        
        private string SubLevelIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ActivityId {
            get {
                return this.ActivityIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityIdField, value) != true)) {
                    this.ActivityIdField = value;
                    this.RaisePropertyChanged("ActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string LessonId {
            get {
                return this.LessonIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LessonIdField, value) != true)) {
                    this.LessonIdField = value;
                    this.RaisePropertyChanged("LessonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Level {
            get {
                return this.LevelField;
            }
            set {
                if ((object.ReferenceEquals(this.LevelField, value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string NumQuestions {
            get {
                return this.NumQuestionsField;
            }
            set {
                if ((object.ReferenceEquals(this.NumQuestionsField, value) != true)) {
                    this.NumQuestionsField = value;
                    this.RaisePropertyChanged("NumQuestions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string SkillAddress {
            get {
                return this.SkillAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.SkillAddressField, value) != true)) {
                    this.SkillAddressField = value;
                    this.RaisePropertyChanged("SkillAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string SubLevelId {
            get {
                return this.SubLevelIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SubLevelIdField, value) != true)) {
                    this.SubLevelIdField = value;
                    this.RaisePropertyChanged("SubLevelId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="DateRange", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeAdventure.ContentServer.Model.Da" +
        "ta")]
    public enum DateRange : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Day = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Week = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Month = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LessonRankData", Namespace="")]
    [System.SerializableAttribute()]
    public partial class LessonRankData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int CorrectAnswersField;
        
        private string DisplayNameField;
        
        private System.Guid UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CorrectAnswers {
            get {
                return this.CorrectAnswersField;
            }
            set {
                if ((this.CorrectAnswersField.Equals(value) != true)) {
                    this.CorrectAnswersField = value;
                    this.RaisePropertyChanged("CorrectAnswers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Guid UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserMissionData", Namespace="")]
    [System.SerializableAttribute()]
    public partial class UserMissionData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private KeyPair.PairActor.ContentService.UserMissionDataMission[] MissionField;
        
        private int[] MissionCompleteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.UserMissionDataMission[] Mission {
            get {
                return this.MissionField;
            }
            set {
                if ((object.ReferenceEquals(this.MissionField, value) != true)) {
                    this.MissionField = value;
                    this.RaisePropertyChanged("Mission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int[] MissionComplete {
            get {
                return this.MissionCompleteField;
            }
            set {
                if ((object.ReferenceEquals(this.MissionCompleteField, value) != true)) {
                    this.MissionCompleteField = value;
                    this.RaisePropertyChanged("MissionComplete");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserMissionDataMission", Namespace="")]
    [System.SerializableAttribute()]
    public partial class UserMissionDataMission : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int MissionIdField;
        
        private KeyPair.PairActor.ContentService.UserMissionDataMissionStep[] StepField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int MissionId {
            get {
                return this.MissionIdField;
            }
            set {
                if ((this.MissionIdField.Equals(value) != true)) {
                    this.MissionIdField = value;
                    this.RaisePropertyChanged("MissionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.UserMissionDataMissionStep[] Step {
            get {
                return this.StepField;
            }
            set {
                if ((object.ReferenceEquals(this.StepField, value) != true)) {
                    this.StepField = value;
                    this.RaisePropertyChanged("Step");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserMissionDataMissionStep", Namespace="")]
    [System.SerializableAttribute()]
    public partial class UserMissionDataMissionStep : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int StepIdField;
        
        private int[] TaskIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int StepId {
            get {
                return this.StepIdField;
            }
            set {
                if ((this.StepIdField.Equals(value) != true)) {
                    this.StepIdField = value;
                    this.RaisePropertyChanged("StepId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int[] TaskId {
            get {
                return this.TaskIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskIdField, value) != true)) {
                    this.TaskIdField = value;
                    this.RaisePropertyChanged("TaskId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PetData", Namespace="")]
    [System.SerializableAttribute()]
    public partial class PetData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private KeyPair.PairActor.ContentService.PetDataPet[] PetField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.PetDataPet[] Pet {
            get {
                return this.PetField;
            }
            set {
                if ((object.ReferenceEquals(this.PetField, value) != true)) {
                    this.PetField = value;
                    this.RaisePropertyChanged("Pet");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PetDataPet", Namespace="")]
    [System.SerializableAttribute()]
    public partial class PetDataPet : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string AccessoryGeometryField;
        
        private string AccessoryTextureField;
        
        private string DirtinessField;
        
        private string GeometryField;
        
        private string NameField;
        
        private string TextureField;
        
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string AccessoryGeometry {
            get {
                return this.AccessoryGeometryField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessoryGeometryField, value) != true)) {
                    this.AccessoryGeometryField = value;
                    this.RaisePropertyChanged("AccessoryGeometry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string AccessoryTexture {
            get {
                return this.AccessoryTextureField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessoryTextureField, value) != true)) {
                    this.AccessoryTextureField = value;
                    this.RaisePropertyChanged("AccessoryTexture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Dirtiness {
            get {
                return this.DirtinessField;
            }
            set {
                if ((object.ReferenceEquals(this.DirtinessField, value) != true)) {
                    this.DirtinessField = value;
                    this.RaisePropertyChanged("Dirtiness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Geometry {
            get {
                return this.GeometryField;
            }
            set {
                if ((object.ReferenceEquals(this.GeometryField, value) != true)) {
                    this.GeometryField = value;
                    this.RaisePropertyChanged("Geometry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Texture {
            get {
                return this.TextureField;
            }
            set {
                if ((object.ReferenceEquals(this.TextureField, value) != true)) {
                    this.TextureField = value;
                    this.RaisePropertyChanged("Texture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductData", Namespace="")]
    [System.SerializableAttribute()]
    public partial class ProductData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int ExperienceField;
        
        private int ExperienceUnusedField;
        
        private string LastSceneField;
        
        private int LevelField;
        
        private int MaxDrawingsField;
        
        private int MaxPhotosField;
        
        private int MissionField;
        
        private int StepField;
        
        private int[] TasksField;
        
        private string[] TutorialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdateDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Experience {
            get {
                return this.ExperienceField;
            }
            set {
                if ((this.ExperienceField.Equals(value) != true)) {
                    this.ExperienceField = value;
                    this.RaisePropertyChanged("Experience");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ExperienceUnused {
            get {
                return this.ExperienceUnusedField;
            }
            set {
                if ((this.ExperienceUnusedField.Equals(value) != true)) {
                    this.ExperienceUnusedField = value;
                    this.RaisePropertyChanged("ExperienceUnused");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string LastScene {
            get {
                return this.LastSceneField;
            }
            set {
                if ((object.ReferenceEquals(this.LastSceneField, value) != true)) {
                    this.LastSceneField = value;
                    this.RaisePropertyChanged("LastScene");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Level {
            get {
                return this.LevelField;
            }
            set {
                if ((this.LevelField.Equals(value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int MaxDrawings {
            get {
                return this.MaxDrawingsField;
            }
            set {
                if ((this.MaxDrawingsField.Equals(value) != true)) {
                    this.MaxDrawingsField = value;
                    this.RaisePropertyChanged("MaxDrawings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int MaxPhotos {
            get {
                return this.MaxPhotosField;
            }
            set {
                if ((this.MaxPhotosField.Equals(value) != true)) {
                    this.MaxPhotosField = value;
                    this.RaisePropertyChanged("MaxPhotos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Mission {
            get {
                return this.MissionField;
            }
            set {
                if ((this.MissionField.Equals(value) != true)) {
                    this.MissionField = value;
                    this.RaisePropertyChanged("Mission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Step {
            get {
                return this.StepField;
            }
            set {
                if ((this.StepField.Equals(value) != true)) {
                    this.StepField = value;
                    this.RaisePropertyChanged("Step");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int[] Tasks {
            get {
                return this.TasksField;
            }
            set {
                if ((object.ReferenceEquals(this.TasksField, value) != true)) {
                    this.TasksField = value;
                    this.RaisePropertyChanged("Tasks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] Tutorials {
            get {
                return this.TutorialsField;
            }
            set {
                if ((object.ReferenceEquals(this.TutorialsField, value) != true)) {
                    this.TutorialsField = value;
                    this.RaisePropertyChanged("Tutorials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdateDate {
            get {
                return this.UpdateDateField;
            }
            set {
                if ((this.UpdateDateField.Equals(value) != true)) {
                    this.UpdateDateField = value;
                    this.RaisePropertyChanged("UpdateDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductPlatform", Namespace="")]
    [System.SerializableAttribute()]
    public partial class ProductPlatform : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int PlatformIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductGroupIDField;
        
        private int ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProviderIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int PlatformID {
            get {
                return this.PlatformIDField;
            }
            set {
                if ((this.PlatformIDField.Equals(value) != true)) {
                    this.PlatformIDField = value;
                    this.RaisePropertyChanged("PlatformID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductGroupID {
            get {
                return this.ProductGroupIDField;
            }
            set {
                if ((this.ProductGroupIDField.Equals(value) != true)) {
                    this.ProductGroupIDField = value;
                    this.RaisePropertyChanged("ProductGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProviderID {
            get {
                return this.ProviderIDField;
            }
            set {
                if ((this.ProviderIDField.Equals(value) != true)) {
                    this.ProviderIDField = value;
                    this.RaisePropertyChanged("ProviderID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SceneData", Namespace="")]
    [System.SerializableAttribute()]
    public partial class SceneData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private KeyPair.PairActor.ContentService.BuildSpot[] BuildSpotsField;
        
        private KeyPair.PairActor.ContentService.Module[] ModulesField;
        
        private System.Nullable<int> UserSceneDataIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.BuildSpot[] BuildSpots {
            get {
                return this.BuildSpotsField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildSpotsField, value) != true)) {
                    this.BuildSpotsField = value;
                    this.RaisePropertyChanged("BuildSpots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.Module[] Modules {
            get {
                return this.ModulesField;
            }
            set {
                if ((object.ReferenceEquals(this.ModulesField, value) != true)) {
                    this.ModulesField = value;
                    this.RaisePropertyChanged("Modules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> UserSceneDataID {
            get {
                return this.UserSceneDataIDField;
            }
            set {
                if ((this.UserSceneDataIDField.Equals(value) != true)) {
                    this.UserSceneDataIDField = value;
                    this.RaisePropertyChanged("UserSceneDataID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BuildSpot", Namespace="")]
    [System.SerializableAttribute()]
    public partial class BuildSpot : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ItemField;
        
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Item {
            get {
                return this.ItemField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemField, value) != true)) {
                    this.ItemField = value;
                    this.RaisePropertyChanged("Item");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Module", Namespace="")]
    [System.SerializableAttribute()]
    public partial class Module : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string NameField;
        
        private int StarsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Stars {
            get {
                return this.StarsField;
            }
            set {
                if ((this.StarsField.Equals(value) != true)) {
                    this.StarsField = value;
                    this.RaisePropertyChanged("Stars");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserBadge", Namespace="")]
    [System.SerializableAttribute()]
    public partial class UserBadge : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private KeyPair.PairActor.ContentService.UserBadgeComplete[] BadgeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.UserBadgeComplete[] BadgeId {
            get {
                return this.BadgeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.BadgeIdField, value) != true)) {
                    this.BadgeIdField = value;
                    this.RaisePropertyChanged("BadgeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserBadgeComplete", Namespace="")]
    [System.SerializableAttribute()]
    public partial class UserBadgeComplete : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int BadgeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int BadgeId {
            get {
                return this.BadgeIdField;
            }
            set {
                if ((this.BadgeIdField.Equals(value) != true)) {
                    this.BadgeIdField = value;
                    this.RaisePropertyChanged("BadgeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserTreasureChestData", Namespace="")]
    [System.SerializableAttribute()]
    public partial class UserTreasureChestData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private KeyPair.PairActor.ContentService.UserTreasureChestDataChest[] ChestField;
        
        private string GroupNameField;
        
        private string SceneNameField;
        
        private string TimeField;
        
        private int TreasureChestIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.UserTreasureChestDataChest[] Chest {
            get {
                return this.ChestField;
            }
            set {
                if ((object.ReferenceEquals(this.ChestField, value) != true)) {
                    this.ChestField = value;
                    this.RaisePropertyChanged("Chest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string SceneName {
            get {
                return this.SceneNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SceneNameField, value) != true)) {
                    this.SceneNameField = value;
                    this.RaisePropertyChanged("SceneName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Time {
            get {
                return this.TimeField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeField, value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int TreasureChestId {
            get {
                return this.TreasureChestIdField;
            }
            set {
                if ((this.TreasureChestIdField.Equals(value) != true)) {
                    this.TreasureChestIdField = value;
                    this.RaisePropertyChanged("TreasureChestId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserTreasureChestDataChest", Namespace="")]
    [System.SerializableAttribute()]
    public partial class UserTreasureChestDataChest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool FoundField;
        
        private System.Nullable<int> GameCurrencyField;
        
        private bool GameCurrencySpecifiedField;
        
        private System.Nullable<int> ItemIdField;
        
        private bool ItemIdSpecifiedField;
        
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool Found {
            get {
                return this.FoundField;
            }
            set {
                if ((this.FoundField.Equals(value) != true)) {
                    this.FoundField = value;
                    this.RaisePropertyChanged("Found");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> GameCurrency {
            get {
                return this.GameCurrencyField;
            }
            set {
                if ((this.GameCurrencyField.Equals(value) != true)) {
                    this.GameCurrencyField = value;
                    this.RaisePropertyChanged("GameCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool GameCurrencySpecified {
            get {
                return this.GameCurrencySpecifiedField;
            }
            set {
                if ((this.GameCurrencySpecifiedField.Equals(value) != true)) {
                    this.GameCurrencySpecifiedField = value;
                    this.RaisePropertyChanged("GameCurrencySpecified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool ItemIdSpecified {
            get {
                return this.ItemIdSpecifiedField;
            }
            set {
                if ((this.ItemIdSpecifiedField.Equals(value) != true)) {
                    this.ItemIdSpecifiedField = value;
                    this.RaisePropertyChanged("ItemIdSpecified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TI", Namespace="")]
    [System.SerializableAttribute()]
    public partial class TI : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Nullable<System.DateTime> cdField;
        
        private System.Nullable<int> idField;
        
        private bool isField;
        
        private string iuField;
        
        private System.Nullable<System.DateTime> mdField;
        
        private string nmField;
        
        private System.Nullable<int> slField;
        
        private System.Guid uidField;
        
        private int utcidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.DateTime> cd {
            get {
                return this.cdField;
            }
            set {
                if ((this.cdField.Equals(value) != true)) {
                    this.cdField = value;
                    this.RaisePropertyChanged("cd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool @is {
            get {
                return this.isField;
            }
            set {
                if ((this.isField.Equals(value) != true)) {
                    this.isField = value;
                    this.RaisePropertyChanged("is");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string iu {
            get {
                return this.iuField;
            }
            set {
                if ((object.ReferenceEquals(this.iuField, value) != true)) {
                    this.iuField = value;
                    this.RaisePropertyChanged("iu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.DateTime> md {
            get {
                return this.mdField;
            }
            set {
                if ((this.mdField.Equals(value) != true)) {
                    this.mdField = value;
                    this.RaisePropertyChanged("md");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string nm {
            get {
                return this.nmField;
            }
            set {
                if ((object.ReferenceEquals(this.nmField, value) != true)) {
                    this.nmField = value;
                    this.RaisePropertyChanged("nm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> sl {
            get {
                return this.slField;
            }
            set {
                if ((this.slField.Equals(value) != true)) {
                    this.slField = value;
                    this.RaisePropertyChanged("sl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Guid uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int utcid {
            get {
                return this.utcidField;
            }
            set {
                if ((this.utcidField.Equals(value) != true)) {
                    this.utcidField = value;
                    this.RaisePropertyChanged("utcid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TE", Namespace="")]
    [System.SerializableAttribute()]
    public partial class TE : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Nullable<int> idField;
        
        private float pxField;
        
        private float pyField;
        
        private float pzField;
        
        private string ridField;
        
        private float rxField;
        
        private float ryField;
        
        private double rzField;
        
        private int utetidField;
        
        private System.Nullable<int> utidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public float px {
            get {
                return this.pxField;
            }
            set {
                if ((this.pxField.Equals(value) != true)) {
                    this.pxField = value;
                    this.RaisePropertyChanged("px");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public float py {
            get {
                return this.pyField;
            }
            set {
                if ((this.pyField.Equals(value) != true)) {
                    this.pyField = value;
                    this.RaisePropertyChanged("py");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public float pz {
            get {
                return this.pzField;
            }
            set {
                if ((this.pzField.Equals(value) != true)) {
                    this.pzField = value;
                    this.RaisePropertyChanged("pz");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string rid {
            get {
                return this.ridField;
            }
            set {
                if ((object.ReferenceEquals(this.ridField, value) != true)) {
                    this.ridField = value;
                    this.RaisePropertyChanged("rid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public float rx {
            get {
                return this.rxField;
            }
            set {
                if ((this.rxField.Equals(value) != true)) {
                    this.rxField = value;
                    this.RaisePropertyChanged("rx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public float ry {
            get {
                return this.ryField;
            }
            set {
                if ((this.ryField.Equals(value) != true)) {
                    this.ryField = value;
                    this.RaisePropertyChanged("ry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double rz {
            get {
                return this.rzField;
            }
            set {
                if ((this.rzField.Equals(value) != true)) {
                    this.rzField = value;
                    this.RaisePropertyChanged("rz");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int utetid {
            get {
                return this.utetidField;
            }
            set {
                if ((this.utetidField.Equals(value) != true)) {
                    this.utetidField = value;
                    this.RaisePropertyChanged("utetid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> utid {
            get {
                return this.utidField;
            }
            set {
                if ((this.utidField.Equals(value) != true)) {
                    this.utidField = value;
                    this.RaisePropertyChanged("utid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UT", Namespace="")]
    [System.SerializableAttribute()]
    public partial class UT : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Nullable<int> idField;
        
        private string nField;
        
        private System.Nullable<bool> shField;
        
        private System.Nullable<int> slField;
        
        private System.Nullable<System.Guid> uidField;
        
        private System.Nullable<int> utcidField;
        
        private KeyPair.PairActor.ContentService.TE[] utesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string n {
            get {
                return this.nField;
            }
            set {
                if ((object.ReferenceEquals(this.nField, value) != true)) {
                    this.nField = value;
                    this.RaisePropertyChanged("n");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<bool> sh {
            get {
                return this.shField;
            }
            set {
                if ((this.shField.Equals(value) != true)) {
                    this.shField = value;
                    this.RaisePropertyChanged("sh");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> sl {
            get {
                return this.slField;
            }
            set {
                if ((this.slField.Equals(value) != true)) {
                    this.slField = value;
                    this.RaisePropertyChanged("sl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.Guid> uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> utcid {
            get {
                return this.utcidField;
            }
            set {
                if ((this.utcidField.Equals(value) != true)) {
                    this.utcidField = value;
                    this.RaisePropertyChanged("utcid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.TE[] utes {
            get {
                return this.utesField;
            }
            set {
                if ((object.ReferenceEquals(this.utesField, value) != true)) {
                    this.utesField = value;
                    this.RaisePropertyChanged("utes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GiftTransactionInfo", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeAdventure.MicroTransaction")]
    [System.SerializableAttribute()]
    public partial class GiftTransactionInfo : KeyPair.PairActor.ContentService.GameTransactionInfo {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GiftTransactionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RecieverUserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GiftTransactionID {
            get {
                return this.GiftTransactionIDField;
            }
            set {
                if ((this.GiftTransactionIDField.Equals(value) != true)) {
                    this.GiftTransactionIDField = value;
                    this.RaisePropertyChanged("GiftTransactionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RecieverUserID {
            get {
                return this.RecieverUserIDField;
            }
            set {
                if ((this.RecieverUserIDField.Equals(value) != true)) {
                    this.RecieverUserIDField = value;
                    this.RaisePropertyChanged("RecieverUserID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionInfo", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeAdventure.MicroTransaction")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(KeyPair.PairActor.ContentService.PurchaseTransactionInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(KeyPair.PairActor.ContentService.GameTransactionInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(KeyPair.PairActor.ContentService.GiftTransactionInfo))]
    public partial class TransactionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> ParentUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TransactionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TransactionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ParentUserID {
            get {
                return this.ParentUserIDField;
            }
            set {
                if ((this.ParentUserIDField.Equals(value) != true)) {
                    this.ParentUserIDField = value;
                    this.RaisePropertyChanged("ParentUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductGroupID {
            get {
                return this.ProductGroupIDField;
            }
            set {
                if ((this.ProductGroupIDField.Equals(value) != true)) {
                    this.ProductGroupIDField = value;
                    this.RaisePropertyChanged("ProductGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TransactionDate {
            get {
                return this.TransactionDateField;
            }
            set {
                if ((this.TransactionDateField.Equals(value) != true)) {
                    this.TransactionDateField = value;
                    this.RaisePropertyChanged("TransactionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TransactionID {
            get {
                return this.TransactionIDField;
            }
            set {
                if ((this.TransactionIDField.Equals(value) != true)) {
                    this.TransactionIDField = value;
                    this.RaisePropertyChanged("TransactionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PurchaseTransactionInfo", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeAdventure.MicroTransaction")]
    [System.SerializableAttribute()]
    public partial class PurchaseTransactionInfo : KeyPair.PairActor.ContentService.TransactionInfo {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrecyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KeyPair.PairActor.ContentService.CurrencyType CurrencyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PaymentTransactionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KeyPair.PairActor.ContentService.TransactionSource SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KeyPair.PairActor.ContentService.TransactionType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorTransactionIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrecyCode {
            get {
                return this.CurrecyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrecyCodeField, value) != true)) {
                    this.CurrecyCodeField = value;
                    this.RaisePropertyChanged("CurrecyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KeyPair.PairActor.ContentService.CurrencyType CurrencyType {
            get {
                return this.CurrencyTypeField;
            }
            set {
                if ((this.CurrencyTypeField.Equals(value) != true)) {
                    this.CurrencyTypeField = value;
                    this.RaisePropertyChanged("CurrencyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Item {
            get {
                return this.ItemField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemField, value) != true)) {
                    this.ItemField = value;
                    this.RaisePropertyChanged("Item");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PaymentTransactionID {
            get {
                return this.PaymentTransactionIDField;
            }
            set {
                if ((this.PaymentTransactionIDField.Equals(value) != true)) {
                    this.PaymentTransactionIDField = value;
                    this.RaisePropertyChanged("PaymentTransactionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KeyPair.PairActor.ContentService.TransactionSource Source {
            get {
                return this.SourceField;
            }
            set {
                if ((this.SourceField.Equals(value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KeyPair.PairActor.ContentService.TransactionType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorTransactionID {
            get {
                return this.VendorTransactionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorTransactionIDField, value) != true)) {
                    this.VendorTransactionIDField = value;
                    this.RaisePropertyChanged("VendorTransactionID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameTransactionInfo", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeAdventure.MicroTransaction")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(KeyPair.PairActor.ContentService.GiftTransactionInfo))]
    public partial class GameTransactionInfo : KeyPair.PairActor.ContentService.TransactionInfo {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<KeyPair.PairActor.ContentService.GameCurrency> CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KeyPair.PairActor.ContentService.GameTransactionType TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<KeyPair.PairActor.ContentService.GameCurrency> Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((this.CurrencyField.Equals(value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KeyPair.PairActor.ContentService.GameTransactionType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameCurrency", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeAdventure.MicroTransaction")]
    public enum GameCurrency : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Coin = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Buck = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Others = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameTransactionType", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeAdventure.MicroTransaction")]
    public enum GameTransactionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Get = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Purchase = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Trade = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Gift = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeleteProfile = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Child = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CurrencyType", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeAdventure.MicroTransaction")]
    public enum CurrencyType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Coins = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VCash = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionSource", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeAdventure.MicroTransaction")]
    public enum TransactionSource : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        System = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Store = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AppleStore = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Supersonic = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FacebookPayment = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GoogleMarket = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrialPay = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TapJoy = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Amazon = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fuhu = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WindowsStore = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Oink = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CSTool = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Steam = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VK = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Kongregate = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LiveGamer = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Knetik = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Xsolla = 19,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionType", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeAdventure.MicroTransaction")]
    public enum TransactionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sale = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Refund = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Void = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Award = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WriteOff = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommissionEvent = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dispute = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductItem", Namespace="")]
    [System.SerializableAttribute()]
    public partial class ProductItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int ProductGroupIdField;
        
        private string ProductGroupNameField;
        
        private int ProductIdField;
        
        private string ProductNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ProductGroupId {
            get {
                return this.ProductGroupIdField;
            }
            set {
                if ((this.ProductGroupIdField.Equals(value) != true)) {
                    this.ProductGroupIdField = value;
                    this.RaisePropertyChanged("ProductGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ProductGroupName {
            get {
                return this.ProductGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductGroupNameField, value) != true)) {
                    this.ProductGroupNameField = value;
                    this.RaisePropertyChanged("ProductGroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetNextItemStateRequest", Namespace="")]
    [System.SerializableAttribute()]
    public partial class SetNextItemStateRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KeyPair.PairActor.ContentService.CommonInventoryConsumable[] CICSField;
        
        private int CIIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OSCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PGIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SIDField;
        
        private System.Guid UIDField;
        
        private int UIPIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KeyPair.PairActor.ContentService.CommonInventoryConsumable[] CICS {
            get {
                return this.CICSField;
            }
            set {
                if ((object.ReferenceEquals(this.CICSField, value) != true)) {
                    this.CICSField = value;
                    this.RaisePropertyChanged("CICS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CIID {
            get {
                return this.CIIDField;
            }
            set {
                if ((this.CIIDField.Equals(value) != true)) {
                    this.CIIDField = value;
                    this.RaisePropertyChanged("CIID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OSC {
            get {
                return this.OSCField;
            }
            set {
                if ((this.OSCField.Equals(value) != true)) {
                    this.OSCField = value;
                    this.RaisePropertyChanged("OSC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PGID {
            get {
                return this.PGIDField;
            }
            set {
                if ((this.PGIDField.Equals(value) != true)) {
                    this.PGIDField = value;
                    this.RaisePropertyChanged("PGID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PID {
            get {
                return this.PIDField;
            }
            set {
                if ((this.PIDField.Equals(value) != true)) {
                    this.PIDField = value;
                    this.RaisePropertyChanged("PID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SID {
            get {
                return this.SIDField;
            }
            set {
                if ((this.SIDField.Equals(value) != true)) {
                    this.SIDField = value;
                    this.RaisePropertyChanged("SID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Guid UID {
            get {
                return this.UIDField;
            }
            set {
                if ((this.UIDField.Equals(value) != true)) {
                    this.UIDField = value;
                    this.RaisePropertyChanged("UID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int UIPID {
            get {
                return this.UIPIDField;
            }
            set {
                if ((this.UIPIDField.Equals(value) != true)) {
                    this.UIPIDField = value;
                    this.RaisePropertyChanged("UIPID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommonInventoryConsumable", Namespace="")]
    [System.SerializableAttribute()]
    public partial class CommonInventoryConsumable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int CommonInventoryIDField;
        
        private int ItemIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CommonInventoryID {
            get {
                return this.CommonInventoryIDField;
            }
            set {
                if ((this.CommonInventoryIDField.Equals(value) != true)) {
                    this.CommonInventoryIDField = value;
                    this.RaisePropertyChanged("CommonInventoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetNextItemStateResult", Namespace="")]
    [System.SerializableAttribute()]
    public partial class SetNextItemStateResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KeyPair.PairActor.ContentService.ItemStateChangeError ECField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KeyPair.PairActor.ContentService.AR[] RewardsField;
        
        private bool SField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KeyPair.PairActor.ContentService.UserItemState UISField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KeyPair.PairActor.ContentService.ItemStateChangeError EC {
            get {
                return this.ECField;
            }
            set {
                if ((this.ECField.Equals(value) != true)) {
                    this.ECField = value;
                    this.RaisePropertyChanged("EC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KeyPair.PairActor.ContentService.AR[] Rewards {
            get {
                return this.RewardsField;
            }
            set {
                if ((object.ReferenceEquals(this.RewardsField, value) != true)) {
                    this.RewardsField = value;
                    this.RaisePropertyChanged("Rewards");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool S {
            get {
                return this.SField;
            }
            set {
                if ((this.SField.Equals(value) != true)) {
                    this.SField = value;
                    this.RaisePropertyChanged("S");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KeyPair.PairActor.ContentService.UserItemState UIS {
            get {
                return this.UISField;
            }
            set {
                if ((object.ReferenceEquals(this.UISField, value) != true)) {
                    this.UISField = value;
                    this.RaisePropertyChanged("UIS");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemStateChangeError", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeAdventure.ContentServer.Model.In" +
        "ventory")]
    public enum ItemStateChangeError : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CannotOverrideCriteria = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeNotReached = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CannotFindInventoryItem = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UsesLessThanRequired = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnableToGetItem = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QtyLessThanRequired = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ItemNotInUserInventory = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransitionFailed = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ItemStateNotInStateList = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OverrideCriteriaNotFound = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoCriteriasFound = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutomaticPurchaseFailed = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ItemStateExpired = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 255,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetSpeedUpItemRequest", Namespace="")]
    [System.SerializableAttribute()]
    public partial class SetSpeedUpItemRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int CIIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CTIDField;
        
        private int IIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PGIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PIDField;
        
        private int STIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UIPIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CIID {
            get {
                return this.CIIDField;
            }
            set {
                if ((this.CIIDField.Equals(value) != true)) {
                    this.CIIDField = value;
                    this.RaisePropertyChanged("CIID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CTID {
            get {
                return this.CTIDField;
            }
            set {
                if ((this.CTIDField.Equals(value) != true)) {
                    this.CTIDField = value;
                    this.RaisePropertyChanged("CTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int IID {
            get {
                return this.IIDField;
            }
            set {
                if ((this.IIDField.Equals(value) != true)) {
                    this.IIDField = value;
                    this.RaisePropertyChanged("IID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PGID {
            get {
                return this.PGIDField;
            }
            set {
                if ((this.PGIDField.Equals(value) != true)) {
                    this.PGIDField = value;
                    this.RaisePropertyChanged("PGID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PID {
            get {
                return this.PIDField;
            }
            set {
                if ((this.PIDField.Equals(value) != true)) {
                    this.PIDField = value;
                    this.RaisePropertyChanged("PID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int STID {
            get {
                return this.STIDField;
            }
            set {
                if ((this.STIDField.Equals(value) != true)) {
                    this.STIDField = value;
                    this.RaisePropertyChanged("STID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UID {
            get {
                return this.UIDField;
            }
            set {
                if ((this.UIDField.Equals(value) != true)) {
                    this.UIDField = value;
                    this.RaisePropertyChanged("UID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UIPID {
            get {
                return this.UIPIDField;
            }
            set {
                if ((this.UIPIDField.Equals(value) != true)) {
                    this.UIPIDField = value;
                    this.RaisePropertyChanged("UIPID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetSpeedUpItemResult", Namespace="")]
    [System.SerializableAttribute()]
    public partial class SetSpeedUpItemResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int AMTField;
        
        private int CIIDField;
        
        private bool SField;
        
        private KeyPair.PairActor.ContentService.SetSpeedUpItemStatus STAField;
        
        private bool USESField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int AMT {
            get {
                return this.AMTField;
            }
            set {
                if ((this.AMTField.Equals(value) != true)) {
                    this.AMTField = value;
                    this.RaisePropertyChanged("AMT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CIID {
            get {
                return this.CIIDField;
            }
            set {
                if ((this.CIIDField.Equals(value) != true)) {
                    this.CIIDField = value;
                    this.RaisePropertyChanged("CIID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool S {
            get {
                return this.SField;
            }
            set {
                if ((this.SField.Equals(value) != true)) {
                    this.SField = value;
                    this.RaisePropertyChanged("S");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.SetSpeedUpItemStatus STA {
            get {
                return this.STAField;
            }
            set {
                if ((this.STAField.Equals(value) != true)) {
                    this.STAField = value;
                    this.RaisePropertyChanged("STA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool USES {
            get {
                return this.USESField;
            }
            set {
                if ((this.USESField.Equals(value) != true)) {
                    this.USESField = value;
                    this.RaisePropertyChanged("USES");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetSpeedUpItemStatus", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeAdventure.ContentServer.Model.In" +
        "ventory")]
    public enum SetSpeedUpItemStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserItemStateNotFound = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpeedUpCriteriaNotFound = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutomaticPurchaseFailed = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 255,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeleteProfileRequest", Namespace="")]
    [System.SerializableAttribute()]
    public partial class DeleteProfileRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Guid OwnerIDField;
        
        private int ProductGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIDField;
        
        private System.Guid UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Guid OwnerID {
            get {
                return this.OwnerIDField;
            }
            set {
                if ((this.OwnerIDField.Equals(value) != true)) {
                    this.OwnerIDField = value;
                    this.RaisePropertyChanged("OwnerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ProductGroupID {
            get {
                return this.ProductGroupIDField;
            }
            set {
                if ((this.ProductGroupIDField.Equals(value) != true)) {
                    this.ProductGroupIDField = value;
                    this.RaisePropertyChanged("ProductGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Guid UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeleteProfileStatus", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeAdventure.Model.Membership.Enume" +
        "rations")]
    public enum DeleteProfileStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUCCESS = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ALREADY_DELETED = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NOT_A_PROFILE_ACCOUNT = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OWNER_ID_NOT_FOUND = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PROFILE_NOT_OWNED_BY_THIS_OWNER = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PROFILE_NOT_FOUND = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PROFILE_CANNOT_BE_DELETED = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IN_SUFFICIENT_VCASH_FUNDS = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ERROR = 255,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NameValidationRequest", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeAdventure.ContentServer.Model.Co" +
        "ntentServer")]
    [System.SerializableAttribute()]
    public partial class NameValidationRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private KeyPair.PairActor.ContentService.NameCategory CategoryField;
        
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.NameCategory Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((this.CategoryField.Equals(value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NameCategory", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeAdventure.ContentServer.Model.Co" +
        "ntentServer")]
    public enum NameCategory : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Avatar = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pet = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Group = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NameValidationResponse", Namespace="")]
    [System.SerializableAttribute()]
    public partial class NameValidationResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private KeyPair.PairActor.ContentService.NameValidationResult CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public KeyPair.PairActor.ContentService.NameValidationResult Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((this.CategoryField.Equals(value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NameValidationResult", Namespace="")]
    public enum NameValidationResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ok = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Blocked = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotUnique = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidLength = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="KnowledgeAdventure.Service", ConfigurationName="ContentService.IContentService", SessionMode=System.ServiceModel.SessionMode.NotAllowed)]
    public interface IContentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetAuthoritativeTime", ReplyAction="KnowledgeAdventure.Service/IContentService/GetAuthoritativeTimeResponse")]
        System.DateTime GetAuthoritativeTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetAuthoritativeTime", ReplyAction="KnowledgeAdventure.Service/IContentService/GetAuthoritativeTimeResponse")]
        System.Threading.Tasks.Task<System.DateTime> GetAuthoritativeTimeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetAvatarByUserID", ReplyAction="KnowledgeAdventure.Service/IContentService/GetAvatarByUserIDResponse")]
        KeyPair.PairActor.ContentService.AvatarData GetAvatarByUserID(int productGroupID, System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetAvatarByUserID", ReplyAction="KnowledgeAdventure.Service/IContentService/GetAvatarByUserIDResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.AvatarData> GetAvatarByUserIDAsync(int productGroupID, System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetAvatarDisplayDataByUserID", ReplyAction="KnowledgeAdventure.Service/IContentService/GetAvatarDisplayDataByUserIDResponse")]
        KeyPair.PairActor.ContentService.AvatarDisplayData GetAvatarDisplayDataByUserID(int productGroupID, System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetAvatarDisplayDataByUserID", ReplyAction="KnowledgeAdventure.Service/IContentService/GetAvatarDisplayDataByUserIDResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.AvatarDisplayData> GetAvatarDisplayDataByUserIDAsync(int productGroupID, System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetAvatar", ReplyAction="KnowledgeAdventure.Service/IContentService/SetAvatarResponse")]
        bool SetAvatar(int productGroupID, System.Guid userId, KeyPair.PairActor.ContentService.AvatarData avatarData);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetAvatar", ReplyAction="KnowledgeAdventure.Service/IContentService/SetAvatarResponse")]
        System.Threading.Tasks.Task<bool> SetAvatarAsync(int productGroupID, System.Guid userId, KeyPair.PairActor.ContentService.AvatarData avatarData);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetDisplayName", ReplyAction="KnowledgeAdventure.Service/IContentService/SetDisplayNameResponse")]
        int SetDisplayName(int productGroupID, System.Guid userId, int avatarID, int firstNameID, int secondNameID, int thirdNameID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetDisplayName", ReplyAction="KnowledgeAdventure.Service/IContentService/SetDisplayNameResponse")]
        System.Threading.Tasks.Task<int> SetDisplayNameAsync(int productGroupID, System.Guid userId, int avatarID, int firstNameID, int secondNameID, int thirdNameID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetNickname", ReplyAction="KnowledgeAdventure.Service/IContentService/SetNicknameResponse")]
        KeyPair.PairActor.ContentService.NicknameSetResult SetNickname(int productGroupID, System.Guid userId, System.Guid otherID, string nickName);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetNickname", ReplyAction="KnowledgeAdventure.Service/IContentService/SetNicknameResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.NicknameSetResult> SetNicknameAsync(int productGroupID, System.Guid userId, System.Guid otherID, string nickName);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetAvatarDisplayName", ReplyAction="KnowledgeAdventure.Service/IContentService/SetAvatarDisplayNameResponse")]
        int SetAvatarDisplayName(int productGroupID, System.Guid userID, string displayName);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetAvatarDisplayName", ReplyAction="KnowledgeAdventure.Service/IContentService/SetAvatarDisplayNameResponse")]
        System.Threading.Tasks.Task<int> SetAvatarDisplayNameAsync(int productGroupID, System.Guid userID, string displayName);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetDisplayNames", ReplyAction="KnowledgeAdventure.Service/IContentService/GetDisplayNamesResponse")]
        KeyPair.PairActor.ContentService.DisplayNames GetDisplayNames(int productGroupID, System.Nullable<int> categoryID, string locale);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetDisplayNames", ReplyAction="KnowledgeAdventure.Service/IContentService/GetDisplayNamesResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.DisplayNames> GetDisplayNamesAsync(int productGroupID, System.Nullable<int> categoryID, string locale);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetDisplayNameByUserID", ReplyAction="KnowledgeAdventure.Service/IContentService/GetDisplayNameByUserIDResponse")]
        string GetDisplayNameByUserID(int productGroupID, System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetDisplayNameByUserID", ReplyAction="KnowledgeAdventure.Service/IContentService/GetDisplayNameByUserIDResponse")]
        System.Threading.Tasks.Task<string> GetDisplayNameByUserIDAsync(int productGroupID, System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetNicknames", ReplyAction="KnowledgeAdventure.Service/IContentService/GetNicknamesResponse")]
        KeyPair.PairActor.ContentService.Nn[] GetNicknames(int productGroupID, System.Guid userID, System.Nullable<System.Guid>[] otherID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetNicknames", ReplyAction="KnowledgeAdventure.Service/IContentService/GetNicknamesResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.Nn[]> GetNicknamesAsync(int productGroupID, System.Guid userID, System.Nullable<System.Guid>[] otherID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetDisplayNamesByUserIDs", ReplyAction="KnowledgeAdventure.Service/IContentService/GetDisplayNamesByUserIDsResponse")]
        System.Collections.Generic.KeyValuePair<System.Guid, string>[] GetDisplayNamesByUserIDs(int productGroupID, System.Guid[] userIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetDisplayNamesByUserIDs", ReplyAction="KnowledgeAdventure.Service/IContentService/GetDisplayNamesByUserIDsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<System.Guid, string>[]> GetDisplayNamesByUserIDsAsync(int productGroupID, System.Guid[] userIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetDefaultAvatar", ReplyAction="KnowledgeAdventure.Service/IContentService/SetDefaultAvatarResponse")]
        bool SetDefaultAvatar(int productGroupID, System.Guid userID, KeyPair.PairActor.ContentService.AvatarData avatarData);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetDefaultAvatar", ReplyAction="KnowledgeAdventure.Service/IContentService/SetDefaultAvatarResponse")]
        System.Threading.Tasks.Task<bool> SetDefaultAvatarAsync(int productGroupID, System.Guid userID, KeyPair.PairActor.ContentService.AvatarData avatarData);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetUserGrade", ReplyAction="KnowledgeAdventure.Service/IContentService/SetUserGradeResponse")]
        KeyPair.PairActor.ContentService.SetUserGradeResult SetUserGrade(int productGroupID, System.Guid userID, KeyPair.PairActor.ContentService.UserGradeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetUserGrade", ReplyAction="KnowledgeAdventure.Service/IContentService/SetUserGradeResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.SetUserGradeResult> SetUserGradeAsync(int productGroupID, System.Guid userID, KeyPair.PairActor.ContentService.UserGradeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetUserGrade", ReplyAction="KnowledgeAdventure.Service/IContentService/GetUserGradeResponse")]
        KeyPair.PairActor.ContentService.UG GetUserGrade(int productGroupID, System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetUserGrade", ReplyAction="KnowledgeAdventure.Service/IContentService/GetUserGradeResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UG> GetUserGradeAsync(int productGroupID, System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetAllUserGradesByPGID", ReplyAction="KnowledgeAdventure.Service/IContentService/GetAllUserGradesByPGIDResponse")]
        KeyPair.PairActor.ContentService.UG[] GetAllUserGradesByPGID(int pgid);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetAllUserGradesByPGID", ReplyAction="KnowledgeAdventure.Service/IContentService/GetAllUserGradesByPGIDResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UG[]> GetAllUserGradesByPGIDAsync(int pgid);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetHouseByUserID", ReplyAction="KnowledgeAdventure.Service/IContentService/GetHouseByUserIDResponse")]
        KeyPair.PairActor.ContentService.HouseData GetHouseByUserID(int productID, System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetHouseByUserID", ReplyAction="KnowledgeAdventure.Service/IContentService/GetHouseByUserIDResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.HouseData> GetHouseByUserIDAsync(int productID, System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetHouse", ReplyAction="KnowledgeAdventure.Service/IContentService/SetHouseResponse")]
        bool SetHouse(int productGroupID, int productID, System.Guid userID, KeyPair.PairActor.ContentService.HouseData houseData);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetHouse", ReplyAction="KnowledgeAdventure.Service/IContentService/SetHouseResponse")]
        System.Threading.Tasks.Task<bool> SetHouseAsync(int productGroupID, int productID, System.Guid userID, KeyPair.PairActor.ContentService.HouseData houseData);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SubmitImage", ReplyAction="KnowledgeAdventure.Service/IContentService/SubmitImageResponse")]
        KeyPair.PairActor.ContentService.ImageSubmitResult SubmitImage(int productID, int productGroupID, System.Guid userID, string imageType, byte imageSlot);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SubmitImage", ReplyAction="KnowledgeAdventure.Service/IContentService/SubmitImageResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.ImageSubmitResult> SubmitImageAsync(int productID, int productGroupID, System.Guid userID, string imageType, byte imageSlot);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetImageDataByProductGroup", ReplyAction="KnowledgeAdventure.Service/IContentService/GetImageDataByProductGroupResponse")]
        KeyPair.PairActor.ContentService.ImageData GetImageDataByProductGroup(int productGroupID, int productID, System.Guid userID, string imageType, byte imageSlot);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetImageDataByProductGroup", ReplyAction="KnowledgeAdventure.Service/IContentService/GetImageDataByProductGroupResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.ImageData> GetImageDataByProductGroupAsync(int productGroupID, int productID, System.Guid userID, string imageType, byte imageSlot);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetImage", ReplyAction="KnowledgeAdventure.Service/IContentService/GetImageResponse")]
        KeyPair.PairActor.ContentService.ImageData GetImage(int productID, System.Guid userID, string imageType, byte imageSlot);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetImage", ReplyAction="KnowledgeAdventure.Service/IContentService/GetImageResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.ImageData> GetImageAsync(int productID, System.Guid userID, string imageType, byte imageSlot);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetImageByProductGroup", ReplyAction="KnowledgeAdventure.Service/IContentService/GetImageByProductGroupResponse")]
        KeyPair.PairActor.ContentService.ImageDataComplete[] GetImageByProductGroup(int productGroupID, System.Guid userID, string imageType, byte imageSlot);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetImageByProductGroup", ReplyAction="KnowledgeAdventure.Service/IContentService/GetImageByProductGroupResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.ImageDataComplete[]> GetImageByProductGroupAsync(int productGroupID, System.Guid userID, string imageType, byte imageSlot);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetImage", ReplyAction="KnowledgeAdventure.Service/IContentService/SetImageResponse")]
        bool SetImage(int productGroupID, int productID, System.Guid userID, System.Guid parentID, string imageType, byte imageSlot, byte[] imageFile, KeyPair.PairActor.ContentService.ImageData imageData);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetImage", ReplyAction="KnowledgeAdventure.Service/IContentService/SetImageResponse")]
        System.Threading.Tasks.Task<bool> SetImageAsync(int productGroupID, int productID, System.Guid userID, System.Guid parentID, string imageType, byte imageSlot, byte[] imageFile, KeyPair.PairActor.ContentService.ImageData imageData);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetImageWithImageUrlReturned", ReplyAction="KnowledgeAdventure.Service/IContentService/SetImageWithImageUrlReturnedResponse")]
        KeyPair.PairActor.ContentService.SetImageWithImageUrlReturnedResponse SetImageWithImageUrlReturned(KeyPair.PairActor.ContentService.SetImageWithImageUrlReturnedRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetImageWithImageUrlReturned", ReplyAction="KnowledgeAdventure.Service/IContentService/SetImageWithImageUrlReturnedResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.SetImageWithImageUrlReturnedResponse> SetImageWithImageUrlReturnedAsync(KeyPair.PairActor.ContentService.SetImageWithImageUrlReturnedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/DelImage", ReplyAction="KnowledgeAdventure.Service/IContentService/DelImageResponse")]
        bool DelImage(int productID, System.Guid userID, string imageType, byte imageSlot);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/DelImage", ReplyAction="KnowledgeAdventure.Service/IContentService/DelImageResponse")]
        System.Threading.Tasks.Task<bool> DelImageAsync(int productID, System.Guid userID, string imageType, byte imageSlot);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/CacheContent", ReplyAction="KnowledgeAdventure.Service/IContentService/CacheContentResponse")]
        KeyPair.PairActor.ContentService.CacheContentResult CacheContent(int productID, System.Guid userID, System.Guid parentID, string fileCategory, string fileName, byte[] fileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/CacheContent", ReplyAction="KnowledgeAdventure.Service/IContentService/CacheContentResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.CacheContentResult> CacheContentAsync(int productID, System.Guid userID, System.Guid parentID, string fileCategory, string fileName, byte[] fileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetRevealIndex", ReplyAction="KnowledgeAdventure.Service/IContentService/GetRevealIndexResponse")]
        KeyPair.PairActor.ContentService.RevealData GetRevealIndex(int productID, System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetRevealIndex", ReplyAction="KnowledgeAdventure.Service/IContentService/GetRevealIndexResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.RevealData> GetRevealIndexAsync(int productID, System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetRevealIndex", ReplyAction="KnowledgeAdventure.Service/IContentService/SetRevealIndexResponse")]
        bool SetRevealIndex(int productID, System.Guid userID, KeyPair.PairActor.ContentService.RevealData revealData);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetRevealIndex", ReplyAction="KnowledgeAdventure.Service/IContentService/SetRevealIndexResponse")]
        System.Threading.Tasks.Task<bool> SetRevealIndexAsync(int productID, System.Guid userID, KeyPair.PairActor.ContentService.RevealData revealData);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetPresentIndex", ReplyAction="KnowledgeAdventure.Service/IContentService/GetPresentIndexResponse")]
        KeyPair.PairActor.ContentService.PresentData GetPresentIndex(int productID, System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetPresentIndex", ReplyAction="KnowledgeAdventure.Service/IContentService/GetPresentIndexResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.PresentData> GetPresentIndexAsync(int productID, System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetPresentIndex", ReplyAction="KnowledgeAdventure.Service/IContentService/SetPresentIndexResponse")]
        bool SetPresentIndex(int productID, System.Guid userID, KeyPair.PairActor.ContentService.PresentData presentData);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetPresentIndex", ReplyAction="KnowledgeAdventure.Service/IContentService/SetPresentIndexResponse")]
        System.Threading.Tasks.Task<bool> SetPresentIndexAsync(int productID, System.Guid userID, KeyPair.PairActor.ContentService.PresentData presentData);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetInventory", ReplyAction="KnowledgeAdventure.Service/IContentService/GetInventoryResponse")]
        KeyPair.PairActor.ContentService.InventoryData GetInventory(int productID, System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetInventory", ReplyAction="KnowledgeAdventure.Service/IContentService/GetInventoryResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.InventoryData> GetInventoryAsync(int productID, System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetInventory", ReplyAction="KnowledgeAdventure.Service/IContentService/SetInventoryResponse")]
        bool SetInventory(int productID, System.Guid userID, KeyPair.PairActor.ContentService.InventoryData inventoryData);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetInventory", ReplyAction="KnowledgeAdventure.Service/IContentService/SetInventoryResponse")]
        System.Threading.Tasks.Task<bool> SetInventoryAsync(int productID, System.Guid userID, KeyPair.PairActor.ContentService.InventoryData inventoryData);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetCommonInventory", ReplyAction="KnowledgeAdventure.Service/IContentService/GetCommonInventoryResponse")]
        KeyPair.PairActor.ContentService.CommonInventory GetCommonInventory(int productGroupID, System.Guid userID, int ContainerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetCommonInventory", ReplyAction="KnowledgeAdventure.Service/IContentService/GetCommonInventoryResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.CommonInventory> GetCommonInventoryAsync(int productGroupID, System.Guid userID, int ContainerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetCommonInventory", ReplyAction="KnowledgeAdventure.Service/IContentService/SetCommonInventoryResponse")]
        KeyPair.PairActor.ContentService.CIRS SetCommonInventory(int productGroupID, System.Guid userID, int containerId, KeyPair.PairActor.ContentService.CIRT[] commonInventoryRequests);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetCommonInventory", ReplyAction="KnowledgeAdventure.Service/IContentService/SetCommonInventoryResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.CIRS> SetCommonInventoryAsync(int productGroupID, System.Guid userID, int containerId, KeyPair.PairActor.ContentService.CIRT[] commonInventoryRequests);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/AcceptTrade", ReplyAction="KnowledgeAdventure.Service/IContentService/AcceptTradeResponse")]
        bool AcceptTrade(int productGroupID, int containerID, System.Guid userID, int myInventoryItemID, System.Guid otherUserID, int otherInventoryItemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/AcceptTrade", ReplyAction="KnowledgeAdventure.Service/IContentService/AcceptTradeResponse")]
        System.Threading.Tasks.Task<bool> AcceptTradeAsync(int productGroupID, int containerID, System.Guid userID, int myInventoryItemID, System.Guid otherUserID, int otherInventoryItemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/AddRewardItemToInventory", ReplyAction="KnowledgeAdventure.Service/IContentService/AddRewardItemToInventoryResponse")]
        bool AddRewardItemToInventory(int productGroupID, int containerID, System.Guid userID, int itemID, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/AddRewardItemToInventory", ReplyAction="KnowledgeAdventure.Service/IContentService/AddRewardItemToInventoryResponse")]
        System.Threading.Tasks.Task<bool> AddRewardItemToInventoryAsync(int productGroupID, int containerID, System.Guid userID, int itemID, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/PurchaseItems", ReplyAction="KnowledgeAdventure.Service/IContentService/PurchaseItemsResponse")]
        KeyPair.PairActor.ContentService.CIRS PurchaseItems(int productGroupID, System.Guid userId, int containerId, int storeID, int[] itemIDs, int currencyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/PurchaseItems", ReplyAction="KnowledgeAdventure.Service/IContentService/PurchaseItemsResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.CIRS> PurchaseItemsAsync(int productGroupID, System.Guid userId, int containerId, int storeID, int[] itemIDs, int currencyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SellItems", ReplyAction="KnowledgeAdventure.Service/IContentService/SellItemsResponse")]
        bool SellItems(int productGroupID, System.Guid userID, int containerID, int[] userInventoryCommonIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SellItems", ReplyAction="KnowledgeAdventure.Service/IContentService/SellItemsResponse")]
        System.Threading.Tasks.Task<bool> SellItemsAsync(int productGroupID, System.Guid userID, int containerID, int[] userInventoryCommonIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/UseInventory", ReplyAction="KnowledgeAdventure.Service/IContentService/UseInventoryResponse")]
        bool UseInventory(int productGroupID, int userInventoryId, int numberOfUses);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/UseInventory", ReplyAction="KnowledgeAdventure.Service/IContentService/UseInventoryResponse")]
        System.Threading.Tasks.Task<bool> UseInventoryAsync(int productGroupID, int userInventoryId, int numberOfUses);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/UseInventoryAndGetMultiplierRewards", ReplyAction="KnowledgeAdventure.Service/IContentService/UseInventoryAndGetMultiplierRewardsRes" +
            "ponse")]
        KeyPair.PairActor.ContentService.ARM[] UseInventoryAndGetMultiplierRewards(int productGroupID, int userInventoryId, int numberOfUses);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/UseInventoryAndGetMultiplierRewards", ReplyAction="KnowledgeAdventure.Service/IContentService/UseInventoryAndGetMultiplierRewardsRes" +
            "ponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.ARM[]> UseInventoryAndGetMultiplierRewardsAsync(int productGroupID, int userInventoryId, int numberOfUses);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetUserItemPositions", ReplyAction="KnowledgeAdventure.Service/IContentService/GetUserItemPositionsResponse")]
        KeyPair.PairActor.ContentService.UIP[] GetUserItemPositions(int productGroupID, System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetUserItemPositions", ReplyAction="KnowledgeAdventure.Service/IContentService/GetUserItemPositionsResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UIP[]> GetUserItemPositionsAsync(int productGroupID, System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetUserItemPositions", ReplyAction="KnowledgeAdventure.Service/IContentService/SetUserItemPositionsResponse")]
        KeyPair.PairActor.ContentService.UIPSRS SetUserItemPositions(int productGroupID, System.Guid userID, KeyPair.PairActor.ContentService.UIPSR[] createList, KeyPair.PairActor.ContentService.UIPSR[] updateList, int[] removeList);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetUserItemPositions", ReplyAction="KnowledgeAdventure.Service/IContentService/SetUserItemPositionsResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UIPSRS> SetUserItemPositionsAsync(int productGroupID, System.Guid userID, KeyPair.PairActor.ContentService.UIPSR[] createList, KeyPair.PairActor.ContentService.UIPSR[] updateList, int[] removeList);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetUserRoomItemPositions", ReplyAction="KnowledgeAdventure.Service/IContentService/GetUserRoomItemPositionsResponse")]
        KeyPair.PairActor.ContentService.UIP[] GetUserRoomItemPositions(int productGroupID, System.Guid userID, string roomID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetUserRoomItemPositions", ReplyAction="KnowledgeAdventure.Service/IContentService/GetUserRoomItemPositionsResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UIP[]> GetUserRoomItemPositionsAsync(int productGroupID, System.Guid userID, string roomID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetUserRoomItemPositions", ReplyAction="KnowledgeAdventure.Service/IContentService/SetUserRoomItemPositionsResponse")]
        KeyPair.PairActor.ContentService.UIPSRS SetUserRoomItemPositions(int productGroupID, System.Guid userID, KeyPair.PairActor.ContentService.UIPSR[] createList, KeyPair.PairActor.ContentService.UIPSR[] updateList, int[] removeList, string roomID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetUserRoomItemPositions", ReplyAction="KnowledgeAdventure.Service/IContentService/SetUserRoomItemPositionsResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UIPSRS> SetUserRoomItemPositionsAsync(int productGroupID, System.Guid userID, KeyPair.PairActor.ContentService.UIPSR[] createList, KeyPair.PairActor.ContentService.UIPSR[] updateList, int[] removeList, string roomID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetUserTimedItemByUserID", ReplyAction="KnowledgeAdventure.Service/IContentService/GetUserTimedItemByUserIDResponse")]
        KeyPair.PairActor.ContentService.UTI[] GetUserTimedItemByUserID(int productGroupID, System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetUserTimedItemByUserID", ReplyAction="KnowledgeAdventure.Service/IContentService/GetUserTimedItemByUserIDResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UTI[]> GetUserTimedItemByUserIDAsync(int productGroupID, System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetUserTimedItem", ReplyAction="KnowledgeAdventure.Service/IContentService/SetUserTimedItemResponse")]
        KeyPair.PairActor.ContentService.UTI SetUserTimedItem(int productGroupID, KeyPair.PairActor.ContentService.UTI input, KeyPair.PairActor.ContentService.UserTimedItemFlag flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetUserTimedItem", ReplyAction="KnowledgeAdventure.Service/IContentService/SetUserTimedItemResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UTI> SetUserTimedItemAsync(int productGroupID, KeyPair.PairActor.ContentService.UTI input, KeyPair.PairActor.ContentService.UserTimedItemFlag flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/DeleteUserTimedItem", ReplyAction="KnowledgeAdventure.Service/IContentService/DeleteUserTimedItemResponse")]
        bool DeleteUserTimedItem(int userTimedItemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/DeleteUserTimedItem", ReplyAction="KnowledgeAdventure.Service/IContentService/DeleteUserTimedItemResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserTimedItemAsync(int userTimedItemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetUserStaff", ReplyAction="KnowledgeAdventure.Service/IContentService/SetUserStaffResponse")]
        KeyPair.PairActor.ContentService.US SetUserStaff(int productGroupID, KeyPair.PairActor.ContentService.US input, KeyPair.PairActor.ContentService.UserStaffFlag flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetUserStaff", ReplyAction="KnowledgeAdventure.Service/IContentService/SetUserStaffResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.US> SetUserStaffAsync(int productGroupID, KeyPair.PairActor.ContentService.US input, KeyPair.PairActor.ContentService.UserStaffFlag flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetUserStaffByUserID", ReplyAction="KnowledgeAdventure.Service/IContentService/GetUserStaffByUserIDResponse")]
        KeyPair.PairActor.ContentService.US[] GetUserStaffByUserID(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetUserStaffByUserID", ReplyAction="KnowledgeAdventure.Service/IContentService/GetUserStaffByUserIDResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.US[]> GetUserStaffByUserIDAsync(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/CleanupUserStaffByUserID", ReplyAction="KnowledgeAdventure.Service/IContentService/CleanupUserStaffByUserIDResponse")]
        int CleanupUserStaffByUserID(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/CleanupUserStaffByUserID", ReplyAction="KnowledgeAdventure.Service/IContentService/CleanupUserStaffByUserIDResponse")]
        System.Threading.Tasks.Task<int> CleanupUserStaffByUserIDAsync(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetJobTypeList", ReplyAction="KnowledgeAdventure.Service/IContentService/GetJobTypeListResponse")]
        KeyPair.PairActor.ContentService.JT[] GetJobTypeList();
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetJobTypeList", ReplyAction="KnowledgeAdventure.Service/IContentService/GetJobTypeListResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.JT[]> GetJobTypeListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetUserGiftRequest", ReplyAction="KnowledgeAdventure.Service/IContentService/SetUserGiftRequestResponse")]
        KeyPair.PairActor.ContentService.UGR SetUserGiftRequest(KeyPair.PairActor.ContentService.UGR input);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetUserGiftRequest", ReplyAction="KnowledgeAdventure.Service/IContentService/SetUserGiftRequestResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UGR> SetUserGiftRequestAsync(KeyPair.PairActor.ContentService.UGR input);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetUserGiftRecipient", ReplyAction="KnowledgeAdventure.Service/IContentService/SetUserGiftRecipientResponse")]
        KeyPair.PairActor.ContentService.UGRE SetUserGiftRecipient(KeyPair.PairActor.ContentService.UGRE input);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetUserGiftRecipient", ReplyAction="KnowledgeAdventure.Service/IContentService/SetUserGiftRecipientResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UGRE> SetUserGiftRecipientAsync(KeyPair.PairActor.ContentService.UGRE input);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetUserGiftRequestByGiftRequestKey", ReplyAction="KnowledgeAdventure.Service/IContentService/GetUserGiftRequestByGiftRequestKeyResp" +
            "onse")]
        KeyPair.PairActor.ContentService.UGR GetUserGiftRequestByGiftRequestKey(System.Guid input);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetUserGiftRequestByGiftRequestKey", ReplyAction="KnowledgeAdventure.Service/IContentService/GetUserGiftRequestByGiftRequestKeyResp" +
            "onse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UGR> GetUserGiftRequestByGiftRequestKeyAsync(System.Guid input);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetUserActivityByUserID", ReplyAction="KnowledgeAdventure.Service/IContentService/GetUserActivityByUserIDResponse")]
        KeyPair.PairActor.ContentService.UA[] GetUserActivityByUserID(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetUserActivityByUserID", ReplyAction="KnowledgeAdventure.Service/IContentService/GetUserActivityByUserIDResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UA[]> GetUserActivityByUserIDAsync(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetUserActivityByProductGroupID", ReplyAction="KnowledgeAdventure.Service/IContentService/GetUserActivityByProductGroupIDRespons" +
            "e")]
        KeyPair.PairActor.ContentService.UA[] GetUserActivityByProductGroupID(System.Guid userID, int productGroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetUserActivityByProductGroupID", ReplyAction="KnowledgeAdventure.Service/IContentService/GetUserActivityByProductGroupIDRespons" +
            "e")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UA[]> GetUserActivityByProductGroupIDAsync(System.Guid userID, int productGroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetUserActivityCountByUserActivityType" +
            "ID", ReplyAction="KnowledgeAdventure.Service/IContentService/GetUserActivityCountByUserActivityType" +
            "IDResponse")]
        int GetUserActivityCountByUserActivityTypeID(System.Guid userID, int productGroupID, int userActivityTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetUserActivityCountByUserActivityType" +
            "ID", ReplyAction="KnowledgeAdventure.Service/IContentService/GetUserActivityCountByUserActivityType" +
            "IDResponse")]
        System.Threading.Tasks.Task<int> GetUserActivityCountByUserActivityTypeIDAsync(System.Guid userID, int productGroupID, int userActivityTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetActivityTypeList", ReplyAction="KnowledgeAdventure.Service/IContentService/GetActivityTypeListResponse")]
        KeyPair.PairActor.ContentService.UAT[] GetActivityTypeList();
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetActivityTypeList", ReplyAction="KnowledgeAdventure.Service/IContentService/GetActivityTypeListResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UAT[]> GetActivityTypeListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetUserActivity", ReplyAction="KnowledgeAdventure.Service/IContentService/SetUserActivityResponse")]
        KeyPair.PairActor.ContentService.UA SetUserActivity(KeyPair.PairActor.ContentService.UA input);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetUserActivity", ReplyAction="KnowledgeAdventure.Service/IContentService/SetUserActivityResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UA> SetUserActivityAsync(KeyPair.PairActor.ContentService.UA input);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetUserActivityByProductGroupID", ReplyAction="KnowledgeAdventure.Service/IContentService/SetUserActivityByProductGroupIDRespons" +
            "e")]
        KeyPair.PairActor.ContentService.UA SetUserActivityByProductGroupID(KeyPair.PairActor.ContentService.UA input, int productGroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetUserActivityByProductGroupID", ReplyAction="KnowledgeAdventure.Service/IContentService/SetUserActivityByProductGroupIDRespons" +
            "e")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UA> SetUserActivityByProductGroupIDAsync(KeyPair.PairActor.ContentService.UA input, int productGroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetKeyValuePair", ReplyAction="KnowledgeAdventure.Service/IContentService/GetKeyValuePairResponse")]
        KeyPair.PairActor.ContentService.Pairs GetKeyValuePair(System.Guid userID, System.Nullable<int> pairId);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetKeyValuePair", ReplyAction="KnowledgeAdventure.Service/IContentService/GetKeyValuePairResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.Pairs> GetKeyValuePairAsync(System.Guid userID, System.Nullable<int> pairId);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetKeyValuePair", ReplyAction="KnowledgeAdventure.Service/IContentService/SetKeyValuePairResponse")]
        bool SetKeyValuePair(System.Guid userID, int pairId, KeyPair.PairActor.ContentService.Pairs pairs);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetKeyValuePair", ReplyAction="KnowledgeAdventure.Service/IContentService/SetKeyValuePairResponse")]
        System.Threading.Tasks.Task<bool> SetKeyValuePairAsync(System.Guid userID, int pairId, KeyPair.PairActor.ContentService.Pairs pairs);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/DelKeyValuePair", ReplyAction="KnowledgeAdventure.Service/IContentService/DelKeyValuePairResponse")]
        bool DelKeyValuePair(System.Guid userID, int pairId);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/DelKeyValuePair", ReplyAction="KnowledgeAdventure.Service/IContentService/DelKeyValuePairResponse")]
        System.Threading.Tasks.Task<bool> DelKeyValuePairAsync(System.Guid userID, int pairId);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/DelKeyValuePairByKey", ReplyAction="KnowledgeAdventure.Service/IContentService/DelKeyValuePairByKeyResponse")]
        bool DelKeyValuePairByKey(System.Guid userID, int pairId, string pairKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/DelKeyValuePairByKey", ReplyAction="KnowledgeAdventure.Service/IContentService/DelKeyValuePairByKeyResponse")]
        System.Threading.Tasks.Task<bool> DelKeyValuePairByKeyAsync(System.Guid userID, int pairId, string pairKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/DelKeyValuePairByKeys", ReplyAction="KnowledgeAdventure.Service/IContentService/DelKeyValuePairByKeysResponse")]
        bool DelKeyValuePairByKeys(System.Guid userID, int pairId, string[] pairKeys);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/DelKeyValuePairByKeys", ReplyAction="KnowledgeAdventure.Service/IContentService/DelKeyValuePairByKeysResponse")]
        System.Threading.Tasks.Task<bool> DelKeyValuePairByKeysAsync(System.Guid userID, int pairId, string[] pairKeys);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/TransferGuestKeyValuePair", ReplyAction="KnowledgeAdventure.Service/IContentService/TransferGuestKeyValuePairResponse")]
        bool TransferGuestKeyValuePair(System.Guid guestuserID, System.Guid parentuserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/TransferGuestKeyValuePair", ReplyAction="KnowledgeAdventure.Service/IContentService/TransferGuestKeyValuePairResponse")]
        System.Threading.Tasks.Task<bool> TransferGuestKeyValuePairAsync(System.Guid guestuserID, System.Guid parentuserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetLessonMastery", ReplyAction="KnowledgeAdventure.Service/IContentService/GetLessonMasteryResponse")]
        KeyPair.PairActor.ContentService.MasteryData GetLessonMastery(int productID, System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetLessonMastery", ReplyAction="KnowledgeAdventure.Service/IContentService/GetLessonMasteryResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.MasteryData> GetLessonMasteryAsync(int productID, System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetLessonMastery", ReplyAction="KnowledgeAdventure.Service/IContentService/SetLessonMasteryResponse")]
        bool SetLessonMastery(int productGroupID, int productID, System.Guid userID, KeyPair.PairActor.ContentService.MasteryData masteryData);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetLessonMastery", ReplyAction="KnowledgeAdventure.Service/IContentService/SetLessonMasteryResponse")]
        System.Threading.Tasks.Task<bool> SetLessonMasteryAsync(int productGroupID, int productID, System.Guid userID, KeyPair.PairActor.ContentService.MasteryData masteryData);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetLessonStatus", ReplyAction="KnowledgeAdventure.Service/IContentService/SetLessonStatusResponse")]
        bool SetLessonStatus(int productID, System.Guid userID, KeyPair.PairActor.ContentService.LessonData lessonData);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetLessonStatus", ReplyAction="KnowledgeAdventure.Service/IContentService/SetLessonStatusResponse")]
        System.Threading.Tasks.Task<bool> SetLessonStatusAsync(int productID, System.Guid userID, KeyPair.PairActor.ContentService.LessonData lessonData);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetTopUsersByCorrectAnswer", ReplyAction="KnowledgeAdventure.Service/IContentService/GetTopUsersByCorrectAnswerResponse")]
        KeyPair.PairActor.ContentService.LessonRankData[] GetTopUsersByCorrectAnswer(int productGroupID, KeyPair.PairActor.ContentService.DateRange dateRange, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetTopUsersByCorrectAnswer", ReplyAction="KnowledgeAdventure.Service/IContentService/GetTopUsersByCorrectAnswerResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.LessonRankData[]> GetTopUsersByCorrectAnswerAsync(int productGroupID, KeyPair.PairActor.ContentService.DateRange dateRange, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetUserMission", ReplyAction="KnowledgeAdventure.Service/IContentService/GetUserMissionResponse")]
        KeyPair.PairActor.ContentService.UserMissionData GetUserMission(int productID, System.Guid userID, int worldId);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetUserMission", ReplyAction="KnowledgeAdventure.Service/IContentService/GetUserMissionResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UserMissionData> GetUserMissionAsync(int productID, System.Guid userID, int worldId);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetUserMission", ReplyAction="KnowledgeAdventure.Service/IContentService/SetUserMissionResponse")]
        bool SetUserMission(int productGroupID, int productID, System.Guid userID, int worldId, int missionId, int stepId, int taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetUserMission", ReplyAction="KnowledgeAdventure.Service/IContentService/SetUserMissionResponse")]
        System.Threading.Tasks.Task<bool> SetUserMissionAsync(int productGroupID, int productID, System.Guid userID, int worldId, int missionId, int stepId, int taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetUserMissionComplete", ReplyAction="KnowledgeAdventure.Service/IContentService/SetUserMissionCompleteResponse")]
        bool SetUserMissionComplete(int productGroupID, int productID, System.Guid userID, int worldId, int missionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetUserMissionComplete", ReplyAction="KnowledgeAdventure.Service/IContentService/SetUserMissionCompleteResponse")]
        System.Threading.Tasks.Task<bool> SetUserMissionCompleteAsync(int productGroupID, int productID, System.Guid userID, int worldId, int missionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetCurrentPetByUserID", ReplyAction="KnowledgeAdventure.Service/IContentService/GetCurrentPetByUserIDResponse")]
        KeyPair.PairActor.ContentService.PetData GetCurrentPetByUserID(int productID, System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetCurrentPetByUserID", ReplyAction="KnowledgeAdventure.Service/IContentService/GetCurrentPetByUserIDResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.PetData> GetCurrentPetByUserIDAsync(int productID, System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetAdoptedPetData", ReplyAction="KnowledgeAdventure.Service/IContentService/GetAdoptedPetDataResponse")]
        KeyPair.PairActor.ContentService.PetData GetAdoptedPetData(int productID, System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetAdoptedPetData", ReplyAction="KnowledgeAdventure.Service/IContentService/GetAdoptedPetDataResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.PetData> GetAdoptedPetDataAsync(int productID, System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetCurrentPetData", ReplyAction="KnowledgeAdventure.Service/IContentService/SetCurrentPetDataResponse")]
        bool SetCurrentPetData(int productID, System.Guid userID, KeyPair.PairActor.ContentService.PetData petData);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetCurrentPetData", ReplyAction="KnowledgeAdventure.Service/IContentService/SetCurrentPetDataResponse")]
        System.Threading.Tasks.Task<bool> SetCurrentPetDataAsync(int productID, System.Guid userID, KeyPair.PairActor.ContentService.PetData petData);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetAdoptedPet", ReplyAction="KnowledgeAdventure.Service/IContentService/SetAdoptedPetResponse")]
        bool SetAdoptedPet(int productID, System.Guid userID, KeyPair.PairActor.ContentService.PetData petData);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetAdoptedPet", ReplyAction="KnowledgeAdventure.Service/IContentService/SetAdoptedPetResponse")]
        System.Threading.Tasks.Task<bool> SetAdoptedPetAsync(int productID, System.Guid userID, KeyPair.PairActor.ContentService.PetData petData);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/DelCurrentPet", ReplyAction="KnowledgeAdventure.Service/IContentService/DelCurrentPetResponse")]
        bool DelCurrentPet(int productID, System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/DelCurrentPet", ReplyAction="KnowledgeAdventure.Service/IContentService/DelCurrentPetResponse")]
        System.Threading.Tasks.Task<bool> DelCurrentPetAsync(int productID, System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetProduct", ReplyAction="KnowledgeAdventure.Service/IContentService/GetProductResponse")]
        KeyPair.PairActor.ContentService.ProductData GetProduct(int productGroupID, int productID, System.Guid userID, int subscriptionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetProduct", ReplyAction="KnowledgeAdventure.Service/IContentService/GetProductResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.ProductData> GetProductAsync(int productGroupID, int productID, System.Guid userID, int subscriptionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetProductPlatformMap", ReplyAction="KnowledgeAdventure.Service/IContentService/GetProductPlatformMapResponse")]
        KeyPair.PairActor.ContentService.ProductPlatform[] GetProductPlatformMap();
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetProductPlatformMap", ReplyAction="KnowledgeAdventure.Service/IContentService/GetProductPlatformMapResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.ProductPlatform[]> GetProductPlatformMapAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetProduct", ReplyAction="KnowledgeAdventure.Service/IContentService/SetProductResponse")]
        bool SetProduct(int productGroupID, int productID, System.Guid userID, KeyPair.PairActor.ContentService.ProductData productData);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetProduct", ReplyAction="KnowledgeAdventure.Service/IContentService/SetProductResponse")]
        System.Threading.Tasks.Task<bool> SetProductAsync(int productGroupID, int productID, System.Guid userID, KeyPair.PairActor.ContentService.ProductData productData);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetProductGroupID", ReplyAction="KnowledgeAdventure.Service/IContentService/GetProductGroupIDResponse")]
        int GetProductGroupID(int productID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetProductGroupID", ReplyAction="KnowledgeAdventure.Service/IContentService/GetProductGroupIDResponse")]
        System.Threading.Tasks.Task<int> GetProductGroupIDAsync(int productID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetSceneByUserID", ReplyAction="KnowledgeAdventure.Service/IContentService/GetSceneByUserIDResponse")]
        KeyPair.PairActor.ContentService.SceneData GetSceneByUserID(int productID, System.Guid userID, string sceneName);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetSceneByUserID", ReplyAction="KnowledgeAdventure.Service/IContentService/GetSceneByUserIDResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.SceneData> GetSceneByUserIDAsync(int productID, System.Guid userID, string sceneName);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetScene", ReplyAction="KnowledgeAdventure.Service/IContentService/SetSceneResponse")]
        bool SetScene(int productGroupID, int productID, System.Guid userID, string sceneName, KeyPair.PairActor.ContentService.SceneData sceneData);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetScene", ReplyAction="KnowledgeAdventure.Service/IContentService/SetSceneResponse")]
        System.Threading.Tasks.Task<bool> SetSceneAsync(int productGroupID, int productID, System.Guid userID, string sceneName, KeyPair.PairActor.ContentService.SceneData sceneData);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetUserBadgeComplete", ReplyAction="KnowledgeAdventure.Service/IContentService/GetUserBadgeCompleteResponse")]
        KeyPair.PairActor.ContentService.UserBadge GetUserBadgeComplete(int productID, System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetUserBadgeComplete", ReplyAction="KnowledgeAdventure.Service/IContentService/GetUserBadgeCompleteResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UserBadge> GetUserBadgeCompleteAsync(int productID, System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetUserBadgeComplete", ReplyAction="KnowledgeAdventure.Service/IContentService/SetUserBadgeCompleteResponse")]
        bool SetUserBadgeComplete(int productID, System.Guid userID, int badgeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetUserBadgeComplete", ReplyAction="KnowledgeAdventure.Service/IContentService/SetUserBadgeCompleteResponse")]
        System.Threading.Tasks.Task<bool> SetUserBadgeCompleteAsync(int productID, System.Guid userID, int badgeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetUserTreasureChest", ReplyAction="KnowledgeAdventure.Service/IContentService/GetUserTreasureChestResponse")]
        KeyPair.PairActor.ContentService.UserTreasureChestData GetUserTreasureChest(int productID, System.Guid userID, string sceneName, string groupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetUserTreasureChest", ReplyAction="KnowledgeAdventure.Service/IContentService/GetUserTreasureChestResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UserTreasureChestData> GetUserTreasureChestAsync(int productID, System.Guid userID, string sceneName, string groupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetUserTreasureChest", ReplyAction="KnowledgeAdventure.Service/IContentService/SetUserTreasureChestResponse")]
        bool SetUserTreasureChest(int productID, System.Guid userID, string sceneName, string groupName, KeyPair.PairActor.ContentService.UserTreasureChestData userTreasureChestData);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetUserTreasureChest", ReplyAction="KnowledgeAdventure.Service/IContentService/SetUserTreasureChestResponse")]
        System.Threading.Tasks.Task<bool> SetUserTreasureChestAsync(int productID, System.Guid userID, string sceneName, string groupName, KeyPair.PairActor.ContentService.UserTreasureChestData userTreasureChestData);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetUserChestFound", ReplyAction="KnowledgeAdventure.Service/IContentService/SetUserChestFoundResponse")]
        bool SetUserChestFound(int productID, System.Guid userID, string sceneName, string groupName, string chestName);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetUserChestFound", ReplyAction="KnowledgeAdventure.Service/IContentService/SetUserChestFoundResponse")]
        System.Threading.Tasks.Task<bool> SetUserChestFoundAsync(int productID, System.Guid userID, string sceneName, string groupName, string chestName);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetTracksByUserID", ReplyAction="KnowledgeAdventure.Service/IContentService/GetTracksByUserIDResponse")]
        KeyPair.PairActor.ContentService.TI[] GetTracksByUserID(int category, System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetTracksByUserID", ReplyAction="KnowledgeAdventure.Service/IContentService/GetTracksByUserIDResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.TI[]> GetTracksByUserIDAsync(int category, System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetTracksByIDs", ReplyAction="KnowledgeAdventure.Service/IContentService/GetTracksByIDsResponse")]
        KeyPair.PairActor.ContentService.TI[] GetTracksByIDs(string trackIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetTracksByIDs", ReplyAction="KnowledgeAdventure.Service/IContentService/GetTracksByIDsResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.TI[]> GetTracksByIDsAsync(string trackIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetTrackElements", ReplyAction="KnowledgeAdventure.Service/IContentService/GetTrackElementsResponse")]
        KeyPair.PairActor.ContentService.TE[] GetTrackElements(int trackID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetTrackElements", ReplyAction="KnowledgeAdventure.Service/IContentService/GetTrackElementsResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.TE[]> GetTrackElementsAsync(int trackID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/RemoveUserWithoutTrack", ReplyAction="KnowledgeAdventure.Service/IContentService/RemoveUserWithoutTrackResponse")]
        System.Guid[] RemoveUserWithoutTrack(System.Guid[] userIDS);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/RemoveUserWithoutTrack", ReplyAction="KnowledgeAdventure.Service/IContentService/RemoveUserWithoutTrackResponse")]
        System.Threading.Tasks.Task<System.Guid[]> RemoveUserWithoutTrackAsync(System.Guid[] userIDS);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetTrack", ReplyAction="KnowledgeAdventure.Service/IContentService/SetTrackResponse")]
        KeyPair.PairActor.ContentService.TI SetTrack(KeyPair.PairActor.ContentService.UT trackSetRequest, byte[] imageFile, System.Guid parentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetTrack", ReplyAction="KnowledgeAdventure.Service/IContentService/SetTrackResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.TI> SetTrackAsync(KeyPair.PairActor.ContentService.UT trackSetRequest, byte[] imageFile, System.Guid parentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/DeleteTrack", ReplyAction="KnowledgeAdventure.Service/IContentService/DeleteTrackResponse")]
        bool DeleteTrack(int trackID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/DeleteTrack", ReplyAction="KnowledgeAdventure.Service/IContentService/DeleteTrackResponse")]
        System.Threading.Tasks.Task<bool> DeleteTrackAsync(int trackID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/PurchaseGift", ReplyAction="KnowledgeAdventure.Service/IContentService/PurchaseGiftResponse")]
        bool PurchaseGift(int productGroupID, int productID, System.Guid userID, System.Guid receiverUserID, int itemID, int containerID, int storeID, int currencyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/PurchaseGift", ReplyAction="KnowledgeAdventure.Service/IContentService/PurchaseGiftResponse")]
        System.Threading.Tasks.Task<bool> PurchaseGiftAsync(int productGroupID, int productID, System.Guid userID, System.Guid receiverUserID, int itemID, int containerID, int storeID, int currencyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetGiftsReceivedByUserID", ReplyAction="KnowledgeAdventure.Service/IContentService/GetGiftsReceivedByUserIDResponse")]
        KeyPair.PairActor.ContentService.GiftTransactionInfo[] GetGiftsReceivedByUserID(int productGroupID, System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetGiftsReceivedByUserID", ReplyAction="KnowledgeAdventure.Service/IContentService/GetGiftsReceivedByUserIDResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.GiftTransactionInfo[]> GetGiftsReceivedByUserIDAsync(int productGroupID, System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/UseTickets", ReplyAction="KnowledgeAdventure.Service/IContentService/UseTicketsResponse")]
        KeyPair.PairActor.ContentService.AR[] UseTickets(int productGroupID, System.Guid userID, int achievementID, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/UseTickets", ReplyAction="KnowledgeAdventure.Service/IContentService/UseTicketsResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.AR[]> UseTicketsAsync(int productGroupID, System.Guid userID, int achievementID, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetAllProducts", ReplyAction="KnowledgeAdventure.Service/IContentService/GetAllProductsResponse")]
        KeyPair.PairActor.ContentService.ProductItem[] GetAllProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetAllProducts", ReplyAction="KnowledgeAdventure.Service/IContentService/GetAllProductsResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.ProductItem[]> GetAllProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/IsDisplayNameUnique", ReplyAction="KnowledgeAdventure.Service/IContentService/IsDisplayNameUniqueResponse")]
        bool IsDisplayNameUnique(string userName, int productGroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/IsDisplayNameUnique", ReplyAction="KnowledgeAdventure.Service/IContentService/IsDisplayNameUniqueResponse")]
        System.Threading.Tasks.Task<bool> IsDisplayNameUniqueAsync(string userName, int productGroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetUniqueDisplayName", ReplyAction="KnowledgeAdventure.Service/IContentService/SetUniqueDisplayNameResponse")]
        bool SetUniqueDisplayName(string userName, int productGroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetUniqueDisplayName", ReplyAction="KnowledgeAdventure.Service/IContentService/SetUniqueDisplayNameResponse")]
        System.Threading.Tasks.Task<bool> SetUniqueDisplayNameAsync(string userName, int productGroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/RemoveUniqueDisplayName", ReplyAction="KnowledgeAdventure.Service/IContentService/RemoveUniqueDisplayNameResponse")]
        bool RemoveUniqueDisplayName(string[] displayNames, int productGroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/RemoveUniqueDisplayName", ReplyAction="KnowledgeAdventure.Service/IContentService/RemoveUniqueDisplayNameResponse")]
        System.Threading.Tasks.Task<bool> RemoveUniqueDisplayNameAsync(string[] displayNames, int productGroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetNextItemState", ReplyAction="KnowledgeAdventure.Service/IContentService/SetNextItemStateResponse")]
        KeyPair.PairActor.ContentService.SetNextItemStateResult SetNextItemState(KeyPair.PairActor.ContentService.SetNextItemStateRequest setNextItemStateRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetNextItemState", ReplyAction="KnowledgeAdventure.Service/IContentService/SetNextItemStateResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.SetNextItemStateResult> SetNextItemStateAsync(KeyPair.PairActor.ContentService.SetNextItemStateRequest setNextItemStateRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetSpeedUpItem", ReplyAction="KnowledgeAdventure.Service/IContentService/SetSpeedUpItemResponse")]
        KeyPair.PairActor.ContentService.SetSpeedUpItemResult SetSpeedUpItem(KeyPair.PairActor.ContentService.SetSpeedUpItemRequest setSpeedUpItemRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetSpeedUpItem", ReplyAction="KnowledgeAdventure.Service/IContentService/SetSpeedUpItemResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.SetSpeedUpItemResult> SetSpeedUpItemAsync(KeyPair.PairActor.ContentService.SetSpeedUpItemRequest setSpeedUpItemRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/DeleteProfile", ReplyAction="KnowledgeAdventure.Service/IContentService/DeleteProfileResponse")]
        KeyPair.PairActor.ContentService.DeleteProfileStatus DeleteProfile(KeyPair.PairActor.ContentService.DeleteProfileRequest deleteProfileRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/DeleteProfile", ReplyAction="KnowledgeAdventure.Service/IContentService/DeleteProfileResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.DeleteProfileStatus> DeleteProfileAsync(KeyPair.PairActor.ContentService.DeleteProfileRequest deleteProfileRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/ValidateName", ReplyAction="KnowledgeAdventure.Service/IContentService/ValidateNameResponse")]
        KeyPair.PairActor.ContentService.NameValidationResponse ValidateName(int productGroupID, KeyPair.PairActor.ContentService.NameValidationRequest nameValidationRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/ValidateName", ReplyAction="KnowledgeAdventure.Service/IContentService/ValidateNameResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.NameValidationResponse> ValidateNameAsync(int productGroupID, KeyPair.PairActor.ContentService.NameValidationRequest nameValidationRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetUserSubscriptionProvider", ReplyAction="KnowledgeAdventure.Service/IContentService/GetUserSubscriptionProviderResponse")]
        KeyPair.PairActor.ContentService.USP GetUserSubscriptionProvider(System.Guid UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetUserSubscriptionProvider", ReplyAction="KnowledgeAdventure.Service/IContentService/GetUserSubscriptionProviderResponse")]
        System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.USP> GetUserSubscriptionProviderAsync(System.Guid UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetUserByExternalUserID", ReplyAction="KnowledgeAdventure.Service/IContentService/GetUserByExternalUserIDResponse")]
        System.Nullable<System.Guid> GetUserByExternalUserID(string externalUserID, string externalAppID, KeyPair.PairActor.ContentService.ExternalAuthProvider externalAuthProvider, int productFamilyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/GetUserByExternalUserID", ReplyAction="KnowledgeAdventure.Service/IContentService/GetUserByExternalUserIDResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> GetUserByExternalUserIDAsync(string externalUserID, string externalAppID, KeyPair.PairActor.ContentService.ExternalAuthProvider externalAuthProvider, int productFamilyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetCommonInventoryAttribute", ReplyAction="KnowledgeAdventure.Service/IContentService/SetCommonInventoryAttributeResponse")]
        bool SetCommonInventoryAttribute(int commonInventoryId, KeyPair.PairActor.ContentService.Pairs useritemAttributes);
        
        [System.ServiceModel.OperationContractAttribute(Action="KnowledgeAdventure.Service/IContentService/SetCommonInventoryAttribute", ReplyAction="KnowledgeAdventure.Service/IContentService/SetCommonInventoryAttributeResponse")]
        System.Threading.Tasks.Task<bool> SetCommonInventoryAttributeAsync(int commonInventoryId, KeyPair.PairActor.ContentService.Pairs useritemAttributes);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetImageWithImageUrlReturned", WrapperNamespace="KnowledgeAdventure.Service", IsWrapped=true)]
    public partial class SetImageWithImageUrlReturnedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="KnowledgeAdventure.Service", Order=0)]
        public int productGroupID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="KnowledgeAdventure.Service", Order=1)]
        public int productID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="KnowledgeAdventure.Service", Order=2)]
        public System.Guid userID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="KnowledgeAdventure.Service", Order=3)]
        public System.Guid parentID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="KnowledgeAdventure.Service", Order=4)]
        public string imageType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="KnowledgeAdventure.Service", Order=5)]
        public byte imageSlot;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="KnowledgeAdventure.Service", Order=6)]
        public byte[] imageFile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="KnowledgeAdventure.Service", Order=7)]
        public KeyPair.PairActor.ContentService.ImageData imageData;
        
        public SetImageWithImageUrlReturnedRequest() {
        }
        
        public SetImageWithImageUrlReturnedRequest(int productGroupID, int productID, System.Guid userID, System.Guid parentID, string imageType, byte imageSlot, byte[] imageFile, KeyPair.PairActor.ContentService.ImageData imageData) {
            this.productGroupID = productGroupID;
            this.productID = productID;
            this.userID = userID;
            this.parentID = parentID;
            this.imageType = imageType;
            this.imageSlot = imageSlot;
            this.imageFile = imageFile;
            this.imageData = imageData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetImageWithImageUrlReturnedResponse", WrapperNamespace="KnowledgeAdventure.Service", IsWrapped=true)]
    public partial class SetImageWithImageUrlReturnedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="KnowledgeAdventure.Service", Order=0)]
        public bool SetImageWithImageUrlReturnedResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="KnowledgeAdventure.Service", Order=1)]
        public string imageUrl;
        
        public SetImageWithImageUrlReturnedResponse() {
        }
        
        public SetImageWithImageUrlReturnedResponse(bool SetImageWithImageUrlReturnedResult, string imageUrl) {
            this.SetImageWithImageUrlReturnedResult = SetImageWithImageUrlReturnedResult;
            this.imageUrl = imageUrl;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IContentServiceChannel : KeyPair.PairActor.ContentService.IContentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContentServiceClient : System.ServiceModel.ClientBase<KeyPair.PairActor.ContentService.IContentService>, KeyPair.PairActor.ContentService.IContentService {
        
        public ContentServiceClient() {
        }
        
        public ContentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ContentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.DateTime GetAuthoritativeTime() {
            return base.Channel.GetAuthoritativeTime();
        }
        
        public System.Threading.Tasks.Task<System.DateTime> GetAuthoritativeTimeAsync() {
            return base.Channel.GetAuthoritativeTimeAsync();
        }
        
        public KeyPair.PairActor.ContentService.AvatarData GetAvatarByUserID(int productGroupID, System.Guid userId) {
            return base.Channel.GetAvatarByUserID(productGroupID, userId);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.AvatarData> GetAvatarByUserIDAsync(int productGroupID, System.Guid userId) {
            return base.Channel.GetAvatarByUserIDAsync(productGroupID, userId);
        }
        
        public KeyPair.PairActor.ContentService.AvatarDisplayData GetAvatarDisplayDataByUserID(int productGroupID, System.Guid userID) {
            return base.Channel.GetAvatarDisplayDataByUserID(productGroupID, userID);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.AvatarDisplayData> GetAvatarDisplayDataByUserIDAsync(int productGroupID, System.Guid userID) {
            return base.Channel.GetAvatarDisplayDataByUserIDAsync(productGroupID, userID);
        }
        
        public bool SetAvatar(int productGroupID, System.Guid userId, KeyPair.PairActor.ContentService.AvatarData avatarData) {
            return base.Channel.SetAvatar(productGroupID, userId, avatarData);
        }
        
        public System.Threading.Tasks.Task<bool> SetAvatarAsync(int productGroupID, System.Guid userId, KeyPair.PairActor.ContentService.AvatarData avatarData) {
            return base.Channel.SetAvatarAsync(productGroupID, userId, avatarData);
        }
        
        public int SetDisplayName(int productGroupID, System.Guid userId, int avatarID, int firstNameID, int secondNameID, int thirdNameID) {
            return base.Channel.SetDisplayName(productGroupID, userId, avatarID, firstNameID, secondNameID, thirdNameID);
        }
        
        public System.Threading.Tasks.Task<int> SetDisplayNameAsync(int productGroupID, System.Guid userId, int avatarID, int firstNameID, int secondNameID, int thirdNameID) {
            return base.Channel.SetDisplayNameAsync(productGroupID, userId, avatarID, firstNameID, secondNameID, thirdNameID);
        }
        
        public KeyPair.PairActor.ContentService.NicknameSetResult SetNickname(int productGroupID, System.Guid userId, System.Guid otherID, string nickName) {
            return base.Channel.SetNickname(productGroupID, userId, otherID, nickName);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.NicknameSetResult> SetNicknameAsync(int productGroupID, System.Guid userId, System.Guid otherID, string nickName) {
            return base.Channel.SetNicknameAsync(productGroupID, userId, otherID, nickName);
        }
        
        public int SetAvatarDisplayName(int productGroupID, System.Guid userID, string displayName) {
            return base.Channel.SetAvatarDisplayName(productGroupID, userID, displayName);
        }
        
        public System.Threading.Tasks.Task<int> SetAvatarDisplayNameAsync(int productGroupID, System.Guid userID, string displayName) {
            return base.Channel.SetAvatarDisplayNameAsync(productGroupID, userID, displayName);
        }
        
        public KeyPair.PairActor.ContentService.DisplayNames GetDisplayNames(int productGroupID, System.Nullable<int> categoryID, string locale) {
            return base.Channel.GetDisplayNames(productGroupID, categoryID, locale);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.DisplayNames> GetDisplayNamesAsync(int productGroupID, System.Nullable<int> categoryID, string locale) {
            return base.Channel.GetDisplayNamesAsync(productGroupID, categoryID, locale);
        }
        
        public string GetDisplayNameByUserID(int productGroupID, System.Guid userID) {
            return base.Channel.GetDisplayNameByUserID(productGroupID, userID);
        }
        
        public System.Threading.Tasks.Task<string> GetDisplayNameByUserIDAsync(int productGroupID, System.Guid userID) {
            return base.Channel.GetDisplayNameByUserIDAsync(productGroupID, userID);
        }
        
        public KeyPair.PairActor.ContentService.Nn[] GetNicknames(int productGroupID, System.Guid userID, System.Nullable<System.Guid>[] otherID) {
            return base.Channel.GetNicknames(productGroupID, userID, otherID);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.Nn[]> GetNicknamesAsync(int productGroupID, System.Guid userID, System.Nullable<System.Guid>[] otherID) {
            return base.Channel.GetNicknamesAsync(productGroupID, userID, otherID);
        }
        
        public System.Collections.Generic.KeyValuePair<System.Guid, string>[] GetDisplayNamesByUserIDs(int productGroupID, System.Guid[] userIDs) {
            return base.Channel.GetDisplayNamesByUserIDs(productGroupID, userIDs);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<System.Guid, string>[]> GetDisplayNamesByUserIDsAsync(int productGroupID, System.Guid[] userIDs) {
            return base.Channel.GetDisplayNamesByUserIDsAsync(productGroupID, userIDs);
        }
        
        public bool SetDefaultAvatar(int productGroupID, System.Guid userID, KeyPair.PairActor.ContentService.AvatarData avatarData) {
            return base.Channel.SetDefaultAvatar(productGroupID, userID, avatarData);
        }
        
        public System.Threading.Tasks.Task<bool> SetDefaultAvatarAsync(int productGroupID, System.Guid userID, KeyPair.PairActor.ContentService.AvatarData avatarData) {
            return base.Channel.SetDefaultAvatarAsync(productGroupID, userID, avatarData);
        }
        
        public KeyPair.PairActor.ContentService.SetUserGradeResult SetUserGrade(int productGroupID, System.Guid userID, KeyPair.PairActor.ContentService.UserGradeRequest request) {
            return base.Channel.SetUserGrade(productGroupID, userID, request);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.SetUserGradeResult> SetUserGradeAsync(int productGroupID, System.Guid userID, KeyPair.PairActor.ContentService.UserGradeRequest request) {
            return base.Channel.SetUserGradeAsync(productGroupID, userID, request);
        }
        
        public KeyPair.PairActor.ContentService.UG GetUserGrade(int productGroupID, System.Guid userID) {
            return base.Channel.GetUserGrade(productGroupID, userID);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UG> GetUserGradeAsync(int productGroupID, System.Guid userID) {
            return base.Channel.GetUserGradeAsync(productGroupID, userID);
        }
        
        public KeyPair.PairActor.ContentService.UG[] GetAllUserGradesByPGID(int pgid) {
            return base.Channel.GetAllUserGradesByPGID(pgid);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UG[]> GetAllUserGradesByPGIDAsync(int pgid) {
            return base.Channel.GetAllUserGradesByPGIDAsync(pgid);
        }
        
        public KeyPair.PairActor.ContentService.HouseData GetHouseByUserID(int productID, System.Guid userID) {
            return base.Channel.GetHouseByUserID(productID, userID);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.HouseData> GetHouseByUserIDAsync(int productID, System.Guid userID) {
            return base.Channel.GetHouseByUserIDAsync(productID, userID);
        }
        
        public bool SetHouse(int productGroupID, int productID, System.Guid userID, KeyPair.PairActor.ContentService.HouseData houseData) {
            return base.Channel.SetHouse(productGroupID, productID, userID, houseData);
        }
        
        public System.Threading.Tasks.Task<bool> SetHouseAsync(int productGroupID, int productID, System.Guid userID, KeyPair.PairActor.ContentService.HouseData houseData) {
            return base.Channel.SetHouseAsync(productGroupID, productID, userID, houseData);
        }
        
        public KeyPair.PairActor.ContentService.ImageSubmitResult SubmitImage(int productID, int productGroupID, System.Guid userID, string imageType, byte imageSlot) {
            return base.Channel.SubmitImage(productID, productGroupID, userID, imageType, imageSlot);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.ImageSubmitResult> SubmitImageAsync(int productID, int productGroupID, System.Guid userID, string imageType, byte imageSlot) {
            return base.Channel.SubmitImageAsync(productID, productGroupID, userID, imageType, imageSlot);
        }
        
        public KeyPair.PairActor.ContentService.ImageData GetImageDataByProductGroup(int productGroupID, int productID, System.Guid userID, string imageType, byte imageSlot) {
            return base.Channel.GetImageDataByProductGroup(productGroupID, productID, userID, imageType, imageSlot);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.ImageData> GetImageDataByProductGroupAsync(int productGroupID, int productID, System.Guid userID, string imageType, byte imageSlot) {
            return base.Channel.GetImageDataByProductGroupAsync(productGroupID, productID, userID, imageType, imageSlot);
        }
        
        public KeyPair.PairActor.ContentService.ImageData GetImage(int productID, System.Guid userID, string imageType, byte imageSlot) {
            return base.Channel.GetImage(productID, userID, imageType, imageSlot);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.ImageData> GetImageAsync(int productID, System.Guid userID, string imageType, byte imageSlot) {
            return base.Channel.GetImageAsync(productID, userID, imageType, imageSlot);
        }
        
        public KeyPair.PairActor.ContentService.ImageDataComplete[] GetImageByProductGroup(int productGroupID, System.Guid userID, string imageType, byte imageSlot) {
            return base.Channel.GetImageByProductGroup(productGroupID, userID, imageType, imageSlot);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.ImageDataComplete[]> GetImageByProductGroupAsync(int productGroupID, System.Guid userID, string imageType, byte imageSlot) {
            return base.Channel.GetImageByProductGroupAsync(productGroupID, userID, imageType, imageSlot);
        }
        
        public bool SetImage(int productGroupID, int productID, System.Guid userID, System.Guid parentID, string imageType, byte imageSlot, byte[] imageFile, KeyPair.PairActor.ContentService.ImageData imageData) {
            return base.Channel.SetImage(productGroupID, productID, userID, parentID, imageType, imageSlot, imageFile, imageData);
        }
        
        public System.Threading.Tasks.Task<bool> SetImageAsync(int productGroupID, int productID, System.Guid userID, System.Guid parentID, string imageType, byte imageSlot, byte[] imageFile, KeyPair.PairActor.ContentService.ImageData imageData) {
            return base.Channel.SetImageAsync(productGroupID, productID, userID, parentID, imageType, imageSlot, imageFile, imageData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KeyPair.PairActor.ContentService.SetImageWithImageUrlReturnedResponse KeyPair.PairActor.ContentService.IContentService.SetImageWithImageUrlReturned(KeyPair.PairActor.ContentService.SetImageWithImageUrlReturnedRequest request) {
            return base.Channel.SetImageWithImageUrlReturned(request);
        }
        
        public bool SetImageWithImageUrlReturned(int productGroupID, int productID, System.Guid userID, System.Guid parentID, string imageType, byte imageSlot, byte[] imageFile, KeyPair.PairActor.ContentService.ImageData imageData, out string imageUrl) {
            KeyPair.PairActor.ContentService.SetImageWithImageUrlReturnedRequest inValue = new KeyPair.PairActor.ContentService.SetImageWithImageUrlReturnedRequest();
            inValue.productGroupID = productGroupID;
            inValue.productID = productID;
            inValue.userID = userID;
            inValue.parentID = parentID;
            inValue.imageType = imageType;
            inValue.imageSlot = imageSlot;
            inValue.imageFile = imageFile;
            inValue.imageData = imageData;
            KeyPair.PairActor.ContentService.SetImageWithImageUrlReturnedResponse retVal = ((KeyPair.PairActor.ContentService.IContentService)(this)).SetImageWithImageUrlReturned(inValue);
            imageUrl = retVal.imageUrl;
            return retVal.SetImageWithImageUrlReturnedResult;
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.SetImageWithImageUrlReturnedResponse> SetImageWithImageUrlReturnedAsync(KeyPair.PairActor.ContentService.SetImageWithImageUrlReturnedRequest request) {
            return base.Channel.SetImageWithImageUrlReturnedAsync(request);
        }
        
        public bool DelImage(int productID, System.Guid userID, string imageType, byte imageSlot) {
            return base.Channel.DelImage(productID, userID, imageType, imageSlot);
        }
        
        public System.Threading.Tasks.Task<bool> DelImageAsync(int productID, System.Guid userID, string imageType, byte imageSlot) {
            return base.Channel.DelImageAsync(productID, userID, imageType, imageSlot);
        }
        
        public KeyPair.PairActor.ContentService.CacheContentResult CacheContent(int productID, System.Guid userID, System.Guid parentID, string fileCategory, string fileName, byte[] fileData) {
            return base.Channel.CacheContent(productID, userID, parentID, fileCategory, fileName, fileData);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.CacheContentResult> CacheContentAsync(int productID, System.Guid userID, System.Guid parentID, string fileCategory, string fileName, byte[] fileData) {
            return base.Channel.CacheContentAsync(productID, userID, parentID, fileCategory, fileName, fileData);
        }
        
        public KeyPair.PairActor.ContentService.RevealData GetRevealIndex(int productID, System.Guid userID) {
            return base.Channel.GetRevealIndex(productID, userID);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.RevealData> GetRevealIndexAsync(int productID, System.Guid userID) {
            return base.Channel.GetRevealIndexAsync(productID, userID);
        }
        
        public bool SetRevealIndex(int productID, System.Guid userID, KeyPair.PairActor.ContentService.RevealData revealData) {
            return base.Channel.SetRevealIndex(productID, userID, revealData);
        }
        
        public System.Threading.Tasks.Task<bool> SetRevealIndexAsync(int productID, System.Guid userID, KeyPair.PairActor.ContentService.RevealData revealData) {
            return base.Channel.SetRevealIndexAsync(productID, userID, revealData);
        }
        
        public KeyPair.PairActor.ContentService.PresentData GetPresentIndex(int productID, System.Guid userID) {
            return base.Channel.GetPresentIndex(productID, userID);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.PresentData> GetPresentIndexAsync(int productID, System.Guid userID) {
            return base.Channel.GetPresentIndexAsync(productID, userID);
        }
        
        public bool SetPresentIndex(int productID, System.Guid userID, KeyPair.PairActor.ContentService.PresentData presentData) {
            return base.Channel.SetPresentIndex(productID, userID, presentData);
        }
        
        public System.Threading.Tasks.Task<bool> SetPresentIndexAsync(int productID, System.Guid userID, KeyPair.PairActor.ContentService.PresentData presentData) {
            return base.Channel.SetPresentIndexAsync(productID, userID, presentData);
        }
        
        public KeyPair.PairActor.ContentService.InventoryData GetInventory(int productID, System.Guid userID) {
            return base.Channel.GetInventory(productID, userID);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.InventoryData> GetInventoryAsync(int productID, System.Guid userID) {
            return base.Channel.GetInventoryAsync(productID, userID);
        }
        
        public bool SetInventory(int productID, System.Guid userID, KeyPair.PairActor.ContentService.InventoryData inventoryData) {
            return base.Channel.SetInventory(productID, userID, inventoryData);
        }
        
        public System.Threading.Tasks.Task<bool> SetInventoryAsync(int productID, System.Guid userID, KeyPair.PairActor.ContentService.InventoryData inventoryData) {
            return base.Channel.SetInventoryAsync(productID, userID, inventoryData);
        }
        
        public KeyPair.PairActor.ContentService.CommonInventory GetCommonInventory(int productGroupID, System.Guid userID, int ContainerId) {
            return base.Channel.GetCommonInventory(productGroupID, userID, ContainerId);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.CommonInventory> GetCommonInventoryAsync(int productGroupID, System.Guid userID, int ContainerId) {
            return base.Channel.GetCommonInventoryAsync(productGroupID, userID, ContainerId);
        }
        
        public KeyPair.PairActor.ContentService.CIRS SetCommonInventory(int productGroupID, System.Guid userID, int containerId, KeyPair.PairActor.ContentService.CIRT[] commonInventoryRequests) {
            return base.Channel.SetCommonInventory(productGroupID, userID, containerId, commonInventoryRequests);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.CIRS> SetCommonInventoryAsync(int productGroupID, System.Guid userID, int containerId, KeyPair.PairActor.ContentService.CIRT[] commonInventoryRequests) {
            return base.Channel.SetCommonInventoryAsync(productGroupID, userID, containerId, commonInventoryRequests);
        }
        
        public bool AcceptTrade(int productGroupID, int containerID, System.Guid userID, int myInventoryItemID, System.Guid otherUserID, int otherInventoryItemID) {
            return base.Channel.AcceptTrade(productGroupID, containerID, userID, myInventoryItemID, otherUserID, otherInventoryItemID);
        }
        
        public System.Threading.Tasks.Task<bool> AcceptTradeAsync(int productGroupID, int containerID, System.Guid userID, int myInventoryItemID, System.Guid otherUserID, int otherInventoryItemID) {
            return base.Channel.AcceptTradeAsync(productGroupID, containerID, userID, myInventoryItemID, otherUserID, otherInventoryItemID);
        }
        
        public bool AddRewardItemToInventory(int productGroupID, int containerID, System.Guid userID, int itemID, int count) {
            return base.Channel.AddRewardItemToInventory(productGroupID, containerID, userID, itemID, count);
        }
        
        public System.Threading.Tasks.Task<bool> AddRewardItemToInventoryAsync(int productGroupID, int containerID, System.Guid userID, int itemID, int count) {
            return base.Channel.AddRewardItemToInventoryAsync(productGroupID, containerID, userID, itemID, count);
        }
        
        public KeyPair.PairActor.ContentService.CIRS PurchaseItems(int productGroupID, System.Guid userId, int containerId, int storeID, int[] itemIDs, int currencyType) {
            return base.Channel.PurchaseItems(productGroupID, userId, containerId, storeID, itemIDs, currencyType);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.CIRS> PurchaseItemsAsync(int productGroupID, System.Guid userId, int containerId, int storeID, int[] itemIDs, int currencyType) {
            return base.Channel.PurchaseItemsAsync(productGroupID, userId, containerId, storeID, itemIDs, currencyType);
        }
        
        public bool SellItems(int productGroupID, System.Guid userID, int containerID, int[] userInventoryCommonIDs) {
            return base.Channel.SellItems(productGroupID, userID, containerID, userInventoryCommonIDs);
        }
        
        public System.Threading.Tasks.Task<bool> SellItemsAsync(int productGroupID, System.Guid userID, int containerID, int[] userInventoryCommonIDs) {
            return base.Channel.SellItemsAsync(productGroupID, userID, containerID, userInventoryCommonIDs);
        }
        
        public bool UseInventory(int productGroupID, int userInventoryId, int numberOfUses) {
            return base.Channel.UseInventory(productGroupID, userInventoryId, numberOfUses);
        }
        
        public System.Threading.Tasks.Task<bool> UseInventoryAsync(int productGroupID, int userInventoryId, int numberOfUses) {
            return base.Channel.UseInventoryAsync(productGroupID, userInventoryId, numberOfUses);
        }
        
        public KeyPair.PairActor.ContentService.ARM[] UseInventoryAndGetMultiplierRewards(int productGroupID, int userInventoryId, int numberOfUses) {
            return base.Channel.UseInventoryAndGetMultiplierRewards(productGroupID, userInventoryId, numberOfUses);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.ARM[]> UseInventoryAndGetMultiplierRewardsAsync(int productGroupID, int userInventoryId, int numberOfUses) {
            return base.Channel.UseInventoryAndGetMultiplierRewardsAsync(productGroupID, userInventoryId, numberOfUses);
        }
        
        public KeyPair.PairActor.ContentService.UIP[] GetUserItemPositions(int productGroupID, System.Guid userID) {
            return base.Channel.GetUserItemPositions(productGroupID, userID);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UIP[]> GetUserItemPositionsAsync(int productGroupID, System.Guid userID) {
            return base.Channel.GetUserItemPositionsAsync(productGroupID, userID);
        }
        
        public KeyPair.PairActor.ContentService.UIPSRS SetUserItemPositions(int productGroupID, System.Guid userID, KeyPair.PairActor.ContentService.UIPSR[] createList, KeyPair.PairActor.ContentService.UIPSR[] updateList, int[] removeList) {
            return base.Channel.SetUserItemPositions(productGroupID, userID, createList, updateList, removeList);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UIPSRS> SetUserItemPositionsAsync(int productGroupID, System.Guid userID, KeyPair.PairActor.ContentService.UIPSR[] createList, KeyPair.PairActor.ContentService.UIPSR[] updateList, int[] removeList) {
            return base.Channel.SetUserItemPositionsAsync(productGroupID, userID, createList, updateList, removeList);
        }
        
        public KeyPair.PairActor.ContentService.UIP[] GetUserRoomItemPositions(int productGroupID, System.Guid userID, string roomID) {
            return base.Channel.GetUserRoomItemPositions(productGroupID, userID, roomID);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UIP[]> GetUserRoomItemPositionsAsync(int productGroupID, System.Guid userID, string roomID) {
            return base.Channel.GetUserRoomItemPositionsAsync(productGroupID, userID, roomID);
        }
        
        public KeyPair.PairActor.ContentService.UIPSRS SetUserRoomItemPositions(int productGroupID, System.Guid userID, KeyPair.PairActor.ContentService.UIPSR[] createList, KeyPair.PairActor.ContentService.UIPSR[] updateList, int[] removeList, string roomID) {
            return base.Channel.SetUserRoomItemPositions(productGroupID, userID, createList, updateList, removeList, roomID);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UIPSRS> SetUserRoomItemPositionsAsync(int productGroupID, System.Guid userID, KeyPair.PairActor.ContentService.UIPSR[] createList, KeyPair.PairActor.ContentService.UIPSR[] updateList, int[] removeList, string roomID) {
            return base.Channel.SetUserRoomItemPositionsAsync(productGroupID, userID, createList, updateList, removeList, roomID);
        }
        
        public KeyPair.PairActor.ContentService.UTI[] GetUserTimedItemByUserID(int productGroupID, System.Guid userID) {
            return base.Channel.GetUserTimedItemByUserID(productGroupID, userID);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UTI[]> GetUserTimedItemByUserIDAsync(int productGroupID, System.Guid userID) {
            return base.Channel.GetUserTimedItemByUserIDAsync(productGroupID, userID);
        }
        
        public KeyPair.PairActor.ContentService.UTI SetUserTimedItem(int productGroupID, KeyPair.PairActor.ContentService.UTI input, KeyPair.PairActor.ContentService.UserTimedItemFlag flag) {
            return base.Channel.SetUserTimedItem(productGroupID, input, flag);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UTI> SetUserTimedItemAsync(int productGroupID, KeyPair.PairActor.ContentService.UTI input, KeyPair.PairActor.ContentService.UserTimedItemFlag flag) {
            return base.Channel.SetUserTimedItemAsync(productGroupID, input, flag);
        }
        
        public bool DeleteUserTimedItem(int userTimedItemID) {
            return base.Channel.DeleteUserTimedItem(userTimedItemID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserTimedItemAsync(int userTimedItemID) {
            return base.Channel.DeleteUserTimedItemAsync(userTimedItemID);
        }
        
        public KeyPair.PairActor.ContentService.US SetUserStaff(int productGroupID, KeyPair.PairActor.ContentService.US input, KeyPair.PairActor.ContentService.UserStaffFlag flag) {
            return base.Channel.SetUserStaff(productGroupID, input, flag);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.US> SetUserStaffAsync(int productGroupID, KeyPair.PairActor.ContentService.US input, KeyPair.PairActor.ContentService.UserStaffFlag flag) {
            return base.Channel.SetUserStaffAsync(productGroupID, input, flag);
        }
        
        public KeyPair.PairActor.ContentService.US[] GetUserStaffByUserID(System.Guid userID) {
            return base.Channel.GetUserStaffByUserID(userID);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.US[]> GetUserStaffByUserIDAsync(System.Guid userID) {
            return base.Channel.GetUserStaffByUserIDAsync(userID);
        }
        
        public int CleanupUserStaffByUserID(System.Guid userID) {
            return base.Channel.CleanupUserStaffByUserID(userID);
        }
        
        public System.Threading.Tasks.Task<int> CleanupUserStaffByUserIDAsync(System.Guid userID) {
            return base.Channel.CleanupUserStaffByUserIDAsync(userID);
        }
        
        public KeyPair.PairActor.ContentService.JT[] GetJobTypeList() {
            return base.Channel.GetJobTypeList();
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.JT[]> GetJobTypeListAsync() {
            return base.Channel.GetJobTypeListAsync();
        }
        
        public KeyPair.PairActor.ContentService.UGR SetUserGiftRequest(KeyPair.PairActor.ContentService.UGR input) {
            return base.Channel.SetUserGiftRequest(input);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UGR> SetUserGiftRequestAsync(KeyPair.PairActor.ContentService.UGR input) {
            return base.Channel.SetUserGiftRequestAsync(input);
        }
        
        public KeyPair.PairActor.ContentService.UGRE SetUserGiftRecipient(KeyPair.PairActor.ContentService.UGRE input) {
            return base.Channel.SetUserGiftRecipient(input);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UGRE> SetUserGiftRecipientAsync(KeyPair.PairActor.ContentService.UGRE input) {
            return base.Channel.SetUserGiftRecipientAsync(input);
        }
        
        public KeyPair.PairActor.ContentService.UGR GetUserGiftRequestByGiftRequestKey(System.Guid input) {
            return base.Channel.GetUserGiftRequestByGiftRequestKey(input);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UGR> GetUserGiftRequestByGiftRequestKeyAsync(System.Guid input) {
            return base.Channel.GetUserGiftRequestByGiftRequestKeyAsync(input);
        }
        
        public KeyPair.PairActor.ContentService.UA[] GetUserActivityByUserID(System.Guid userID) {
            return base.Channel.GetUserActivityByUserID(userID);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UA[]> GetUserActivityByUserIDAsync(System.Guid userID) {
            return base.Channel.GetUserActivityByUserIDAsync(userID);
        }
        
        public KeyPair.PairActor.ContentService.UA[] GetUserActivityByProductGroupID(System.Guid userID, int productGroupID) {
            return base.Channel.GetUserActivityByProductGroupID(userID, productGroupID);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UA[]> GetUserActivityByProductGroupIDAsync(System.Guid userID, int productGroupID) {
            return base.Channel.GetUserActivityByProductGroupIDAsync(userID, productGroupID);
        }
        
        public int GetUserActivityCountByUserActivityTypeID(System.Guid userID, int productGroupID, int userActivityTypeID) {
            return base.Channel.GetUserActivityCountByUserActivityTypeID(userID, productGroupID, userActivityTypeID);
        }
        
        public System.Threading.Tasks.Task<int> GetUserActivityCountByUserActivityTypeIDAsync(System.Guid userID, int productGroupID, int userActivityTypeID) {
            return base.Channel.GetUserActivityCountByUserActivityTypeIDAsync(userID, productGroupID, userActivityTypeID);
        }
        
        public KeyPair.PairActor.ContentService.UAT[] GetActivityTypeList() {
            return base.Channel.GetActivityTypeList();
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UAT[]> GetActivityTypeListAsync() {
            return base.Channel.GetActivityTypeListAsync();
        }
        
        public KeyPair.PairActor.ContentService.UA SetUserActivity(KeyPair.PairActor.ContentService.UA input) {
            return base.Channel.SetUserActivity(input);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UA> SetUserActivityAsync(KeyPair.PairActor.ContentService.UA input) {
            return base.Channel.SetUserActivityAsync(input);
        }
        
        public KeyPair.PairActor.ContentService.UA SetUserActivityByProductGroupID(KeyPair.PairActor.ContentService.UA input, int productGroupID) {
            return base.Channel.SetUserActivityByProductGroupID(input, productGroupID);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UA> SetUserActivityByProductGroupIDAsync(KeyPair.PairActor.ContentService.UA input, int productGroupID) {
            return base.Channel.SetUserActivityByProductGroupIDAsync(input, productGroupID);
        }
        
        public KeyPair.PairActor.ContentService.Pairs GetKeyValuePair(System.Guid userID, System.Nullable<int> pairId) {
            return base.Channel.GetKeyValuePair(userID, pairId);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.Pairs> GetKeyValuePairAsync(System.Guid userID, System.Nullable<int> pairId) {
            return base.Channel.GetKeyValuePairAsync(userID, pairId);
        }
        
        public bool SetKeyValuePair(System.Guid userID, int pairId, KeyPair.PairActor.ContentService.Pairs pairs) {
            return base.Channel.SetKeyValuePair(userID, pairId, pairs);
        }
        
        public System.Threading.Tasks.Task<bool> SetKeyValuePairAsync(System.Guid userID, int pairId, KeyPair.PairActor.ContentService.Pairs pairs) {
            return base.Channel.SetKeyValuePairAsync(userID, pairId, pairs);
        }
        
        public bool DelKeyValuePair(System.Guid userID, int pairId) {
            return base.Channel.DelKeyValuePair(userID, pairId);
        }
        
        public System.Threading.Tasks.Task<bool> DelKeyValuePairAsync(System.Guid userID, int pairId) {
            return base.Channel.DelKeyValuePairAsync(userID, pairId);
        }
        
        public bool DelKeyValuePairByKey(System.Guid userID, int pairId, string pairKey) {
            return base.Channel.DelKeyValuePairByKey(userID, pairId, pairKey);
        }
        
        public System.Threading.Tasks.Task<bool> DelKeyValuePairByKeyAsync(System.Guid userID, int pairId, string pairKey) {
            return base.Channel.DelKeyValuePairByKeyAsync(userID, pairId, pairKey);
        }
        
        public bool DelKeyValuePairByKeys(System.Guid userID, int pairId, string[] pairKeys) {
            return base.Channel.DelKeyValuePairByKeys(userID, pairId, pairKeys);
        }
        
        public System.Threading.Tasks.Task<bool> DelKeyValuePairByKeysAsync(System.Guid userID, int pairId, string[] pairKeys) {
            return base.Channel.DelKeyValuePairByKeysAsync(userID, pairId, pairKeys);
        }
        
        public bool TransferGuestKeyValuePair(System.Guid guestuserID, System.Guid parentuserId) {
            return base.Channel.TransferGuestKeyValuePair(guestuserID, parentuserId);
        }
        
        public System.Threading.Tasks.Task<bool> TransferGuestKeyValuePairAsync(System.Guid guestuserID, System.Guid parentuserId) {
            return base.Channel.TransferGuestKeyValuePairAsync(guestuserID, parentuserId);
        }
        
        public KeyPair.PairActor.ContentService.MasteryData GetLessonMastery(int productID, System.Guid userID) {
            return base.Channel.GetLessonMastery(productID, userID);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.MasteryData> GetLessonMasteryAsync(int productID, System.Guid userID) {
            return base.Channel.GetLessonMasteryAsync(productID, userID);
        }
        
        public bool SetLessonMastery(int productGroupID, int productID, System.Guid userID, KeyPair.PairActor.ContentService.MasteryData masteryData) {
            return base.Channel.SetLessonMastery(productGroupID, productID, userID, masteryData);
        }
        
        public System.Threading.Tasks.Task<bool> SetLessonMasteryAsync(int productGroupID, int productID, System.Guid userID, KeyPair.PairActor.ContentService.MasteryData masteryData) {
            return base.Channel.SetLessonMasteryAsync(productGroupID, productID, userID, masteryData);
        }
        
        public bool SetLessonStatus(int productID, System.Guid userID, KeyPair.PairActor.ContentService.LessonData lessonData) {
            return base.Channel.SetLessonStatus(productID, userID, lessonData);
        }
        
        public System.Threading.Tasks.Task<bool> SetLessonStatusAsync(int productID, System.Guid userID, KeyPair.PairActor.ContentService.LessonData lessonData) {
            return base.Channel.SetLessonStatusAsync(productID, userID, lessonData);
        }
        
        public KeyPair.PairActor.ContentService.LessonRankData[] GetTopUsersByCorrectAnswer(int productGroupID, KeyPair.PairActor.ContentService.DateRange dateRange, int quantity) {
            return base.Channel.GetTopUsersByCorrectAnswer(productGroupID, dateRange, quantity);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.LessonRankData[]> GetTopUsersByCorrectAnswerAsync(int productGroupID, KeyPair.PairActor.ContentService.DateRange dateRange, int quantity) {
            return base.Channel.GetTopUsersByCorrectAnswerAsync(productGroupID, dateRange, quantity);
        }
        
        public KeyPair.PairActor.ContentService.UserMissionData GetUserMission(int productID, System.Guid userID, int worldId) {
            return base.Channel.GetUserMission(productID, userID, worldId);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UserMissionData> GetUserMissionAsync(int productID, System.Guid userID, int worldId) {
            return base.Channel.GetUserMissionAsync(productID, userID, worldId);
        }
        
        public bool SetUserMission(int productGroupID, int productID, System.Guid userID, int worldId, int missionId, int stepId, int taskId) {
            return base.Channel.SetUserMission(productGroupID, productID, userID, worldId, missionId, stepId, taskId);
        }
        
        public System.Threading.Tasks.Task<bool> SetUserMissionAsync(int productGroupID, int productID, System.Guid userID, int worldId, int missionId, int stepId, int taskId) {
            return base.Channel.SetUserMissionAsync(productGroupID, productID, userID, worldId, missionId, stepId, taskId);
        }
        
        public bool SetUserMissionComplete(int productGroupID, int productID, System.Guid userID, int worldId, int missionId) {
            return base.Channel.SetUserMissionComplete(productGroupID, productID, userID, worldId, missionId);
        }
        
        public System.Threading.Tasks.Task<bool> SetUserMissionCompleteAsync(int productGroupID, int productID, System.Guid userID, int worldId, int missionId) {
            return base.Channel.SetUserMissionCompleteAsync(productGroupID, productID, userID, worldId, missionId);
        }
        
        public KeyPair.PairActor.ContentService.PetData GetCurrentPetByUserID(int productID, System.Guid userID) {
            return base.Channel.GetCurrentPetByUserID(productID, userID);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.PetData> GetCurrentPetByUserIDAsync(int productID, System.Guid userID) {
            return base.Channel.GetCurrentPetByUserIDAsync(productID, userID);
        }
        
        public KeyPair.PairActor.ContentService.PetData GetAdoptedPetData(int productID, System.Guid userID) {
            return base.Channel.GetAdoptedPetData(productID, userID);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.PetData> GetAdoptedPetDataAsync(int productID, System.Guid userID) {
            return base.Channel.GetAdoptedPetDataAsync(productID, userID);
        }
        
        public bool SetCurrentPetData(int productID, System.Guid userID, KeyPair.PairActor.ContentService.PetData petData) {
            return base.Channel.SetCurrentPetData(productID, userID, petData);
        }
        
        public System.Threading.Tasks.Task<bool> SetCurrentPetDataAsync(int productID, System.Guid userID, KeyPair.PairActor.ContentService.PetData petData) {
            return base.Channel.SetCurrentPetDataAsync(productID, userID, petData);
        }
        
        public bool SetAdoptedPet(int productID, System.Guid userID, KeyPair.PairActor.ContentService.PetData petData) {
            return base.Channel.SetAdoptedPet(productID, userID, petData);
        }
        
        public System.Threading.Tasks.Task<bool> SetAdoptedPetAsync(int productID, System.Guid userID, KeyPair.PairActor.ContentService.PetData petData) {
            return base.Channel.SetAdoptedPetAsync(productID, userID, petData);
        }
        
        public bool DelCurrentPet(int productID, System.Guid userID) {
            return base.Channel.DelCurrentPet(productID, userID);
        }
        
        public System.Threading.Tasks.Task<bool> DelCurrentPetAsync(int productID, System.Guid userID) {
            return base.Channel.DelCurrentPetAsync(productID, userID);
        }
        
        public KeyPair.PairActor.ContentService.ProductData GetProduct(int productGroupID, int productID, System.Guid userID, int subscriptionID) {
            return base.Channel.GetProduct(productGroupID, productID, userID, subscriptionID);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.ProductData> GetProductAsync(int productGroupID, int productID, System.Guid userID, int subscriptionID) {
            return base.Channel.GetProductAsync(productGroupID, productID, userID, subscriptionID);
        }
        
        public KeyPair.PairActor.ContentService.ProductPlatform[] GetProductPlatformMap() {
            return base.Channel.GetProductPlatformMap();
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.ProductPlatform[]> GetProductPlatformMapAsync() {
            return base.Channel.GetProductPlatformMapAsync();
        }
        
        public bool SetProduct(int productGroupID, int productID, System.Guid userID, KeyPair.PairActor.ContentService.ProductData productData) {
            return base.Channel.SetProduct(productGroupID, productID, userID, productData);
        }
        
        public System.Threading.Tasks.Task<bool> SetProductAsync(int productGroupID, int productID, System.Guid userID, KeyPair.PairActor.ContentService.ProductData productData) {
            return base.Channel.SetProductAsync(productGroupID, productID, userID, productData);
        }
        
        public int GetProductGroupID(int productID) {
            return base.Channel.GetProductGroupID(productID);
        }
        
        public System.Threading.Tasks.Task<int> GetProductGroupIDAsync(int productID) {
            return base.Channel.GetProductGroupIDAsync(productID);
        }
        
        public KeyPair.PairActor.ContentService.SceneData GetSceneByUserID(int productID, System.Guid userID, string sceneName) {
            return base.Channel.GetSceneByUserID(productID, userID, sceneName);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.SceneData> GetSceneByUserIDAsync(int productID, System.Guid userID, string sceneName) {
            return base.Channel.GetSceneByUserIDAsync(productID, userID, sceneName);
        }
        
        public bool SetScene(int productGroupID, int productID, System.Guid userID, string sceneName, KeyPair.PairActor.ContentService.SceneData sceneData) {
            return base.Channel.SetScene(productGroupID, productID, userID, sceneName, sceneData);
        }
        
        public System.Threading.Tasks.Task<bool> SetSceneAsync(int productGroupID, int productID, System.Guid userID, string sceneName, KeyPair.PairActor.ContentService.SceneData sceneData) {
            return base.Channel.SetSceneAsync(productGroupID, productID, userID, sceneName, sceneData);
        }
        
        public KeyPair.PairActor.ContentService.UserBadge GetUserBadgeComplete(int productID, System.Guid userID) {
            return base.Channel.GetUserBadgeComplete(productID, userID);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UserBadge> GetUserBadgeCompleteAsync(int productID, System.Guid userID) {
            return base.Channel.GetUserBadgeCompleteAsync(productID, userID);
        }
        
        public bool SetUserBadgeComplete(int productID, System.Guid userID, int badgeId) {
            return base.Channel.SetUserBadgeComplete(productID, userID, badgeId);
        }
        
        public System.Threading.Tasks.Task<bool> SetUserBadgeCompleteAsync(int productID, System.Guid userID, int badgeId) {
            return base.Channel.SetUserBadgeCompleteAsync(productID, userID, badgeId);
        }
        
        public KeyPair.PairActor.ContentService.UserTreasureChestData GetUserTreasureChest(int productID, System.Guid userID, string sceneName, string groupName) {
            return base.Channel.GetUserTreasureChest(productID, userID, sceneName, groupName);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.UserTreasureChestData> GetUserTreasureChestAsync(int productID, System.Guid userID, string sceneName, string groupName) {
            return base.Channel.GetUserTreasureChestAsync(productID, userID, sceneName, groupName);
        }
        
        public bool SetUserTreasureChest(int productID, System.Guid userID, string sceneName, string groupName, KeyPair.PairActor.ContentService.UserTreasureChestData userTreasureChestData) {
            return base.Channel.SetUserTreasureChest(productID, userID, sceneName, groupName, userTreasureChestData);
        }
        
        public System.Threading.Tasks.Task<bool> SetUserTreasureChestAsync(int productID, System.Guid userID, string sceneName, string groupName, KeyPair.PairActor.ContentService.UserTreasureChestData userTreasureChestData) {
            return base.Channel.SetUserTreasureChestAsync(productID, userID, sceneName, groupName, userTreasureChestData);
        }
        
        public bool SetUserChestFound(int productID, System.Guid userID, string sceneName, string groupName, string chestName) {
            return base.Channel.SetUserChestFound(productID, userID, sceneName, groupName, chestName);
        }
        
        public System.Threading.Tasks.Task<bool> SetUserChestFoundAsync(int productID, System.Guid userID, string sceneName, string groupName, string chestName) {
            return base.Channel.SetUserChestFoundAsync(productID, userID, sceneName, groupName, chestName);
        }
        
        public KeyPair.PairActor.ContentService.TI[] GetTracksByUserID(int category, System.Guid userID) {
            return base.Channel.GetTracksByUserID(category, userID);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.TI[]> GetTracksByUserIDAsync(int category, System.Guid userID) {
            return base.Channel.GetTracksByUserIDAsync(category, userID);
        }
        
        public KeyPair.PairActor.ContentService.TI[] GetTracksByIDs(string trackIDs) {
            return base.Channel.GetTracksByIDs(trackIDs);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.TI[]> GetTracksByIDsAsync(string trackIDs) {
            return base.Channel.GetTracksByIDsAsync(trackIDs);
        }
        
        public KeyPair.PairActor.ContentService.TE[] GetTrackElements(int trackID) {
            return base.Channel.GetTrackElements(trackID);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.TE[]> GetTrackElementsAsync(int trackID) {
            return base.Channel.GetTrackElementsAsync(trackID);
        }
        
        public System.Guid[] RemoveUserWithoutTrack(System.Guid[] userIDS) {
            return base.Channel.RemoveUserWithoutTrack(userIDS);
        }
        
        public System.Threading.Tasks.Task<System.Guid[]> RemoveUserWithoutTrackAsync(System.Guid[] userIDS) {
            return base.Channel.RemoveUserWithoutTrackAsync(userIDS);
        }
        
        public KeyPair.PairActor.ContentService.TI SetTrack(KeyPair.PairActor.ContentService.UT trackSetRequest, byte[] imageFile, System.Guid parentID) {
            return base.Channel.SetTrack(trackSetRequest, imageFile, parentID);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.TI> SetTrackAsync(KeyPair.PairActor.ContentService.UT trackSetRequest, byte[] imageFile, System.Guid parentID) {
            return base.Channel.SetTrackAsync(trackSetRequest, imageFile, parentID);
        }
        
        public bool DeleteTrack(int trackID) {
            return base.Channel.DeleteTrack(trackID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteTrackAsync(int trackID) {
            return base.Channel.DeleteTrackAsync(trackID);
        }
        
        public bool PurchaseGift(int productGroupID, int productID, System.Guid userID, System.Guid receiverUserID, int itemID, int containerID, int storeID, int currencyType) {
            return base.Channel.PurchaseGift(productGroupID, productID, userID, receiverUserID, itemID, containerID, storeID, currencyType);
        }
        
        public System.Threading.Tasks.Task<bool> PurchaseGiftAsync(int productGroupID, int productID, System.Guid userID, System.Guid receiverUserID, int itemID, int containerID, int storeID, int currencyType) {
            return base.Channel.PurchaseGiftAsync(productGroupID, productID, userID, receiverUserID, itemID, containerID, storeID, currencyType);
        }
        
        public KeyPair.PairActor.ContentService.GiftTransactionInfo[] GetGiftsReceivedByUserID(int productGroupID, System.Guid userID) {
            return base.Channel.GetGiftsReceivedByUserID(productGroupID, userID);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.GiftTransactionInfo[]> GetGiftsReceivedByUserIDAsync(int productGroupID, System.Guid userID) {
            return base.Channel.GetGiftsReceivedByUserIDAsync(productGroupID, userID);
        }
        
        public KeyPair.PairActor.ContentService.AR[] UseTickets(int productGroupID, System.Guid userID, int achievementID, int quantity) {
            return base.Channel.UseTickets(productGroupID, userID, achievementID, quantity);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.AR[]> UseTicketsAsync(int productGroupID, System.Guid userID, int achievementID, int quantity) {
            return base.Channel.UseTicketsAsync(productGroupID, userID, achievementID, quantity);
        }
        
        public KeyPair.PairActor.ContentService.ProductItem[] GetAllProducts() {
            return base.Channel.GetAllProducts();
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.ProductItem[]> GetAllProductsAsync() {
            return base.Channel.GetAllProductsAsync();
        }
        
        public bool IsDisplayNameUnique(string userName, int productGroupID) {
            return base.Channel.IsDisplayNameUnique(userName, productGroupID);
        }
        
        public System.Threading.Tasks.Task<bool> IsDisplayNameUniqueAsync(string userName, int productGroupID) {
            return base.Channel.IsDisplayNameUniqueAsync(userName, productGroupID);
        }
        
        public bool SetUniqueDisplayName(string userName, int productGroupID) {
            return base.Channel.SetUniqueDisplayName(userName, productGroupID);
        }
        
        public System.Threading.Tasks.Task<bool> SetUniqueDisplayNameAsync(string userName, int productGroupID) {
            return base.Channel.SetUniqueDisplayNameAsync(userName, productGroupID);
        }
        
        public bool RemoveUniqueDisplayName(string[] displayNames, int productGroupID) {
            return base.Channel.RemoveUniqueDisplayName(displayNames, productGroupID);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveUniqueDisplayNameAsync(string[] displayNames, int productGroupID) {
            return base.Channel.RemoveUniqueDisplayNameAsync(displayNames, productGroupID);
        }
        
        public KeyPair.PairActor.ContentService.SetNextItemStateResult SetNextItemState(KeyPair.PairActor.ContentService.SetNextItemStateRequest setNextItemStateRequest) {
            return base.Channel.SetNextItemState(setNextItemStateRequest);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.SetNextItemStateResult> SetNextItemStateAsync(KeyPair.PairActor.ContentService.SetNextItemStateRequest setNextItemStateRequest) {
            return base.Channel.SetNextItemStateAsync(setNextItemStateRequest);
        }
        
        public KeyPair.PairActor.ContentService.SetSpeedUpItemResult SetSpeedUpItem(KeyPair.PairActor.ContentService.SetSpeedUpItemRequest setSpeedUpItemRequest) {
            return base.Channel.SetSpeedUpItem(setSpeedUpItemRequest);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.SetSpeedUpItemResult> SetSpeedUpItemAsync(KeyPair.PairActor.ContentService.SetSpeedUpItemRequest setSpeedUpItemRequest) {
            return base.Channel.SetSpeedUpItemAsync(setSpeedUpItemRequest);
        }
        
        public KeyPair.PairActor.ContentService.DeleteProfileStatus DeleteProfile(KeyPair.PairActor.ContentService.DeleteProfileRequest deleteProfileRequest) {
            return base.Channel.DeleteProfile(deleteProfileRequest);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.DeleteProfileStatus> DeleteProfileAsync(KeyPair.PairActor.ContentService.DeleteProfileRequest deleteProfileRequest) {
            return base.Channel.DeleteProfileAsync(deleteProfileRequest);
        }
        
        public KeyPair.PairActor.ContentService.NameValidationResponse ValidateName(int productGroupID, KeyPair.PairActor.ContentService.NameValidationRequest nameValidationRequest) {
            return base.Channel.ValidateName(productGroupID, nameValidationRequest);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.NameValidationResponse> ValidateNameAsync(int productGroupID, KeyPair.PairActor.ContentService.NameValidationRequest nameValidationRequest) {
            return base.Channel.ValidateNameAsync(productGroupID, nameValidationRequest);
        }
        
        public KeyPair.PairActor.ContentService.USP GetUserSubscriptionProvider(System.Guid UserID) {
            return base.Channel.GetUserSubscriptionProvider(UserID);
        }
        
        public System.Threading.Tasks.Task<KeyPair.PairActor.ContentService.USP> GetUserSubscriptionProviderAsync(System.Guid UserID) {
            return base.Channel.GetUserSubscriptionProviderAsync(UserID);
        }
        
        public System.Nullable<System.Guid> GetUserByExternalUserID(string externalUserID, string externalAppID, KeyPair.PairActor.ContentService.ExternalAuthProvider externalAuthProvider, int productFamilyID) {
            return base.Channel.GetUserByExternalUserID(externalUserID, externalAppID, externalAuthProvider, productFamilyID);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> GetUserByExternalUserIDAsync(string externalUserID, string externalAppID, KeyPair.PairActor.ContentService.ExternalAuthProvider externalAuthProvider, int productFamilyID) {
            return base.Channel.GetUserByExternalUserIDAsync(externalUserID, externalAppID, externalAuthProvider, productFamilyID);
        }
        
        public bool SetCommonInventoryAttribute(int commonInventoryId, KeyPair.PairActor.ContentService.Pairs useritemAttributes) {
            return base.Channel.SetCommonInventoryAttribute(commonInventoryId, useritemAttributes);
        }
        
        public System.Threading.Tasks.Task<bool> SetCommonInventoryAttributeAsync(int commonInventoryId, KeyPair.PairActor.ContentService.Pairs useritemAttributes) {
            return base.Channel.SetCommonInventoryAttributeAsync(commonInventoryId, useritemAttributes);
        }
    }
}
